!function(n){var t={};function e(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return n[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=n,e.c=t,e.d=function(n,t,o){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:o})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var r in n)e.d(o,r,function(t){return n[t]}.bind(null,r));return o},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="/public/",e(e.s=9)}([function(n,t,e){
/* Riot v3.11.1, @license MIT */
!function(n){"use strict";function t(n,t){return(t||document).querySelector(n)}var e,o,r=[],i={},a="yield",l="__global_mixin",s="riot-",d=["ref","data-ref"],c="data-is",p="if",u="each",m="no-reorder",f="show",g="hide",b="key",h="__riot-events__",x="string",v="object",y="undefined",w="function",k="http://www.w3.org/1999/xlink",T="http://www.w3.org/2000/svg",C=/^xlink:(\w+)/,j=typeof window===y?void 0:window,E=/^on/,S=/([-\w]+) ?= ?(?:"([^"]*)|'([^']*)|({[^}]*}))/g,A={viewbox:"viewBox",preserveaspectratio:"preserveAspectRatio"},N=/^(?:disabled|checked|readonly|required|allowfullscreen|auto(?:focus|play)|compact|controls|default|formnovalidate|hidden|ismap|itemscope|loop|multiple|muted|no(?:resize|shade|validate|wrap)?|open|reversed|seamless|selected|sortable|truespeed|typemustmatch)$/,L=0|(j&&j.document||{}).documentMode;function _(n){return"svg"===n?document.createElementNS(T,n):document.createElement(n)}function z(n,t,e){var o=C.exec(t);o&&o[1]?n.setAttributeNS(k,o[1],e):n.setAttribute(t,e)}var D={},O=!1;j&&(e=function(){var n=_("style"),e=t("style[type=riot]");return z(n,"type","text/css"),e?(e.id&&(n.id=e.id),e.parentNode.replaceChild(n,e)):document.head.appendChild(n),n}(),o=e.styleSheet);var M={styleNode:e,add:function(n,t){D[t]=n,O=!0},inject:function(){if(j&&O){O=!1;var n=Object.keys(D).map(function(n){return D[n]}).join("\n");o?o.cssText=n:e.innerHTML=n}},remove:function(n){delete D[n],O=!0}},q=function(){var n="[{(,;:?=|&!^~>%*/",t=["case","default","do","else","in","instanceof","prefix","return","typeof","void","yield"],e=t.reduce(function(n,t){return n+t.slice(-1)},""),o=/^\/(?=[^*>/])[^[/\\]*(?:(?:\\.|\[(?:\\.|[^\]\\]*)*\])[^[\\/]*)*?\/[gimuy]*/,r=/[$\w]/;function i(n,t){for(;--t>=0&&/\s/.test(n[t]););return t}return function(a,l){var s=/.*/g,d=s.lastIndex=l++,c=s.exec(a)[0].match(o);if(c){var p=d+c[0].length;d=i(a,d);var u=a[d];if(d<0||~n.indexOf(u))return p;if("."===u)"."===a[d-1]&&(l=p);else if("+"===u||"-"===u)(a[--d]!==u||(d=i(a,d))<0||!r.test(a[d]))&&(l=p);else if(~e.indexOf(u)){for(var m=d+1;--d>=0&&r.test(a[d]););~t.indexOf(a.slice(d+1,m))&&(l=p)}}return l}}(),R=function(n){var t,e,o="g",r=/"[^"\\]*(?:\\[\S\s][^"\\]*)*"|'[^'\\]*(?:\\[\S\s][^'\\]*)*'|`[^`\\]*(?:\\[\S\s][^`\\]*)*`/g,i=r.source+"|"+/(?:\breturn\s+|(?:[$\w\)\]]|\+\+|--)\s*(\/)(?![*\/]))/.source+"|"+/\/(?=[^*\/])[^[\/\\]*(?:(?:\[(?:\\.|[^\]\\]*)*\]|\\.)[^[\/\\]*)*?([^<]\/)[gim]*/.source,a=RegExp("[\\x00-\\x1F<>a-zA-Z0-9'\",;\\\\]"),l=/(?=[[\]()*+?.^$|])/g,s=r.source+"|"+/(\/)(?![*\/])/.source,d={"(":RegExp("([()])|"+s,o),"[":RegExp("([[\\]])|"+s,o),"{":RegExp("([{}])|"+s,o)},c="{ }",p=["{","}","{","}",/{[^}]*}/,/\\([{}])/g,/\\({)|{/g,RegExp("\\\\(})|([[({])|(})|"+s,o),c,/^\s*{\^?\s*([$\w]+)(?:\s*,\s*(\S+))?\s+in\s+(\S.*)\s*}/,/(^|[^\\]){=[\S\s]*?}/],u=void 0,m=[];function f(n){return n}function g(n,t){return t||(t=m),new RegExp(n.source.replace(/{/g,t[2]).replace(/}/g,t[3]),n.global?o:"")}function b(n){if(n===c)return p;var t=n.split(" ");if(2!==t.length||a.test(n))throw new Error('Unsupported brackets "'+n+'"');return(t=t.concat(n.replace(l,"\\").split(" ")))[4]=g(t[1].length>1?/{[\S\s]*?}/:p[4],t),t[5]=g(n.length>3?/\\({|})/g:p[5],t),t[6]=g(p[6],t),t[7]=RegExp("\\\\("+t[3]+")|([[({])|("+t[3]+")|"+s,o),t[8]=n,t}function h(n){return n instanceof RegExp?t(n):m[n]}function x(n){(n||(n=c))!==m[8]&&(m=b(n),t=n===c?f:g,m[9]=t(p[9])),u=n}return h.split=function(n,t,e){e||(e=m);var o,r,i,a,l,s,c=[],p=e[6],u=[],f="";for(r=i=p.lastIndex=0;o=p.exec(n);){if(s=p.lastIndex,a=o.index,r){if(o[2]){var g=o[2],b=d[g],h=1;for(b.lastIndex=s;o=b.exec(n);)if(o[1]){if(o[1]===g)++h;else if(!--h)break}else b.lastIndex=v(o.index,b.lastIndex,o[2]);p.lastIndex=h?n.length:b.lastIndex;continue}if(!o[3]){p.lastIndex=v(a,s,o[4]);continue}}o[1]||(x(n.slice(i,a)),i=p.lastIndex,(p=e[6+(r^=1)]).lastIndex=i)}return n&&i<n.length&&x(n.slice(i)),c.qblocks=u,c;function x(n){f&&(n=f+n,f=""),t||r?c.push(n&&n.replace(e[5],"$1")):c.push(n)}function v(e,o,r){return r&&(o=q(n,e)),t&&o>e+2&&(l="⁗"+u.length+"~",u.push(n.slice(e,o)),f+=n.slice(i,e)+l,i=o),o}},h.hasExpr=function(n){return m[4].test(n)},h.loopKeys=function(n){var t=n.match(m[9]);return t?{key:t[1],pos:t[2],val:m[0]+t[3].trim()+m[1]}:{val:n.trim()}},h.array=function(n){return n?b(n):m},Object.defineProperty(h,"settings",{set:function(n){var t;t=(n=n||{}).brackets,Object.defineProperty(n,"brackets",{set:x,get:function(){return u},enumerable:!0}),e=n,x(t)},get:function(){return e}}),h.settings="undefined"!=typeof riot&&riot.settings||{},h.set=x,h.skipRegex=q,h.R_STRINGS=r,h.R_MLCOMMS=/\/\*[^*]*\*+(?:[^*\/][^*]*\*+)*\//g,h.S_QBLOCKS=i,h.S_QBLOCK2=s,h}(),H=function(){var n={};function t(r,i){return r?(n[r]||(n[r]=function(n){var t=function(n){var t,r=R.split(n.replace(e,'"'),1),i=r.qblocks;if(r.length>2||r[0]){var l,s,d=[];for(l=s=0;l<r.length;++l)(t=r[l])&&(t=1&l?a(t,1,i):'"'+t.replace(/\\/g,"\\\\").replace(/\r\n?|\n/g,"\\n").replace(/"/g,'\\"')+'"')&&(d[s++]=t);t=s<2?d[0]:"["+d.join(",")+'].join("")'}else t=a(r[1],0,i);return i.length&&(t=t.replace(o,function(n,t){return i[t].replace(/\r/g,"\\r").replace(/\n/g,"\\n")})),t}(n);return"try{return "!==t.slice(0,11)&&(t="return "+t),new Function("E",t+";")}(r))).call(i,function(n,e){n.riotData={tagName:e&&e.__&&e.__.tagName,_riot_id:e&&e._riot_id},t.errorHandler?t.errorHandler(n):"undefined"!=typeof console&&"function"==typeof console.error&&(console.error(n.message),console.log("<%s> %s",n.riotData.tagName||"Unknown tag",this.tmpl),console.log(this.data))}.bind({data:i,tmpl:r})):r}t.hasExpr=R.hasExpr,t.loopKeys=R.loopKeys,t.clearCache=function(){n={}},t.errorHandler=null;var e=/\u2057/g,o=/\u2057(\d+)~/g,r=/^(?:(-?[_A-Za-z\xA0-\xFF][-\w\xA0-\xFF]*)|\u2057(\d+)~):/,i={"(":/[()]/g,"[":/[[\]]/g,"{":/[{}]/g};function a(n,t,e){if(n=n.replace(/\s+/g," ").trim().replace(/\ ?([[\({},?\.:])\ ?/g,"$1")){for(var o,a=[],l=0;n&&(o=n.match(r))&&!o.index;){var s,d,p=/,|([[{(])|$/g;for(n=RegExp.rightContext,s=o[2]?e[o[2]].slice(1,-1).trim().replace(/\s+/g," "):o[1];d=(o=p.exec(n))[1];)u(d,p);d=n.slice(0,o.index),n=RegExp.rightContext,a[l++]=c(d,1,s)}n=l?l>1?"["+a.join(",")+'].join(" ").trim()':a[0]:c(n,t)}return n;function u(t,e){var o,r=1,a=i[t];for(a.lastIndex=e.lastIndex;o=a.exec(n);)if(o[0]===t)++r;else if(!--r)break;e.lastIndex=r?n.length:a.lastIndex}}var l='"in this?this:'+("object"!=typeof window?"global":"window")+").",s=/[,{][\$\w]+(?=:)|(^ *|[^$\w\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\w]))([$_A-Za-z][$\w]*)/g,d=/^(?=(\.[$\w]+))\1(?:[^.[(]|$)/;function c(n,t,e){var o;return n=n.replace(s,function(n,t,e,r,i){return e&&(r=o?0:r+n.length,"this"!==e&&"global"!==e&&"window"!==e?(n=t+'("'+e+l+e,r&&(o="."===(i=i[r])||"("===i||"["===i)):r&&(o=!d.test(i.slice(r)))),n}),o&&(n="try{return "+n+"}catch(e){E(e,this)}"),e?n=(o?"function(){"+n+"}.call(this)":"("+n+")")+'?"'+e+'":""':t&&(n="function(v){"+(o?n.replace("return ","v="):"v=("+n+")")+';return v||v===0?v:""}.call(this)'),n}return t.version=R.version="v3.0.8",t}(),P=function(n){n=n||{};var t={},e=Array.prototype.slice;return Object.defineProperties(n,{on:{value:function(e,o){return"function"==typeof o&&(t[e]=t[e]||[]).push(o),n},enumerable:!1,writable:!1,configurable:!1},off:{value:function(e,o){if("*"!=e||o)if(o)for(var r,i=t[e],a=0;r=i&&i[a];++a)r==o&&i.splice(a--,1);else delete t[e];else t={};return n},enumerable:!1,writable:!1,configurable:!1},one:{value:function(t,e){return n.on(t,function o(){n.off(t,o),e.apply(n,arguments)})},enumerable:!1,writable:!1,configurable:!1},trigger:{value:function(o){var r,i,a,l=arguments,s=arguments.length-1,d=new Array(s);for(a=0;a<s;a++)d[a]=l[a+1];for(r=e.call(t[o]||[],0),a=0;i=r[a];++a)i.apply(n,d);return t["*"]&&"*"!=o&&n.trigger.apply(n,["*",o].concat(d)),n},enumerable:!1,writable:!1,configurable:!1}}),n};function I(n,t){return Object.getOwnPropertyDescriptor(n,t)}function B(n){return typeof n===y}function $(n,t){var e=I(n,t);return B(n[t])||e&&e.writable}function U(n){for(var t,e=1,o=arguments,r=o.length;e<r;e++)if(t=o[e])for(var i in t)$(n,i)&&(n[i]=t[i]);return n}function F(n){return Object.create(n)}var W=U(F(R.settings),{skipAnonymousTags:!0,autoUpdate:!0});function V(n,t){return[].slice.call((t||document).querySelectorAll(n))}function X(){return document.createTextNode("")}function G(n,t){n.style.display=t?"":"none",n.hidden=!t}function Y(n,t){return n.getAttribute(t)}function J(n,t){n.removeAttribute(t)}function K(n,t,e){if(e){var o=n.ownerDocument.importNode((new DOMParser).parseFromString('<svg xmlns="'+T+'">'+t+"</svg>","application/xml").documentElement,!0);n.appendChild(o)}else n.innerHTML=t}function Q(n,t){if(n)for(var e;e=S.exec(n);)t(e[1].toLowerCase(),e[2]||e[3]||e[4])}function Z(){return document.createDocumentFragment()}function nn(n,t,e){n.insertBefore(t,e.parentNode&&e)}function tn(n){return Object.keys(n).reduce(function(t,e){return t+" "+e+": "+n[e]+";"},"")}function en(n,t,e){if(n){var o,r=t(n,e);if(!1===r)return;for(n=n.firstChild;n;)o=n.nextSibling,en(n,t,r),n=o}}var on=Object.freeze({$$:V,$:t,createDOMPlaceholder:X,mkEl:_,setAttr:z,toggleVisibility:G,getAttr:Y,remAttr:J,setInnerHTML:K,walkAttrs:Q,createFrag:Z,safeInsert:nn,styleObjectToString:tn,walkNodes:en});function rn(n){return B(n)||null===n}function an(n){return rn(n)||""===n}function ln(n){return typeof n===w}function sn(n){return n&&typeof n===v}function dn(n){var t=n.ownerSVGElement;return!!t||null===t}function cn(n){return Array.isArray(n)||n instanceof Array}function pn(n){return N.test(n)}function un(n){return typeof n===x}var mn=Object.freeze({isBlank:an,isFunction:ln,isObject:sn,isSvg:dn,isWritable:$,isArray:cn,isBoolAttr:pn,isNil:rn,isString:un,isUndefined:B});function fn(n,t){return-1!==n.indexOf(t)}function gn(n,t){for(var e=n?n.length:0,o=0;o<e;o++)t(n[o],o);return n}function bn(n,t){return n.slice(0,t.length)===t}var hn=function(){var n=-1;return function(){return++n}}();function xn(n,t,e,o){return Object.defineProperty(n,t,U({value:e,enumerable:!1,writable:!1,configurable:!0},o)),n}function vn(n){return n.replace(/-(\w)/g,function(n,t){return t.toUpperCase()})}function yn(n){console&&console.warn&&console.warn(n)}var wn=Object.freeze({contains:fn,each:gn,getPropDescriptor:I,startsWith:bn,uid:hn,defineProperty:xn,objectCreate:F,extend:U,toCamel:vn,warn:yn});function kn(n,t,e,o,r){var i=n[t],a=cn(i),l=!B(r);if(!i||i!==e)if(!i&&o)n[t]=[e];else if(i)if(a){var s=i.indexOf(e);if(s===r)return;-1!==s&&i.splice(s,1),l?i.splice(r,0,e):i.push(e)}else n[t]=[i,e];else n[t]=e}function Tn(n){return n.tagName&&i[Y(n,c)||Y(n,c)||n.tagName.toLowerCase()]}function Cn(n,t){var e=Tn(n),o=!t&&Y(n,c);return o&&!H.hasExpr(o)?o:e?e.name:n.tagName.toLowerCase()}function jn(){return this.parent?U(F(this),this.parent):this}var En=/<yield\b/i,Sn=/<yield\s*(?:\/>|>([\S\s]*?)<\/yield\s*>|>)/gi,An=/<yield\s+to=['"]([^'">]*)['"]\s*>([\S\s]*?)<\/yield\s*>/gi,Nn=/<yield\s+from=['"]?([-\w]+)['"]?\s*(?:\/>|>([\S\s]*?)<\/yield\s*>)/gi,Ln={tr:"tbody",th:"tr",td:"tr",col:"colgroup"},_n=L&&L<10?/^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/:/^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/,zn="div",Dn="svg";function On(n,e,o){var r=n&&n.match(/^\s*<([-\w]+)/),i=r&&r[1].toLowerCase(),a=_(o?Dn:zn);return n=function(n,t){if(!En.test(n))return n;var e={};return t=t&&t.replace(An,function(n,t,o){return e[t]=e[t]||o,""}).trim(),n.replace(Nn,function(n,t,o){return e[t]||o||""}).replace(Sn,function(n,e){return t||e||""})}(n,e),_n.test(i)?a=function(n,e,o){var r="o"===o[0],i=r?"select>":"table>";if(n.innerHTML="<"+i+e.trim()+"</"+i,i=n.firstChild,r)i.selectedIndex=-1;else{var a=Ln[o];a&&1===i.childElementCount&&(i=t(a,i))}return i}(a,n,i):K(a,n,o),a}var Mn=/^on/;function qn(n){for(var t=n;t.__.isAnonymous&&t.parent;)t=t.parent;return t}function Rn(n,t,e,o){var r,i=function(n,t,e){var o=this.__.parent,r=this.__.item;if(!r)for(;o&&!r;)r=o.__.item,o=o.__.parent;if($(e,"currentTarget")&&(e.currentTarget=n),$(e,"target")&&(e.target=e.srcElement),$(e,"which")&&(e.which=e.charCode||e.keyCode),e.item=r,t.call(this,e),W.autoUpdate&&!e.preventUpdate){var i=qn(this);i.isMounted&&i.update()}}.bind(o,e,t);e[n]=null,r=n.replace(E,""),fn(o.__.listeners,e)||o.__.listeners.push(e),e[h]||(e[h]={}),e[h][n]&&e.removeEventListener(r,e[h][n]),e[h][n]=i,e.addEventListener(r,i,!1)}function Hn(n,t,e,o){var r=bt(n,t,e),i=t.tagName||Cn(t.root,!0),a=qn(o);return xn(r,"parent",a),r.__.parent=o,kn(a.tags,i,r),a!==o&&kn(o.tags,i,r),r}function Pn(n,t,e,o){if(cn(n[t])){var r=n[t].indexOf(e);-1!==r&&n[t].splice(r,1),n[t].length?1!==n[t].length||o||(n[t]=n[t][0]):delete n[t]}else n[t]===e&&delete n[t]}function In(n,t){var e,o,r=X(),i=X(),a=Z();for(this.root.insertBefore(r,this.root.firstChild),this.root.appendChild(i),this.__.head=o=r,this.__.tail=i;o;)e=o.nextSibling,a.appendChild(o),this.__.virts.push(o),o=e;t?n.insertBefore(a,t.__.head):n.appendChild(a)}function Bn(n,t){var e=Z();In.call(n,e),t.parentNode.replaceChild(e,t)}function $n(n){if(!this.root||!Y(this.root,"virtualized")){var t,e=n.dom,o=function(n){return n?(n=n.replace(s,""),A[n]&&(n=A[n]),n):null}(n.attr),r=fn([f,g],o),a=n.root&&"VIRTUAL"===n.root.tagName,l=this.__,d=l.isAnonymous,c=e&&(n.parent||e.parentNode),p="style"===o,u="class"===o;if(n._riot_id)n.__.wasCreated?n.update():(n.mount(),a&&Bn(n,n.root));else{if(n.update)return n.update();var m=r&&!d?jn.call(this):this,b=!an(t=H(n.expr,m)),h=sn(t);if(h&&(u?t=H(JSON.stringify(t),this):p&&(t=tn(t))),!n.attr||n.wasParsedOnce&&b&&!1!==t||J(e,Y(e,n.attr)?n.attr:o),n.bool&&(t=!!t&&o),n.isRtag)return function(n,t,e){var o,r=n.tag||n.dom._tag,a=(r?r.__:{}).head,l="VIRTUAL"===n.dom.tagName;r&&n.tagName===e?r.update():(r&&(l&&(o=X(),a.parentNode.insertBefore(o,a)),r.unmount(!0)),un(e)&&(n.impl=i[e],n.impl&&(n.tag=r=Hn(n.impl,{root:n.dom,parent:t,tagName:e},n.dom.innerHTML,t),gn(n.attrs,function(n){return z(r.root,n.name,n.value)}),n.tagName=e,r.mount(),l&&Bn(r,o||r.root),t.__.onUnmount=function(){var n=r.opts.dataIs;Pn(r.parent.tags,n,r),Pn(r.__.parent.tags,n,r),r.unmount()})))}(n,this,t);if((!n.wasParsedOnce||n.value!==t)&&(n.value=t,n.wasParsedOnce=!0,!h||u||p||r)){if(b||(t=""),!o)return t+="",void(c&&(n.parent=c,"TEXTAREA"===c.tagName?(c.value=t,L||(e.nodeValue=t)):e.nodeValue=t));switch(!0){case ln(t):(function(n){return Mn.test(n)})(o)&&Rn(o,t,e,this);break;case r:G(e,o===g?!t:t);break;default:n.bool&&(e[o]=t),"value"===o&&e.value!==t?e.value=t:b&&!1!==t&&z(e,o,t),p&&e.hidden&&G(e,!1)}}}}}function Un(n){gn(n,$n.bind(this))}function Fn(n,t,e,o,r){if(!n||!e){var i=n?jn.call(this):t||this;gn(r,function(n){n.expr&&$n.call(i,n.expr),o[vn(n.name).replace(s,"")]=n.expr?n.expr.value:n.value})}}function Wn(n){if(!n){var t=Object.keys(i);return t+Wn(t)}return n.filter(function(n){return!/[^-\w]/.test(n)}).reduce(function(n,t){var e=t.trim().toLowerCase();return n+",["+c+'="'+e+'"]'},"")}function Vn(n,t){var e=this.name,o=this.tmpl,r=this.css,a=this.attrs,l=this.onCreate;return i[e]||(Xn(e,o,r,a,l),i[e].class=this.constructor),ht(n,e,t,this),r&&M.inject(),this}function Xn(n,t,e,o,r){return ln(o)&&(r=o,/^[\w-]+\s?=/.test(e)?(o=e,e=""):o=""),e&&(ln(e)?r=e:M.add(e,n)),n=n.toLowerCase(),i[n]={name:n,tmpl:t,attrs:o,fn:r},n}function Gn(n,t,e,o,r){return e&&M.add(e,n),i[n]={name:n,tmpl:t,attrs:o,fn:r},n}function Yn(n,t,e){var o,r,i=[];if(M.inject(),sn(t)&&(e=t,t=0),un(n)?(n="*"===n?r=Wn():n+Wn(n.split(/, */)),o=n?V(n):[]):o=n,"*"===t){if(t=r||Wn(),o.tagName)o=V(t,o);else{var a=[];gn(o,function(n){return a.push(V(t,n))}),o=a}t=0}return function n(o){if(o.tagName){var r,a=Y(o,c);t&&a!==t&&(a=t,z(o,c,t)),(r=ht(o,a||o.tagName.toLowerCase(),e))&&i.push(r)}else o.length&&gn(o,n)}(o),i}var Jn={},Kn=Jn[l]={},Qn=0;function Zn(n,t,e){if(sn(n))Zn("__"+Qn+++"__",n,!0);else{var o=e?Kn:Jn;if(!t){if(B(o[n]))throw new Error("Unregistered mixin: "+n);return o[n]}o[n]=ln(t)?U(t.prototype,o[n]||{})&&t:U(o[n]||{},t)}}function nt(){return gn(r,function(n){return n.update()})}function tt(n){return M.remove(n),delete i[n]}var et=Object.freeze({Tag:Vn,tag:Xn,tag2:Gn,mount:Yn,mixin:Zn,update:nt,unregister:tt,version:"v3.11.1"});function ot(n,t){var e,o=this.parent;o&&(cn(e=o.tags[n])?e.splice(t,0,e.splice(e.indexOf(this),1)[0]):kn(o.tags,n,this))}function rt(n,t){for(var e,o=this.__.head,r=Z();o;)if(e=o.nextSibling,r.appendChild(o),(o=e)===this.__.tail){r.appendChild(o),n.insertBefore(r,t.__.head);break}}function it(n,t,e){var o={};return o[n.key]=t,n.pos&&(o[n.pos]=e),o}function at(n,t){n.splice(t,1),this.unmount(),Pn(this.parent,this,this.__.tagName,!0)}function lt(n,t,e){var o=typeof Y(n,m)!==x||J(n,m),r=Y(n,b),a=!!r&&H.hasExpr(r),l=Cn(n),s=i[l],d=n.parentNode,c=X(),f=Tn(n),g=Y(n,p),h=[],y=n.innerHTML,w=!i[l],k="VIRTUAL"===n.tagName,T=[];return J(n,u),J(n,b),(e=H.loopKeys(e)).isLoop=!0,g&&J(n,p),d.insertBefore(c,n),d.removeChild(n),e.update=function(){e.value=H(e.val,t);var i=e.value,d=Z(),p=!cn(i)&&!un(i),u=c.parentNode,m=[],b=p&&!!i;if(u){p&&(i=i?Object.keys(i).map(function(n){return it(e,i[n],n)}):[]);var x=0;gn(i,function(c,C){var j=C-x,E=!b&&e.key?it(e,c,C):c;if(!g||H(g,U(F(t),E))){var S=function(n,t,e,o){return n?o?H(n,e):t[n]:t}(r,c,E,a),A=!p&&o&&typeof c===v||r,N=T.indexOf(S),L=-1===N,_=!L&&A?N:j,z=h[_],D=j>=T.length,O=A&&L||!A&&!z||!h[j];O?((z=bt(s,{parent:t,isLoop:!0,isAnonymous:w,tagName:l,root:n.cloneNode(w),item:E,index:j},y)).mount(),D?function(n,t){t?In.call(this,n):n.appendChild(this.root)}.apply(z,[d||u,k]):function(n,t,e){e?In.apply(this,[n,t]):nn(n,this.root,t.root)}.apply(z,[u,h[j],k]),D||T.splice(j,0,E),h.splice(j,0,z),f&&kn(t.tags,l,z,!0)):_!==j&&A&&((r||fn(i,T[_]))&&(function(n,t,e){e?rt.apply(this,[n,t]):nn(n,this.root,t.root)}.apply(z,[u,h[j],k]),h.splice(j,0,h.splice(_,1)[0]),T.splice(j,0,T.splice(_,1)[0])),e.pos&&(z[e.pos]=j),!f&&z.tags&&function(n){var t=this;gn(Object.keys(this.tags),function(e){ot.apply(t.tags[e],[e,n])})}.call(z,j)),U(z.__,{item:E,index:j,parent:t}),m[j]=S,O||z.update(E)}else x++}),function(n,t,e){for(var o=t.length,r=n.length-e;o>r;)o--,at.apply(t[o],[t,o])}(i,h,x),T=m.slice(),u.insertBefore(d,c)}},e.unmount=function(){gn(h,function(n){n.unmount()})},e}var st={init:function(n,t,e,o){return this.dom=n,this.attr=e,this.rawValue=o,this.parent=t,this.hasExp=H.hasExpr(o),this},update:function(){var n=this.value,t=this.parent&&qn(this.parent),e=this.dom.__ref||this.tag||this.dom;this.value=this.hasExp?H(this.rawValue,this.parent):this.rawValue,!an(n)&&t&&Pn(t.refs,n,e),!an(this.value)&&un(this.value)?(t&&kn(t.refs,this.value,e,null,this.parent.__.index),this.value!==n&&z(this.dom,this.attr,this.value)):J(this.dom,this.attr),this.dom.__ref||(this.dom.__ref=e)},unmount:function(){var n=this.tag||this.dom,t=this.parent&&qn(this.parent);!an(this.value)&&t&&Pn(t.refs,this.value,n)}};function dt(n,t,e,o){return F(st).init(n,t,e,o)}function ct(n){gn(n,function(n){n.unmount?n.unmount(!0):n.tagName?n.tag.unmount(!0):n.unmount&&n.unmount()})}var pt={init:function(n,t,e){J(n,p),U(this,{tag:t,expr:e,stub:X(),pristine:n});var o=n.parentNode;return o.insertBefore(this.stub,n),o.removeChild(n),this},update:function(){this.value=H(this.expr,this.tag),this.stub.parentNode&&(this.value&&!this.current?(this.current=this.pristine.cloneNode(!0),this.stub.parentNode.insertBefore(this.current,this.stub),this.expressions=mt.apply(this.tag,[this.current,!0])):!this.value&&this.current&&(this.unmount(),this.current=null,this.expressions=[]),this.value&&Un.call(this.tag,this.expressions))},unmount:function(){this.current&&(this.current._tag?this.current._tag.unmount():this.current.parentNode&&this.current.parentNode.removeChild(this.current)),ct(this.expressions||[])}};function ut(n,t,e){return F(pt).init(n,t,e)}function mt(n,t){var e=this,o=[];return en(n,function(r){var i,a,l=r.nodeType;if((t||r!==n)&&(3===l&&"STYLE"!==r.parentNode.tagName&&H.hasExpr(r.nodeValue)&&o.push({dom:r,expr:r.nodeValue}),1===l)){var s="VIRTUAL"===r.tagName;if(i=Y(r,u))return s&&z(r,"loopVirtual",!0),o.push(lt(r,e,i)),!1;if(i=Y(r,p))return o.push(ut(r,e,i)),!1;if((i=Y(r,c))&&H.hasExpr(i))return o.push({isRtag:!0,expr:i,dom:r,attrs:[].slice.call(r.attributes)}),!1;if(a=Tn(r),s&&(Y(r,"virtualized")&&r.parentElement.removeChild(r),a||Y(r,"virtualized")||Y(r,"loopVirtual")||(a={tmpl:r.outerHTML})),a&&(r!==n||t)){var d=Y(r,c);if(!s||d)return d&&s&&yn("Virtual tags shouldn't be used together with the \""+c+'" attribute - https://github.com/riot/riot/issues/2511'),o.push(Hn(a,{root:r,parent:e},r.innerHTML,e)),!1;z(r,"virtualized",!0);var m=bt({tmpl:r.outerHTML},{root:r,parent:e},r.innerHTML);o.push(m)}ft.apply(e,[r,r.attributes,function(n,t){t&&o.push(t)}])}}),o}function ft(n,t,e){var o=this;gn(t,function(t){if(!t)return!1;var r,i=t.name,l=pn(i);fn(d,i)&&n.tagName.toLowerCase()!==a?r=dt(n,o,i,t.value):H.hasExpr(t.value)&&(r={dom:n,expr:t.value,attr:i,bool:l}),e(t,r)})}function gt(n){var t=this.__,e=t.isAnonymous;xn(this,"isMounted",n),e||(n?this.trigger("mount"):(this.trigger("unmount"),this.off("*"),this.__.wasCreated=!1))}function bt(n,t,e){void 0===n&&(n={}),void 0===t&&(t={});var o,i=t.context||{},a=t.opts||{},d=t.parent,c=t.isLoop,p=!!t.isAnonymous,u=W.skipAnonymousTags&&p,m=t.item,f=t.index,g=n.tmpl,b=[],x=t.root,v=t.tagName||Cn(x),y="virtual"===v,w=!y&&!g;return w||c&&p?o=x:(y||(x.innerHTML=""),o=On(g,e,dn(x))),u||P(i),n.name&&x._tag&&x._tag.unmount(!0),xn(i,"__",{impl:n,root:x,skipAnonymous:u,implAttrs:[],isAnonymous:p,instAttrs:[],innerHTML:e,tagName:v,index:f,isLoop:c,isInline:w,item:m,parent:d,listeners:[],virts:[],wasCreated:!1,tail:null,head:null}),[["isMounted",!1],["_riot_id",hn()],["root",x],["opts",a,{writable:!0,enumerable:!0}],["parent",d||null],["tags",{}],["refs",{}],["update",function(n){return function(n,t,e){var o=n.__,r={},i=n.isMounted&&!o.skipAnonymous;return o.isAnonymous&&o.parent&&U(n,o.parent),U(n,t),Fn.apply(n,[o.isLoop,o.parent,o.isAnonymous,r,o.instAttrs]),i&&n.isMounted&&ln(n.shouldUpdate)&&!n.shouldUpdate(t,r)?n:(U(n.opts,r),i&&n.trigger("update",t),Un.call(n,e),i&&n.trigger("updated"),n)}(i,n,b)}],["mixin",function(){for(var n=[],t=arguments.length;t--;)n[t]=arguments[t];return function(n){for(var t=[],e=arguments.length-1;e-- >0;)t[e]=arguments[e+1];return gn(t,function(t){var e,o,r=[],i=["init","__proto__"];t=un(t)?Zn(t):t,e=ln(t)?new t:t;var a=Object.getPrototypeOf(e);do{r=r.concat(Object.getOwnPropertyNames(o||e))}while(o=Object.getPrototypeOf(o||e));gn(r,function(t){if(!fn(i,t)){var o=I(e,t)||I(a,t),r=o&&(o.get||o.set);!n.hasOwnProperty(t)&&r?Object.defineProperty(n,t,o):n[t]=ln(e[t])?e[t].bind(n):e[t]}}),e.init&&e.init.bind(n)(n.opts)}),n}.apply(void 0,[i].concat(n))}],["mount",function(){return function(n,t,e,o){var r=n.__,i=r.root;i._tag=n,ft.apply(r.parent,[i,i.attributes,function(t,e){!r.isAnonymous&&st.isPrototypeOf(e)&&(e.tag=n),t.expr=e,r.instAttrs.push(t)}]),Q(r.impl.attrs,function(n,t){r.implAttrs.push({name:n,value:t})}),ft.apply(n,[i,r.implAttrs,function(n,t){t?e.push(t):z(i,n.name,n.value)}]),Fn.apply(n,[r.isLoop,r.parent,r.isAnonymous,o,r.instAttrs]);var a=Zn(l);if(a&&!r.skipAnonymous)for(var s in a)a.hasOwnProperty(s)&&n.mixin(a[s]);if(r.impl.fn&&r.impl.fn.call(n,o),r.skipAnonymous||n.trigger("before-mount"),gn(mt.apply(n,[t,r.isAnonymous]),function(n){return e.push(n)}),n.update(r.item),!r.isAnonymous&&!r.isInline)for(;t.firstChild;)i.appendChild(t.firstChild);if(xn(n,"root",i),!r.skipAnonymous&&n.parent){var d=qn(n.parent);d.one(d.isMounted?"updated":"mount",function(){gt.call(n,!0)})}else gt.call(n,!0);return n.__.wasCreated=!0,n}(i,o,b,a)}],["unmount",function(n){return function(n,t,e){var o=n.__,i=o.root,a=r.indexOf(n),l=i.parentNode;if(o.skipAnonymous||n.trigger("before-unmount"),Q(o.impl.attrs,function(n){bn(n,s)&&(n=n.slice(s.length)),J(i,n)}),n.__.listeners.forEach(function(n){Object.keys(n[h]).forEach(function(t){n.removeEventListener(t,n[h][t])})}),-1!==a&&r.splice(a,1),o.parent&&!o.isAnonymous){var d=qn(o.parent);o.isVirtual?Object.keys(n.tags).forEach(function(t){return Pn(d.tags,t,n.tags[t])}):Pn(d.tags,o.tagName,n)}return n.__.virts&&gn(n.__.virts,function(n){n.parentNode&&n.parentNode.removeChild(n)}),ct(e),gn(o.instAttrs,function(n){return n.expr&&n.expr.unmount&&n.expr.unmount()}),t?K(i,""):l&&l.removeChild(i),o.onUnmount&&o.onUnmount(),n.isMounted||gt.call(n,!0),gt.call(n,!1),delete i._tag,n}(i,n,b)}]].reduce(function(n,t){var e=t[0],o=t[1],r=t[2];return xn(i,e,o,r),n},U(i,m))}function ht(n,t,e,o){var a,l=i[t],s=i[t].class,d=o||(s?F(s.prototype):{}),c=n._innerHTML=n._innerHTML||n.innerHTML,p=U({root:n,opts:e,context:d},{parent:e?e.parent:null});return l&&n&&(a=bt(l,p,c)),a&&a.mount&&(a.mount(!0),fn(r,a)||r.push(a)),a}var xt=Object.freeze({arrayishAdd:kn,getTagName:Cn,inheritParentProps:jn,mountTo:ht,selectTags:Wn,arrayishRemove:Pn,getTag:Tn,initChildTag:Hn,moveChildTag:ot,makeReplaceVirtual:Bn,getImmediateCustomParentTag:qn,makeVirtual:In,moveVirtual:rt,unmountAll:ct,createIfDirective:ut,createRefDirective:dt}),vt=W,yt={tmpl:H,brackets:R,styleManager:M,vdom:r,styleNode:M.styleNode,dom:on,check:mn,misc:wn,tags:xt},wt=Vn,kt=Xn,Tt=Gn,Ct=Yn,jt=Zn,Et=nt,St=tt,At=P,Nt=U({},et,{observable:P,settings:vt,util:yt});n.settings=vt,n.util=yt,n.Tag=wt,n.tag=kt,n.tag2=Tt,n.mount=Ct,n.mixin=jt,n.update=Et,n.unregister=St,n.version="v3.11.1",n.observable=At,n.default=Nt,Object.defineProperty(n,"__esModule",{value:!0})}(t)},function(n,t,e){var o;
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
!function(t,e){"use strict";"object"==typeof n&&"object"==typeof n.exports?n.exports=t.document?e(t,!0):function(n){if(!n.document)throw new Error("jQuery requires a window with a document");return e(n)}:e(t)}("undefined"!=typeof window?window:this,function(e,r){"use strict";var i=[],a=e.document,l=Object.getPrototypeOf,s=i.slice,d=i.concat,c=i.push,p=i.indexOf,u={},m=u.toString,f=u.hasOwnProperty,g=f.toString,b=g.call(Object),h={},x=function(n){return"function"==typeof n&&"number"!=typeof n.nodeType},v=function(n){return null!=n&&n===n.window},y={type:!0,src:!0,noModule:!0};function w(n,t,e){var o,r=(t=t||a).createElement("script");if(r.text=n,e)for(o in y)e[o]&&(r[o]=e[o]);t.head.appendChild(r).parentNode.removeChild(r)}function k(n){return null==n?n+"":"object"==typeof n||"function"==typeof n?u[m.call(n)]||"object":typeof n}var T=function(n,t){return new T.fn.init(n,t)},C=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function j(n){var t=!!n&&"length"in n&&n.length,e=k(n);return!x(n)&&!v(n)&&("array"===e||0===t||"number"==typeof t&&t>0&&t-1 in n)}T.fn=T.prototype={jquery:"3.3.1",constructor:T,length:0,toArray:function(){return s.call(this)},get:function(n){return null==n?s.call(this):n<0?this[n+this.length]:this[n]},pushStack:function(n){var t=T.merge(this.constructor(),n);return t.prevObject=this,t},each:function(n){return T.each(this,n)},map:function(n){return this.pushStack(T.map(this,function(t,e){return n.call(t,e,t)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(n){var t=this.length,e=+n+(n<0?t:0);return this.pushStack(e>=0&&e<t?[this[e]]:[])},end:function(){return this.prevObject||this.constructor()},push:c,sort:i.sort,splice:i.splice},T.extend=T.fn.extend=function(){var n,t,e,o,r,i,a=arguments[0]||{},l=1,s=arguments.length,d=!1;for("boolean"==typeof a&&(d=a,a=arguments[l]||{},l++),"object"==typeof a||x(a)||(a={}),l===s&&(a=this,l--);l<s;l++)if(null!=(n=arguments[l]))for(t in n)e=a[t],a!==(o=n[t])&&(d&&o&&(T.isPlainObject(o)||(r=Array.isArray(o)))?(r?(r=!1,i=e&&Array.isArray(e)?e:[]):i=e&&T.isPlainObject(e)?e:{},a[t]=T.extend(d,i,o)):void 0!==o&&(a[t]=o));return a},T.extend({expando:"jQuery"+("3.3.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(n){throw new Error(n)},noop:function(){},isPlainObject:function(n){var t,e;return!(!n||"[object Object]"!==m.call(n))&&(!(t=l(n))||"function"==typeof(e=f.call(t,"constructor")&&t.constructor)&&g.call(e)===b)},isEmptyObject:function(n){var t;for(t in n)return!1;return!0},globalEval:function(n){w(n)},each:function(n,t){var e,o=0;if(j(n))for(e=n.length;o<e&&!1!==t.call(n[o],o,n[o]);o++);else for(o in n)if(!1===t.call(n[o],o,n[o]))break;return n},trim:function(n){return null==n?"":(n+"").replace(C,"")},makeArray:function(n,t){var e=t||[];return null!=n&&(j(Object(n))?T.merge(e,"string"==typeof n?[n]:n):c.call(e,n)),e},inArray:function(n,t,e){return null==t?-1:p.call(t,n,e)},merge:function(n,t){for(var e=+t.length,o=0,r=n.length;o<e;o++)n[r++]=t[o];return n.length=r,n},grep:function(n,t,e){for(var o=[],r=0,i=n.length,a=!e;r<i;r++)!t(n[r],r)!==a&&o.push(n[r]);return o},map:function(n,t,e){var o,r,i=0,a=[];if(j(n))for(o=n.length;i<o;i++)null!=(r=t(n[i],i,e))&&a.push(r);else for(i in n)null!=(r=t(n[i],i,e))&&a.push(r);return d.apply([],a)},guid:1,support:h}),"function"==typeof Symbol&&(T.fn[Symbol.iterator]=i[Symbol.iterator]),T.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(n,t){u["[object "+t+"]"]=t.toLowerCase()});var E=
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
function(n){var t,e,o,r,i,a,l,s,d,c,p,u,m,f,g,b,h,x,v,y="sizzle"+1*new Date,w=n.document,k=0,T=0,C=ln(),j=ln(),E=ln(),S=function(n,t){return n===t&&(p=!0),0},A={}.hasOwnProperty,N=[],L=N.pop,_=N.push,z=N.push,D=N.slice,O=function(n,t){for(var e=0,o=n.length;e<o;e++)if(n[e]===t)return e;return-1},M="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",q="[\\x20\\t\\r\\n\\f]",R="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",H="\\["+q+"*("+R+")(?:"+q+"*([*^$|!~]?=)"+q+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+R+"))|)"+q+"*\\]",P=":("+R+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+H+")*)|.*)\\)|)",I=new RegExp(q+"+","g"),B=new RegExp("^"+q+"+|((?:^|[^\\\\])(?:\\\\.)*)"+q+"+$","g"),$=new RegExp("^"+q+"*,"+q+"*"),U=new RegExp("^"+q+"*([>+~]|"+q+")"+q+"*"),F=new RegExp("="+q+"*([^\\]'\"]*?)"+q+"*\\]","g"),W=new RegExp(P),V=new RegExp("^"+R+"$"),X={ID:new RegExp("^#("+R+")"),CLASS:new RegExp("^\\.("+R+")"),TAG:new RegExp("^("+R+"|[*])"),ATTR:new RegExp("^"+H),PSEUDO:new RegExp("^"+P),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+q+"*(even|odd|(([+-]|)(\\d*)n|)"+q+"*(?:([+-]|)"+q+"*(\\d+)|))"+q+"*\\)|)","i"),bool:new RegExp("^(?:"+M+")$","i"),needsContext:new RegExp("^"+q+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+q+"*((?:-\\d)?\\d*)"+q+"*\\)|)(?=[^-]|$)","i")},G=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,J=/^[^{]+\{\s*\[native \w/,K=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,Q=/[+~]/,Z=new RegExp("\\\\([\\da-f]{1,6}"+q+"?|("+q+")|.)","ig"),nn=function(n,t,e){var o="0x"+t-65536;return o!=o||e?t:o<0?String.fromCharCode(o+65536):String.fromCharCode(o>>10|55296,1023&o|56320)},tn=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,en=function(n,t){return t?"\0"===n?"�":n.slice(0,-1)+"\\"+n.charCodeAt(n.length-1).toString(16)+" ":"\\"+n},on=function(){u()},rn=vn(function(n){return!0===n.disabled&&("form"in n||"label"in n)},{dir:"parentNode",next:"legend"});try{z.apply(N=D.call(w.childNodes),w.childNodes),N[w.childNodes.length].nodeType}catch(n){z={apply:N.length?function(n,t){_.apply(n,D.call(t))}:function(n,t){for(var e=n.length,o=0;n[e++]=t[o++];);n.length=e-1}}}function an(n,t,o,r){var i,l,d,c,p,f,h,x=t&&t.ownerDocument,k=t?t.nodeType:9;if(o=o||[],"string"!=typeof n||!n||1!==k&&9!==k&&11!==k)return o;if(!r&&((t?t.ownerDocument||t:w)!==m&&u(t),t=t||m,g)){if(11!==k&&(p=K.exec(n)))if(i=p[1]){if(9===k){if(!(d=t.getElementById(i)))return o;if(d.id===i)return o.push(d),o}else if(x&&(d=x.getElementById(i))&&v(t,d)&&d.id===i)return o.push(d),o}else{if(p[2])return z.apply(o,t.getElementsByTagName(n)),o;if((i=p[3])&&e.getElementsByClassName&&t.getElementsByClassName)return z.apply(o,t.getElementsByClassName(i)),o}if(e.qsa&&!E[n+" "]&&(!b||!b.test(n))){if(1!==k)x=t,h=n;else if("object"!==t.nodeName.toLowerCase()){for((c=t.getAttribute("id"))?c=c.replace(tn,en):t.setAttribute("id",c=y),l=(f=a(n)).length;l--;)f[l]="#"+c+" "+xn(f[l]);h=f.join(","),x=Q.test(n)&&bn(t.parentNode)||t}if(h)try{return z.apply(o,x.querySelectorAll(h)),o}catch(n){}finally{c===y&&t.removeAttribute("id")}}}return s(n.replace(B,"$1"),t,o,r)}function ln(){var n=[];return function t(e,r){return n.push(e+" ")>o.cacheLength&&delete t[n.shift()],t[e+" "]=r}}function sn(n){return n[y]=!0,n}function dn(n){var t=m.createElement("fieldset");try{return!!n(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function cn(n,t){for(var e=n.split("|"),r=e.length;r--;)o.attrHandle[e[r]]=t}function pn(n,t){var e=t&&n,o=e&&1===n.nodeType&&1===t.nodeType&&n.sourceIndex-t.sourceIndex;if(o)return o;if(e)for(;e=e.nextSibling;)if(e===t)return-1;return n?1:-1}function un(n){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===n}}function mn(n){return function(t){var e=t.nodeName.toLowerCase();return("input"===e||"button"===e)&&t.type===n}}function fn(n){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===n:t.disabled===n:t.isDisabled===n||t.isDisabled!==!n&&rn(t)===n:t.disabled===n:"label"in t&&t.disabled===n}}function gn(n){return sn(function(t){return t=+t,sn(function(e,o){for(var r,i=n([],e.length,t),a=i.length;a--;)e[r=i[a]]&&(e[r]=!(o[r]=e[r]))})})}function bn(n){return n&&void 0!==n.getElementsByTagName&&n}for(t in e=an.support={},i=an.isXML=function(n){var t=n&&(n.ownerDocument||n).documentElement;return!!t&&"HTML"!==t.nodeName},u=an.setDocument=function(n){var t,r,a=n?n.ownerDocument||n:w;return a!==m&&9===a.nodeType&&a.documentElement?(f=(m=a).documentElement,g=!i(m),w!==m&&(r=m.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",on,!1):r.attachEvent&&r.attachEvent("onunload",on)),e.attributes=dn(function(n){return n.className="i",!n.getAttribute("className")}),e.getElementsByTagName=dn(function(n){return n.appendChild(m.createComment("")),!n.getElementsByTagName("*").length}),e.getElementsByClassName=J.test(m.getElementsByClassName),e.getById=dn(function(n){return f.appendChild(n).id=y,!m.getElementsByName||!m.getElementsByName(y).length}),e.getById?(o.filter.ID=function(n){var t=n.replace(Z,nn);return function(n){return n.getAttribute("id")===t}},o.find.ID=function(n,t){if(void 0!==t.getElementById&&g){var e=t.getElementById(n);return e?[e]:[]}}):(o.filter.ID=function(n){var t=n.replace(Z,nn);return function(n){var e=void 0!==n.getAttributeNode&&n.getAttributeNode("id");return e&&e.value===t}},o.find.ID=function(n,t){if(void 0!==t.getElementById&&g){var e,o,r,i=t.getElementById(n);if(i){if((e=i.getAttributeNode("id"))&&e.value===n)return[i];for(r=t.getElementsByName(n),o=0;i=r[o++];)if((e=i.getAttributeNode("id"))&&e.value===n)return[i]}return[]}}),o.find.TAG=e.getElementsByTagName?function(n,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(n):e.qsa?t.querySelectorAll(n):void 0}:function(n,t){var e,o=[],r=0,i=t.getElementsByTagName(n);if("*"===n){for(;e=i[r++];)1===e.nodeType&&o.push(e);return o}return i},o.find.CLASS=e.getElementsByClassName&&function(n,t){if(void 0!==t.getElementsByClassName&&g)return t.getElementsByClassName(n)},h=[],b=[],(e.qsa=J.test(m.querySelectorAll))&&(dn(function(n){f.appendChild(n).innerHTML="<a id='"+y+"'></a><select id='"+y+"-\r\\' msallowcapture=''><option selected=''></option></select>",n.querySelectorAll("[msallowcapture^='']").length&&b.push("[*^$]="+q+"*(?:''|\"\")"),n.querySelectorAll("[selected]").length||b.push("\\["+q+"*(?:value|"+M+")"),n.querySelectorAll("[id~="+y+"-]").length||b.push("~="),n.querySelectorAll(":checked").length||b.push(":checked"),n.querySelectorAll("a#"+y+"+*").length||b.push(".#.+[+~]")}),dn(function(n){n.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=m.createElement("input");t.setAttribute("type","hidden"),n.appendChild(t).setAttribute("name","D"),n.querySelectorAll("[name=d]").length&&b.push("name"+q+"*[*^$|!~]?="),2!==n.querySelectorAll(":enabled").length&&b.push(":enabled",":disabled"),f.appendChild(n).disabled=!0,2!==n.querySelectorAll(":disabled").length&&b.push(":enabled",":disabled"),n.querySelectorAll("*,:x"),b.push(",.*:")})),(e.matchesSelector=J.test(x=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&dn(function(n){e.disconnectedMatch=x.call(n,"*"),x.call(n,"[s!='']:x"),h.push("!=",P)}),b=b.length&&new RegExp(b.join("|")),h=h.length&&new RegExp(h.join("|")),t=J.test(f.compareDocumentPosition),v=t||J.test(f.contains)?function(n,t){var e=9===n.nodeType?n.documentElement:n,o=t&&t.parentNode;return n===o||!(!o||1!==o.nodeType||!(e.contains?e.contains(o):n.compareDocumentPosition&&16&n.compareDocumentPosition(o)))}:function(n,t){if(t)for(;t=t.parentNode;)if(t===n)return!0;return!1},S=t?function(n,t){if(n===t)return p=!0,0;var o=!n.compareDocumentPosition-!t.compareDocumentPosition;return o||(1&(o=(n.ownerDocument||n)===(t.ownerDocument||t)?n.compareDocumentPosition(t):1)||!e.sortDetached&&t.compareDocumentPosition(n)===o?n===m||n.ownerDocument===w&&v(w,n)?-1:t===m||t.ownerDocument===w&&v(w,t)?1:c?O(c,n)-O(c,t):0:4&o?-1:1)}:function(n,t){if(n===t)return p=!0,0;var e,o=0,r=n.parentNode,i=t.parentNode,a=[n],l=[t];if(!r||!i)return n===m?-1:t===m?1:r?-1:i?1:c?O(c,n)-O(c,t):0;if(r===i)return pn(n,t);for(e=n;e=e.parentNode;)a.unshift(e);for(e=t;e=e.parentNode;)l.unshift(e);for(;a[o]===l[o];)o++;return o?pn(a[o],l[o]):a[o]===w?-1:l[o]===w?1:0},m):m},an.matches=function(n,t){return an(n,null,null,t)},an.matchesSelector=function(n,t){if((n.ownerDocument||n)!==m&&u(n),t=t.replace(F,"='$1']"),e.matchesSelector&&g&&!E[t+" "]&&(!h||!h.test(t))&&(!b||!b.test(t)))try{var o=x.call(n,t);if(o||e.disconnectedMatch||n.document&&11!==n.document.nodeType)return o}catch(n){}return an(t,m,null,[n]).length>0},an.contains=function(n,t){return(n.ownerDocument||n)!==m&&u(n),v(n,t)},an.attr=function(n,t){(n.ownerDocument||n)!==m&&u(n);var r=o.attrHandle[t.toLowerCase()],i=r&&A.call(o.attrHandle,t.toLowerCase())?r(n,t,!g):void 0;return void 0!==i?i:e.attributes||!g?n.getAttribute(t):(i=n.getAttributeNode(t))&&i.specified?i.value:null},an.escape=function(n){return(n+"").replace(tn,en)},an.error=function(n){throw new Error("Syntax error, unrecognized expression: "+n)},an.uniqueSort=function(n){var t,o=[],r=0,i=0;if(p=!e.detectDuplicates,c=!e.sortStable&&n.slice(0),n.sort(S),p){for(;t=n[i++];)t===n[i]&&(r=o.push(i));for(;r--;)n.splice(o[r],1)}return c=null,n},r=an.getText=function(n){var t,e="",o=0,i=n.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof n.textContent)return n.textContent;for(n=n.firstChild;n;n=n.nextSibling)e+=r(n)}else if(3===i||4===i)return n.nodeValue}else for(;t=n[o++];)e+=r(t);return e},(o=an.selectors={cacheLength:50,createPseudo:sn,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(n){return n[1]=n[1].replace(Z,nn),n[3]=(n[3]||n[4]||n[5]||"").replace(Z,nn),"~="===n[2]&&(n[3]=" "+n[3]+" "),n.slice(0,4)},CHILD:function(n){return n[1]=n[1].toLowerCase(),"nth"===n[1].slice(0,3)?(n[3]||an.error(n[0]),n[4]=+(n[4]?n[5]+(n[6]||1):2*("even"===n[3]||"odd"===n[3])),n[5]=+(n[7]+n[8]||"odd"===n[3])):n[3]&&an.error(n[0]),n},PSEUDO:function(n){var t,e=!n[6]&&n[2];return X.CHILD.test(n[0])?null:(n[3]?n[2]=n[4]||n[5]||"":e&&W.test(e)&&(t=a(e,!0))&&(t=e.indexOf(")",e.length-t)-e.length)&&(n[0]=n[0].slice(0,t),n[2]=e.slice(0,t)),n.slice(0,3))}},filter:{TAG:function(n){var t=n.replace(Z,nn).toLowerCase();return"*"===n?function(){return!0}:function(n){return n.nodeName&&n.nodeName.toLowerCase()===t}},CLASS:function(n){var t=C[n+" "];return t||(t=new RegExp("(^|"+q+")"+n+"("+q+"|$)"))&&C(n,function(n){return t.test("string"==typeof n.className&&n.className||void 0!==n.getAttribute&&n.getAttribute("class")||"")})},ATTR:function(n,t,e){return function(o){var r=an.attr(o,n);return null==r?"!="===t:!t||(r+="","="===t?r===e:"!="===t?r!==e:"^="===t?e&&0===r.indexOf(e):"*="===t?e&&r.indexOf(e)>-1:"$="===t?e&&r.slice(-e.length)===e:"~="===t?(" "+r.replace(I," ")+" ").indexOf(e)>-1:"|="===t&&(r===e||r.slice(0,e.length+1)===e+"-"))}},CHILD:function(n,t,e,o,r){var i="nth"!==n.slice(0,3),a="last"!==n.slice(-4),l="of-type"===t;return 1===o&&0===r?function(n){return!!n.parentNode}:function(t,e,s){var d,c,p,u,m,f,g=i!==a?"nextSibling":"previousSibling",b=t.parentNode,h=l&&t.nodeName.toLowerCase(),x=!s&&!l,v=!1;if(b){if(i){for(;g;){for(u=t;u=u[g];)if(l?u.nodeName.toLowerCase()===h:1===u.nodeType)return!1;f=g="only"===n&&!f&&"nextSibling"}return!0}if(f=[a?b.firstChild:b.lastChild],a&&x){for(v=(m=(d=(c=(p=(u=b)[y]||(u[y]={}))[u.uniqueID]||(p[u.uniqueID]={}))[n]||[])[0]===k&&d[1])&&d[2],u=m&&b.childNodes[m];u=++m&&u&&u[g]||(v=m=0)||f.pop();)if(1===u.nodeType&&++v&&u===t){c[n]=[k,m,v];break}}else if(x&&(v=m=(d=(c=(p=(u=t)[y]||(u[y]={}))[u.uniqueID]||(p[u.uniqueID]={}))[n]||[])[0]===k&&d[1]),!1===v)for(;(u=++m&&u&&u[g]||(v=m=0)||f.pop())&&((l?u.nodeName.toLowerCase()!==h:1!==u.nodeType)||!++v||(x&&((c=(p=u[y]||(u[y]={}))[u.uniqueID]||(p[u.uniqueID]={}))[n]=[k,v]),u!==t)););return(v-=r)===o||v%o==0&&v/o>=0}}},PSEUDO:function(n,t){var e,r=o.pseudos[n]||o.setFilters[n.toLowerCase()]||an.error("unsupported pseudo: "+n);return r[y]?r(t):r.length>1?(e=[n,n,"",t],o.setFilters.hasOwnProperty(n.toLowerCase())?sn(function(n,e){for(var o,i=r(n,t),a=i.length;a--;)n[o=O(n,i[a])]=!(e[o]=i[a])}):function(n){return r(n,0,e)}):r}},pseudos:{not:sn(function(n){var t=[],e=[],o=l(n.replace(B,"$1"));return o[y]?sn(function(n,t,e,r){for(var i,a=o(n,null,r,[]),l=n.length;l--;)(i=a[l])&&(n[l]=!(t[l]=i))}):function(n,r,i){return t[0]=n,o(t,null,i,e),t[0]=null,!e.pop()}}),has:sn(function(n){return function(t){return an(n,t).length>0}}),contains:sn(function(n){return n=n.replace(Z,nn),function(t){return(t.textContent||t.innerText||r(t)).indexOf(n)>-1}}),lang:sn(function(n){return V.test(n||"")||an.error("unsupported lang: "+n),n=n.replace(Z,nn).toLowerCase(),function(t){var e;do{if(e=g?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(e=e.toLowerCase())===n||0===e.indexOf(n+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var e=n.location&&n.location.hash;return e&&e.slice(1)===t.id},root:function(n){return n===f},focus:function(n){return n===m.activeElement&&(!m.hasFocus||m.hasFocus())&&!!(n.type||n.href||~n.tabIndex)},enabled:fn(!1),disabled:fn(!0),checked:function(n){var t=n.nodeName.toLowerCase();return"input"===t&&!!n.checked||"option"===t&&!!n.selected},selected:function(n){return n.parentNode&&n.parentNode.selectedIndex,!0===n.selected},empty:function(n){for(n=n.firstChild;n;n=n.nextSibling)if(n.nodeType<6)return!1;return!0},parent:function(n){return!o.pseudos.empty(n)},header:function(n){return Y.test(n.nodeName)},input:function(n){return G.test(n.nodeName)},button:function(n){var t=n.nodeName.toLowerCase();return"input"===t&&"button"===n.type||"button"===t},text:function(n){var t;return"input"===n.nodeName.toLowerCase()&&"text"===n.type&&(null==(t=n.getAttribute("type"))||"text"===t.toLowerCase())},first:gn(function(){return[0]}),last:gn(function(n,t){return[t-1]}),eq:gn(function(n,t,e){return[e<0?e+t:e]}),even:gn(function(n,t){for(var e=0;e<t;e+=2)n.push(e);return n}),odd:gn(function(n,t){for(var e=1;e<t;e+=2)n.push(e);return n}),lt:gn(function(n,t,e){for(var o=e<0?e+t:e;--o>=0;)n.push(o);return n}),gt:gn(function(n,t,e){for(var o=e<0?e+t:e;++o<t;)n.push(o);return n})}}).pseudos.nth=o.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[t]=un(t);for(t in{submit:!0,reset:!0})o.pseudos[t]=mn(t);function hn(){}function xn(n){for(var t=0,e=n.length,o="";t<e;t++)o+=n[t].value;return o}function vn(n,t,e){var o=t.dir,r=t.next,i=r||o,a=e&&"parentNode"===i,l=T++;return t.first?function(t,e,r){for(;t=t[o];)if(1===t.nodeType||a)return n(t,e,r);return!1}:function(t,e,s){var d,c,p,u=[k,l];if(s){for(;t=t[o];)if((1===t.nodeType||a)&&n(t,e,s))return!0}else for(;t=t[o];)if(1===t.nodeType||a)if(c=(p=t[y]||(t[y]={}))[t.uniqueID]||(p[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[o]||t;else{if((d=c[i])&&d[0]===k&&d[1]===l)return u[2]=d[2];if(c[i]=u,u[2]=n(t,e,s))return!0}return!1}}function yn(n){return n.length>1?function(t,e,o){for(var r=n.length;r--;)if(!n[r](t,e,o))return!1;return!0}:n[0]}function wn(n,t,e,o,r){for(var i,a=[],l=0,s=n.length,d=null!=t;l<s;l++)(i=n[l])&&(e&&!e(i,o,r)||(a.push(i),d&&t.push(l)));return a}function kn(n,t,e,o,r,i){return o&&!o[y]&&(o=kn(o)),r&&!r[y]&&(r=kn(r,i)),sn(function(i,a,l,s){var d,c,p,u=[],m=[],f=a.length,g=i||function(n,t,e){for(var o=0,r=t.length;o<r;o++)an(n,t[o],e);return e}(t||"*",l.nodeType?[l]:l,[]),b=!n||!i&&t?g:wn(g,u,n,l,s),h=e?r||(i?n:f||o)?[]:a:b;if(e&&e(b,h,l,s),o)for(d=wn(h,m),o(d,[],l,s),c=d.length;c--;)(p=d[c])&&(h[m[c]]=!(b[m[c]]=p));if(i){if(r||n){if(r){for(d=[],c=h.length;c--;)(p=h[c])&&d.push(b[c]=p);r(null,h=[],d,s)}for(c=h.length;c--;)(p=h[c])&&(d=r?O(i,p):u[c])>-1&&(i[d]=!(a[d]=p))}}else h=wn(h===a?h.splice(f,h.length):h),r?r(null,a,h,s):z.apply(a,h)})}function Tn(n){for(var t,e,r,i=n.length,a=o.relative[n[0].type],l=a||o.relative[" "],s=a?1:0,c=vn(function(n){return n===t},l,!0),p=vn(function(n){return O(t,n)>-1},l,!0),u=[function(n,e,o){var r=!a&&(o||e!==d)||((t=e).nodeType?c(n,e,o):p(n,e,o));return t=null,r}];s<i;s++)if(e=o.relative[n[s].type])u=[vn(yn(u),e)];else{if((e=o.filter[n[s].type].apply(null,n[s].matches))[y]){for(r=++s;r<i&&!o.relative[n[r].type];r++);return kn(s>1&&yn(u),s>1&&xn(n.slice(0,s-1).concat({value:" "===n[s-2].type?"*":""})).replace(B,"$1"),e,s<r&&Tn(n.slice(s,r)),r<i&&Tn(n=n.slice(r)),r<i&&xn(n))}u.push(e)}return yn(u)}return hn.prototype=o.filters=o.pseudos,o.setFilters=new hn,a=an.tokenize=function(n,t){var e,r,i,a,l,s,d,c=j[n+" "];if(c)return t?0:c.slice(0);for(l=n,s=[],d=o.preFilter;l;){for(a in e&&!(r=$.exec(l))||(r&&(l=l.slice(r[0].length)||l),s.push(i=[])),e=!1,(r=U.exec(l))&&(e=r.shift(),i.push({value:e,type:r[0].replace(B," ")}),l=l.slice(e.length)),o.filter)!(r=X[a].exec(l))||d[a]&&!(r=d[a](r))||(e=r.shift(),i.push({value:e,type:a,matches:r}),l=l.slice(e.length));if(!e)break}return t?l.length:l?an.error(n):j(n,s).slice(0)},l=an.compile=function(n,t){var e,r=[],i=[],l=E[n+" "];if(!l){for(t||(t=a(n)),e=t.length;e--;)(l=Tn(t[e]))[y]?r.push(l):i.push(l);(l=E(n,function(n,t){var e=t.length>0,r=n.length>0,i=function(i,a,l,s,c){var p,f,b,h=0,x="0",v=i&&[],y=[],w=d,T=i||r&&o.find.TAG("*",c),C=k+=null==w?1:Math.random()||.1,j=T.length;for(c&&(d=a===m||a||c);x!==j&&null!=(p=T[x]);x++){if(r&&p){for(f=0,a||p.ownerDocument===m||(u(p),l=!g);b=n[f++];)if(b(p,a||m,l)){s.push(p);break}c&&(k=C)}e&&((p=!b&&p)&&h--,i&&v.push(p))}if(h+=x,e&&x!==h){for(f=0;b=t[f++];)b(v,y,a,l);if(i){if(h>0)for(;x--;)v[x]||y[x]||(y[x]=L.call(s));y=wn(y)}z.apply(s,y),c&&!i&&y.length>0&&h+t.length>1&&an.uniqueSort(s)}return c&&(k=C,d=w),v};return e?sn(i):i}(i,r))).selector=n}return l},s=an.select=function(n,t,e,r){var i,s,d,c,p,u="function"==typeof n&&n,m=!r&&a(n=u.selector||n);if(e=e||[],1===m.length){if((s=m[0]=m[0].slice(0)).length>2&&"ID"===(d=s[0]).type&&9===t.nodeType&&g&&o.relative[s[1].type]){if(!(t=(o.find.ID(d.matches[0].replace(Z,nn),t)||[])[0]))return e;u&&(t=t.parentNode),n=n.slice(s.shift().value.length)}for(i=X.needsContext.test(n)?0:s.length;i--&&(d=s[i],!o.relative[c=d.type]);)if((p=o.find[c])&&(r=p(d.matches[0].replace(Z,nn),Q.test(s[0].type)&&bn(t.parentNode)||t))){if(s.splice(i,1),!(n=r.length&&xn(s)))return z.apply(e,r),e;break}}return(u||l(n,m))(r,t,!g,e,!t||Q.test(n)&&bn(t.parentNode)||t),e},e.sortStable=y.split("").sort(S).join("")===y,e.detectDuplicates=!!p,u(),e.sortDetached=dn(function(n){return 1&n.compareDocumentPosition(m.createElement("fieldset"))}),dn(function(n){return n.innerHTML="<a href='#'></a>","#"===n.firstChild.getAttribute("href")})||cn("type|href|height|width",function(n,t,e){if(!e)return n.getAttribute(t,"type"===t.toLowerCase()?1:2)}),e.attributes&&dn(function(n){return n.innerHTML="<input/>",n.firstChild.setAttribute("value",""),""===n.firstChild.getAttribute("value")})||cn("value",function(n,t,e){if(!e&&"input"===n.nodeName.toLowerCase())return n.defaultValue}),dn(function(n){return null==n.getAttribute("disabled")})||cn(M,function(n,t,e){var o;if(!e)return!0===n[t]?t.toLowerCase():(o=n.getAttributeNode(t))&&o.specified?o.value:null}),an}(e);T.find=E,T.expr=E.selectors,T.expr[":"]=T.expr.pseudos,T.uniqueSort=T.unique=E.uniqueSort,T.text=E.getText,T.isXMLDoc=E.isXML,T.contains=E.contains,T.escapeSelector=E.escape;var S=function(n,t,e){for(var o=[],r=void 0!==e;(n=n[t])&&9!==n.nodeType;)if(1===n.nodeType){if(r&&T(n).is(e))break;o.push(n)}return o},A=function(n,t){for(var e=[];n;n=n.nextSibling)1===n.nodeType&&n!==t&&e.push(n);return e},N=T.expr.match.needsContext;function L(n,t){return n.nodeName&&n.nodeName.toLowerCase()===t.toLowerCase()}var _=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function z(n,t,e){return x(t)?T.grep(n,function(n,o){return!!t.call(n,o,n)!==e}):t.nodeType?T.grep(n,function(n){return n===t!==e}):"string"!=typeof t?T.grep(n,function(n){return p.call(t,n)>-1!==e}):T.filter(t,n,e)}T.filter=function(n,t,e){var o=t[0];return e&&(n=":not("+n+")"),1===t.length&&1===o.nodeType?T.find.matchesSelector(o,n)?[o]:[]:T.find.matches(n,T.grep(t,function(n){return 1===n.nodeType}))},T.fn.extend({find:function(n){var t,e,o=this.length,r=this;if("string"!=typeof n)return this.pushStack(T(n).filter(function(){for(t=0;t<o;t++)if(T.contains(r[t],this))return!0}));for(e=this.pushStack([]),t=0;t<o;t++)T.find(n,r[t],e);return o>1?T.uniqueSort(e):e},filter:function(n){return this.pushStack(z(this,n||[],!1))},not:function(n){return this.pushStack(z(this,n||[],!0))},is:function(n){return!!z(this,"string"==typeof n&&N.test(n)?T(n):n||[],!1).length}});var D,O=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(T.fn.init=function(n,t,e){var o,r;if(!n)return this;if(e=e||D,"string"==typeof n){if(!(o="<"===n[0]&&">"===n[n.length-1]&&n.length>=3?[null,n,null]:O.exec(n))||!o[1]&&t)return!t||t.jquery?(t||e).find(n):this.constructor(t).find(n);if(o[1]){if(t=t instanceof T?t[0]:t,T.merge(this,T.parseHTML(o[1],t&&t.nodeType?t.ownerDocument||t:a,!0)),_.test(o[1])&&T.isPlainObject(t))for(o in t)x(this[o])?this[o](t[o]):this.attr(o,t[o]);return this}return(r=a.getElementById(o[2]))&&(this[0]=r,this.length=1),this}return n.nodeType?(this[0]=n,this.length=1,this):x(n)?void 0!==e.ready?e.ready(n):n(T):T.makeArray(n,this)}).prototype=T.fn,D=T(a);var M=/^(?:parents|prev(?:Until|All))/,q={children:!0,contents:!0,next:!0,prev:!0};function R(n,t){for(;(n=n[t])&&1!==n.nodeType;);return n}T.fn.extend({has:function(n){var t=T(n,this),e=t.length;return this.filter(function(){for(var n=0;n<e;n++)if(T.contains(this,t[n]))return!0})},closest:function(n,t){var e,o=0,r=this.length,i=[],a="string"!=typeof n&&T(n);if(!N.test(n))for(;o<r;o++)for(e=this[o];e&&e!==t;e=e.parentNode)if(e.nodeType<11&&(a?a.index(e)>-1:1===e.nodeType&&T.find.matchesSelector(e,n))){i.push(e);break}return this.pushStack(i.length>1?T.uniqueSort(i):i)},index:function(n){return n?"string"==typeof n?p.call(T(n),this[0]):p.call(this,n.jquery?n[0]:n):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(n,t){return this.pushStack(T.uniqueSort(T.merge(this.get(),T(n,t))))},addBack:function(n){return this.add(null==n?this.prevObject:this.prevObject.filter(n))}}),T.each({parent:function(n){var t=n.parentNode;return t&&11!==t.nodeType?t:null},parents:function(n){return S(n,"parentNode")},parentsUntil:function(n,t,e){return S(n,"parentNode",e)},next:function(n){return R(n,"nextSibling")},prev:function(n){return R(n,"previousSibling")},nextAll:function(n){return S(n,"nextSibling")},prevAll:function(n){return S(n,"previousSibling")},nextUntil:function(n,t,e){return S(n,"nextSibling",e)},prevUntil:function(n,t,e){return S(n,"previousSibling",e)},siblings:function(n){return A((n.parentNode||{}).firstChild,n)},children:function(n){return A(n.firstChild)},contents:function(n){return L(n,"iframe")?n.contentDocument:(L(n,"template")&&(n=n.content||n),T.merge([],n.childNodes))}},function(n,t){T.fn[n]=function(e,o){var r=T.map(this,t,e);return"Until"!==n.slice(-5)&&(o=e),o&&"string"==typeof o&&(r=T.filter(o,r)),this.length>1&&(q[n]||T.uniqueSort(r),M.test(n)&&r.reverse()),this.pushStack(r)}});var H=/[^\x20\t\r\n\f]+/g;function P(n){return n}function I(n){throw n}function B(n,t,e,o){var r;try{n&&x(r=n.promise)?r.call(n).done(t).fail(e):n&&x(r=n.then)?r.call(n,t,e):t.apply(void 0,[n].slice(o))}catch(n){e.apply(void 0,[n])}}T.Callbacks=function(n){n="string"==typeof n?function(n){var t={};return T.each(n.match(H)||[],function(n,e){t[e]=!0}),t}(n):T.extend({},n);var t,e,o,r,i=[],a=[],l=-1,s=function(){for(r=r||n.once,o=t=!0;a.length;l=-1)for(e=a.shift();++l<i.length;)!1===i[l].apply(e[0],e[1])&&n.stopOnFalse&&(l=i.length,e=!1);n.memory||(e=!1),t=!1,r&&(i=e?[]:"")},d={add:function(){return i&&(e&&!t&&(l=i.length-1,a.push(e)),function t(e){T.each(e,function(e,o){x(o)?n.unique&&d.has(o)||i.push(o):o&&o.length&&"string"!==k(o)&&t(o)})}(arguments),e&&!t&&s()),this},remove:function(){return T.each(arguments,function(n,t){for(var e;(e=T.inArray(t,i,e))>-1;)i.splice(e,1),e<=l&&l--}),this},has:function(n){return n?T.inArray(n,i)>-1:i.length>0},empty:function(){return i&&(i=[]),this},disable:function(){return r=a=[],i=e="",this},disabled:function(){return!i},lock:function(){return r=a=[],e||t||(i=e=""),this},locked:function(){return!!r},fireWith:function(n,e){return r||(e=[n,(e=e||[]).slice?e.slice():e],a.push(e),t||s()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!o}};return d},T.extend({Deferred:function(n){var t=[["notify","progress",T.Callbacks("memory"),T.Callbacks("memory"),2],["resolve","done",T.Callbacks("once memory"),T.Callbacks("once memory"),0,"resolved"],["reject","fail",T.Callbacks("once memory"),T.Callbacks("once memory"),1,"rejected"]],o="pending",r={state:function(){return o},always:function(){return i.done(arguments).fail(arguments),this},catch:function(n){return r.then(null,n)},pipe:function(){var n=arguments;return T.Deferred(function(e){T.each(t,function(t,o){var r=x(n[o[4]])&&n[o[4]];i[o[1]](function(){var n=r&&r.apply(this,arguments);n&&x(n.promise)?n.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[o[0]+"With"](this,r?[n]:arguments)})}),n=null}).promise()},then:function(n,o,r){var i=0;function a(n,t,o,r){return function(){var l=this,s=arguments,d=function(){var e,d;if(!(n<i)){if((e=o.apply(l,s))===t.promise())throw new TypeError("Thenable self-resolution");d=e&&("object"==typeof e||"function"==typeof e)&&e.then,x(d)?r?d.call(e,a(i,t,P,r),a(i,t,I,r)):(i++,d.call(e,a(i,t,P,r),a(i,t,I,r),a(i,t,P,t.notifyWith))):(o!==P&&(l=void 0,s=[e]),(r||t.resolveWith)(l,s))}},c=r?d:function(){try{d()}catch(e){T.Deferred.exceptionHook&&T.Deferred.exceptionHook(e,c.stackTrace),n+1>=i&&(o!==I&&(l=void 0,s=[e]),t.rejectWith(l,s))}};n?c():(T.Deferred.getStackHook&&(c.stackTrace=T.Deferred.getStackHook()),e.setTimeout(c))}}return T.Deferred(function(e){t[0][3].add(a(0,e,x(r)?r:P,e.notifyWith)),t[1][3].add(a(0,e,x(n)?n:P)),t[2][3].add(a(0,e,x(o)?o:I))}).promise()},promise:function(n){return null!=n?T.extend(n,r):r}},i={};return T.each(t,function(n,e){var a=e[2],l=e[5];r[e[1]]=a.add,l&&a.add(function(){o=l},t[3-n][2].disable,t[3-n][3].disable,t[0][2].lock,t[0][3].lock),a.add(e[3].fire),i[e[0]]=function(){return i[e[0]+"With"](this===i?void 0:this,arguments),this},i[e[0]+"With"]=a.fireWith}),r.promise(i),n&&n.call(i,i),i},when:function(n){var t=arguments.length,e=t,o=Array(e),r=s.call(arguments),i=T.Deferred(),a=function(n){return function(e){o[n]=this,r[n]=arguments.length>1?s.call(arguments):e,--t||i.resolveWith(o,r)}};if(t<=1&&(B(n,i.done(a(e)).resolve,i.reject,!t),"pending"===i.state()||x(r[e]&&r[e].then)))return i.then();for(;e--;)B(r[e],a(e),i.reject);return i.promise()}});var $=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;T.Deferred.exceptionHook=function(n,t){e.console&&e.console.warn&&n&&$.test(n.name)&&e.console.warn("jQuery.Deferred exception: "+n.message,n.stack,t)},T.readyException=function(n){e.setTimeout(function(){throw n})};var U=T.Deferred();function F(){a.removeEventListener("DOMContentLoaded",F),e.removeEventListener("load",F),T.ready()}T.fn.ready=function(n){return U.then(n).catch(function(n){T.readyException(n)}),this},T.extend({isReady:!1,readyWait:1,ready:function(n){(!0===n?--T.readyWait:T.isReady)||(T.isReady=!0,!0!==n&&--T.readyWait>0||U.resolveWith(a,[T]))}}),T.ready.then=U.then,"complete"===a.readyState||"loading"!==a.readyState&&!a.documentElement.doScroll?e.setTimeout(T.ready):(a.addEventListener("DOMContentLoaded",F),e.addEventListener("load",F));var W=function(n,t,e,o,r,i,a){var l=0,s=n.length,d=null==e;if("object"===k(e))for(l in r=!0,e)W(n,t,l,e[l],!0,i,a);else if(void 0!==o&&(r=!0,x(o)||(a=!0),d&&(a?(t.call(n,o),t=null):(d=t,t=function(n,t,e){return d.call(T(n),e)})),t))for(;l<s;l++)t(n[l],e,a?o:o.call(n[l],l,t(n[l],e)));return r?n:d?t.call(n):s?t(n[0],e):i},V=/^-ms-/,X=/-([a-z])/g;function G(n,t){return t.toUpperCase()}function Y(n){return n.replace(V,"ms-").replace(X,G)}var J=function(n){return 1===n.nodeType||9===n.nodeType||!+n.nodeType};function K(){this.expando=T.expando+K.uid++}K.uid=1,K.prototype={cache:function(n){var t=n[this.expando];return t||(t={},J(n)&&(n.nodeType?n[this.expando]=t:Object.defineProperty(n,this.expando,{value:t,configurable:!0}))),t},set:function(n,t,e){var o,r=this.cache(n);if("string"==typeof t)r[Y(t)]=e;else for(o in t)r[Y(o)]=t[o];return r},get:function(n,t){return void 0===t?this.cache(n):n[this.expando]&&n[this.expando][Y(t)]},access:function(n,t,e){return void 0===t||t&&"string"==typeof t&&void 0===e?this.get(n,t):(this.set(n,t,e),void 0!==e?e:t)},remove:function(n,t){var e,o=n[this.expando];if(void 0!==o){if(void 0!==t){e=(t=Array.isArray(t)?t.map(Y):(t=Y(t))in o?[t]:t.match(H)||[]).length;for(;e--;)delete o[t[e]]}(void 0===t||T.isEmptyObject(o))&&(n.nodeType?n[this.expando]=void 0:delete n[this.expando])}},hasData:function(n){var t=n[this.expando];return void 0!==t&&!T.isEmptyObject(t)}};var Q=new K,Z=new K,nn=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,tn=/[A-Z]/g;function en(n,t,e){var o;if(void 0===e&&1===n.nodeType)if(o="data-"+t.replace(tn,"-$&").toLowerCase(),"string"==typeof(e=n.getAttribute(o))){try{e=function(n){return"true"===n||"false"!==n&&("null"===n?null:n===+n+""?+n:nn.test(n)?JSON.parse(n):n)}(e)}catch(n){}Z.set(n,t,e)}else e=void 0;return e}T.extend({hasData:function(n){return Z.hasData(n)||Q.hasData(n)},data:function(n,t,e){return Z.access(n,t,e)},removeData:function(n,t){Z.remove(n,t)},_data:function(n,t,e){return Q.access(n,t,e)},_removeData:function(n,t){Q.remove(n,t)}}),T.fn.extend({data:function(n,t){var e,o,r,i=this[0],a=i&&i.attributes;if(void 0===n){if(this.length&&(r=Z.get(i),1===i.nodeType&&!Q.get(i,"hasDataAttrs"))){for(e=a.length;e--;)a[e]&&0===(o=a[e].name).indexOf("data-")&&(o=Y(o.slice(5)),en(i,o,r[o]));Q.set(i,"hasDataAttrs",!0)}return r}return"object"==typeof n?this.each(function(){Z.set(this,n)}):W(this,function(t){var e;if(i&&void 0===t)return void 0!==(e=Z.get(i,n))?e:void 0!==(e=en(i,n))?e:void 0;this.each(function(){Z.set(this,n,t)})},null,t,arguments.length>1,null,!0)},removeData:function(n){return this.each(function(){Z.remove(this,n)})}}),T.extend({queue:function(n,t,e){var o;if(n)return t=(t||"fx")+"queue",o=Q.get(n,t),e&&(!o||Array.isArray(e)?o=Q.access(n,t,T.makeArray(e)):o.push(e)),o||[]},dequeue:function(n,t){t=t||"fx";var e=T.queue(n,t),o=e.length,r=e.shift(),i=T._queueHooks(n,t);"inprogress"===r&&(r=e.shift(),o--),r&&("fx"===t&&e.unshift("inprogress"),delete i.stop,r.call(n,function(){T.dequeue(n,t)},i)),!o&&i&&i.empty.fire()},_queueHooks:function(n,t){var e=t+"queueHooks";return Q.get(n,e)||Q.access(n,e,{empty:T.Callbacks("once memory").add(function(){Q.remove(n,[t+"queue",e])})})}}),T.fn.extend({queue:function(n,t){var e=2;return"string"!=typeof n&&(t=n,n="fx",e--),arguments.length<e?T.queue(this[0],n):void 0===t?this:this.each(function(){var e=T.queue(this,n,t);T._queueHooks(this,n),"fx"===n&&"inprogress"!==e[0]&&T.dequeue(this,n)})},dequeue:function(n){return this.each(function(){T.dequeue(this,n)})},clearQueue:function(n){return this.queue(n||"fx",[])},promise:function(n,t){var e,o=1,r=T.Deferred(),i=this,a=this.length,l=function(){--o||r.resolveWith(i,[i])};for("string"!=typeof n&&(t=n,n=void 0),n=n||"fx";a--;)(e=Q.get(i[a],n+"queueHooks"))&&e.empty&&(o++,e.empty.add(l));return l(),r.promise(t)}});var on=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,rn=new RegExp("^(?:([+-])=|)("+on+")([a-z%]*)$","i"),an=["Top","Right","Bottom","Left"],ln=function(n,t){return"none"===(n=t||n).style.display||""===n.style.display&&T.contains(n.ownerDocument,n)&&"none"===T.css(n,"display")},sn=function(n,t,e,o){var r,i,a={};for(i in t)a[i]=n.style[i],n.style[i]=t[i];for(i in r=e.apply(n,o||[]),t)n.style[i]=a[i];return r};function dn(n,t,e,o){var r,i,a=20,l=o?function(){return o.cur()}:function(){return T.css(n,t,"")},s=l(),d=e&&e[3]||(T.cssNumber[t]?"":"px"),c=(T.cssNumber[t]||"px"!==d&&+s)&&rn.exec(T.css(n,t));if(c&&c[3]!==d){for(s/=2,d=d||c[3],c=+s||1;a--;)T.style(n,t,c+d),(1-i)*(1-(i=l()/s||.5))<=0&&(a=0),c/=i;c*=2,T.style(n,t,c+d),e=e||[]}return e&&(c=+c||+s||0,r=e[1]?c+(e[1]+1)*e[2]:+e[2],o&&(o.unit=d,o.start=c,o.end=r)),r}var cn={};function pn(n){var t,e=n.ownerDocument,o=n.nodeName,r=cn[o];return r||(t=e.body.appendChild(e.createElement(o)),r=T.css(t,"display"),t.parentNode.removeChild(t),"none"===r&&(r="block"),cn[o]=r,r)}function un(n,t){for(var e,o,r=[],i=0,a=n.length;i<a;i++)(o=n[i]).style&&(e=o.style.display,t?("none"===e&&(r[i]=Q.get(o,"display")||null,r[i]||(o.style.display="")),""===o.style.display&&ln(o)&&(r[i]=pn(o))):"none"!==e&&(r[i]="none",Q.set(o,"display",e)));for(i=0;i<a;i++)null!=r[i]&&(n[i].style.display=r[i]);return n}T.fn.extend({show:function(){return un(this,!0)},hide:function(){return un(this)},toggle:function(n){return"boolean"==typeof n?n?this.show():this.hide():this.each(function(){ln(this)?T(this).show():T(this).hide()})}});var mn=/^(?:checkbox|radio)$/i,fn=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,gn=/^$|^module$|\/(?:java|ecma)script/i,bn={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function hn(n,t){var e;return e=void 0!==n.getElementsByTagName?n.getElementsByTagName(t||"*"):void 0!==n.querySelectorAll?n.querySelectorAll(t||"*"):[],void 0===t||t&&L(n,t)?T.merge([n],e):e}function xn(n,t){for(var e=0,o=n.length;e<o;e++)Q.set(n[e],"globalEval",!t||Q.get(t[e],"globalEval"))}bn.optgroup=bn.option,bn.tbody=bn.tfoot=bn.colgroup=bn.caption=bn.thead,bn.th=bn.td;var vn=/<|&#?\w+;/;function yn(n,t,e,o,r){for(var i,a,l,s,d,c,p=t.createDocumentFragment(),u=[],m=0,f=n.length;m<f;m++)if((i=n[m])||0===i)if("object"===k(i))T.merge(u,i.nodeType?[i]:i);else if(vn.test(i)){for(a=a||p.appendChild(t.createElement("div")),l=(fn.exec(i)||["",""])[1].toLowerCase(),s=bn[l]||bn._default,a.innerHTML=s[1]+T.htmlPrefilter(i)+s[2],c=s[0];c--;)a=a.lastChild;T.merge(u,a.childNodes),(a=p.firstChild).textContent=""}else u.push(t.createTextNode(i));for(p.textContent="",m=0;i=u[m++];)if(o&&T.inArray(i,o)>-1)r&&r.push(i);else if(d=T.contains(i.ownerDocument,i),a=hn(p.appendChild(i),"script"),d&&xn(a),e)for(c=0;i=a[c++];)gn.test(i.type||"")&&e.push(i);return p}!function(){var n=a.createDocumentFragment().appendChild(a.createElement("div")),t=a.createElement("input");t.setAttribute("type","radio"),t.setAttribute("checked","checked"),t.setAttribute("name","t"),n.appendChild(t),h.checkClone=n.cloneNode(!0).cloneNode(!0).lastChild.checked,n.innerHTML="<textarea>x</textarea>",h.noCloneChecked=!!n.cloneNode(!0).lastChild.defaultValue}();var wn=a.documentElement,kn=/^key/,Tn=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Cn=/^([^.]*)(?:\.(.+)|)/;function jn(){return!0}function En(){return!1}function Sn(){try{return a.activeElement}catch(n){}}function An(n,t,e,o,r,i){var a,l;if("object"==typeof t){for(l in"string"!=typeof e&&(o=o||e,e=void 0),t)An(n,l,e,o,t[l],i);return n}if(null==o&&null==r?(r=e,o=e=void 0):null==r&&("string"==typeof e?(r=o,o=void 0):(r=o,o=e,e=void 0)),!1===r)r=En;else if(!r)return n;return 1===i&&(a=r,(r=function(n){return T().off(n),a.apply(this,arguments)}).guid=a.guid||(a.guid=T.guid++)),n.each(function(){T.event.add(this,t,r,o,e)})}T.event={global:{},add:function(n,t,e,o,r){var i,a,l,s,d,c,p,u,m,f,g,b=Q.get(n);if(b)for(e.handler&&(e=(i=e).handler,r=i.selector),r&&T.find.matchesSelector(wn,r),e.guid||(e.guid=T.guid++),(s=b.events)||(s=b.events={}),(a=b.handle)||(a=b.handle=function(t){return void 0!==T&&T.event.triggered!==t.type?T.event.dispatch.apply(n,arguments):void 0}),d=(t=(t||"").match(H)||[""]).length;d--;)m=g=(l=Cn.exec(t[d])||[])[1],f=(l[2]||"").split(".").sort(),m&&(p=T.event.special[m]||{},m=(r?p.delegateType:p.bindType)||m,p=T.event.special[m]||{},c=T.extend({type:m,origType:g,data:o,handler:e,guid:e.guid,selector:r,needsContext:r&&T.expr.match.needsContext.test(r),namespace:f.join(".")},i),(u=s[m])||((u=s[m]=[]).delegateCount=0,p.setup&&!1!==p.setup.call(n,o,f,a)||n.addEventListener&&n.addEventListener(m,a)),p.add&&(p.add.call(n,c),c.handler.guid||(c.handler.guid=e.guid)),r?u.splice(u.delegateCount++,0,c):u.push(c),T.event.global[m]=!0)},remove:function(n,t,e,o,r){var i,a,l,s,d,c,p,u,m,f,g,b=Q.hasData(n)&&Q.get(n);if(b&&(s=b.events)){for(d=(t=(t||"").match(H)||[""]).length;d--;)if(m=g=(l=Cn.exec(t[d])||[])[1],f=(l[2]||"").split(".").sort(),m){for(p=T.event.special[m]||{},u=s[m=(o?p.delegateType:p.bindType)||m]||[],l=l[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=i=u.length;i--;)c=u[i],!r&&g!==c.origType||e&&e.guid!==c.guid||l&&!l.test(c.namespace)||o&&o!==c.selector&&("**"!==o||!c.selector)||(u.splice(i,1),c.selector&&u.delegateCount--,p.remove&&p.remove.call(n,c));a&&!u.length&&(p.teardown&&!1!==p.teardown.call(n,f,b.handle)||T.removeEvent(n,m,b.handle),delete s[m])}else for(m in s)T.event.remove(n,m+t[d],e,o,!0);T.isEmptyObject(s)&&Q.remove(n,"handle events")}},dispatch:function(n){var t,e,o,r,i,a,l=T.event.fix(n),s=new Array(arguments.length),d=(Q.get(this,"events")||{})[l.type]||[],c=T.event.special[l.type]||{};for(s[0]=l,t=1;t<arguments.length;t++)s[t]=arguments[t];if(l.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,l)){for(a=T.event.handlers.call(this,l,d),t=0;(r=a[t++])&&!l.isPropagationStopped();)for(l.currentTarget=r.elem,e=0;(i=r.handlers[e++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!l.rnamespace.test(i.namespace)||(l.handleObj=i,l.data=i.data,void 0!==(o=((T.event.special[i.origType]||{}).handle||i.handler).apply(r.elem,s))&&!1===(l.result=o)&&(l.preventDefault(),l.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,l),l.result}},handlers:function(n,t){var e,o,r,i,a,l=[],s=t.delegateCount,d=n.target;if(s&&d.nodeType&&!("click"===n.type&&n.button>=1))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==n.type||!0!==d.disabled)){for(i=[],a={},e=0;e<s;e++)void 0===a[r=(o=t[e]).selector+" "]&&(a[r]=o.needsContext?T(r,this).index(d)>-1:T.find(r,this,null,[d]).length),a[r]&&i.push(o);i.length&&l.push({elem:d,handlers:i})}return d=this,s<t.length&&l.push({elem:d,handlers:t.slice(s)}),l},addProp:function(n,t){Object.defineProperty(T.Event.prototype,n,{enumerable:!0,configurable:!0,get:x(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[n]},set:function(t){Object.defineProperty(this,n,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(n){return n[T.expando]?n:new T.Event(n)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==Sn()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===Sn()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&L(this,"input"))return this.click(),!1},_default:function(n){return L(n.target,"a")}},beforeunload:{postDispatch:function(n){void 0!==n.result&&n.originalEvent&&(n.originalEvent.returnValue=n.result)}}}},T.removeEvent=function(n,t,e){n.removeEventListener&&n.removeEventListener(t,e)},T.Event=function(n,t){if(!(this instanceof T.Event))return new T.Event(n,t);n&&n.type?(this.originalEvent=n,this.type=n.type,this.isDefaultPrevented=n.defaultPrevented||void 0===n.defaultPrevented&&!1===n.returnValue?jn:En,this.target=n.target&&3===n.target.nodeType?n.target.parentNode:n.target,this.currentTarget=n.currentTarget,this.relatedTarget=n.relatedTarget):this.type=n,t&&T.extend(this,t),this.timeStamp=n&&n.timeStamp||Date.now(),this[T.expando]=!0},T.Event.prototype={constructor:T.Event,isDefaultPrevented:En,isPropagationStopped:En,isImmediatePropagationStopped:En,isSimulated:!1,preventDefault:function(){var n=this.originalEvent;this.isDefaultPrevented=jn,n&&!this.isSimulated&&n.preventDefault()},stopPropagation:function(){var n=this.originalEvent;this.isPropagationStopped=jn,n&&!this.isSimulated&&n.stopPropagation()},stopImmediatePropagation:function(){var n=this.originalEvent;this.isImmediatePropagationStopped=jn,n&&!this.isSimulated&&n.stopImmediatePropagation(),this.stopPropagation()}},T.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(n){var t=n.button;return null==n.which&&kn.test(n.type)?null!=n.charCode?n.charCode:n.keyCode:!n.which&&void 0!==t&&Tn.test(n.type)?1&t?1:2&t?3:4&t?2:0:n.which}},T.event.addProp),T.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(n,t){T.event.special[n]={delegateType:t,bindType:t,handle:function(n){var e,o=n.relatedTarget,r=n.handleObj;return o&&(o===this||T.contains(this,o))||(n.type=r.origType,e=r.handler.apply(this,arguments),n.type=t),e}}}),T.fn.extend({on:function(n,t,e,o){return An(this,n,t,e,o)},one:function(n,t,e,o){return An(this,n,t,e,o,1)},off:function(n,t,e){var o,r;if(n&&n.preventDefault&&n.handleObj)return o=n.handleObj,T(n.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"==typeof n){for(r in n)this.off(r,t,n[r]);return this}return!1!==t&&"function"!=typeof t||(e=t,t=void 0),!1===e&&(e=En),this.each(function(){T.event.remove(this,n,e,t)})}});var Nn=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Ln=/<script|<style|<link/i,_n=/checked\s*(?:[^=]|=\s*.checked.)/i,zn=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Dn(n,t){return L(n,"table")&&L(11!==t.nodeType?t:t.firstChild,"tr")&&T(n).children("tbody")[0]||n}function On(n){return n.type=(null!==n.getAttribute("type"))+"/"+n.type,n}function Mn(n){return"true/"===(n.type||"").slice(0,5)?n.type=n.type.slice(5):n.removeAttribute("type"),n}function qn(n,t){var e,o,r,i,a,l,s,d;if(1===t.nodeType){if(Q.hasData(n)&&(i=Q.access(n),a=Q.set(t,i),d=i.events))for(r in delete a.handle,a.events={},d)for(e=0,o=d[r].length;e<o;e++)T.event.add(t,r,d[r][e]);Z.hasData(n)&&(l=Z.access(n),s=T.extend({},l),Z.set(t,s))}}function Rn(n,t){var e=t.nodeName.toLowerCase();"input"===e&&mn.test(n.type)?t.checked=n.checked:"input"!==e&&"textarea"!==e||(t.defaultValue=n.defaultValue)}function Hn(n,t,e,o){t=d.apply([],t);var r,i,a,l,s,c,p=0,u=n.length,m=u-1,f=t[0],g=x(f);if(g||u>1&&"string"==typeof f&&!h.checkClone&&_n.test(f))return n.each(function(r){var i=n.eq(r);g&&(t[0]=f.call(this,r,i.html())),Hn(i,t,e,o)});if(u&&(i=(r=yn(t,n[0].ownerDocument,!1,n,o)).firstChild,1===r.childNodes.length&&(r=i),i||o)){for(l=(a=T.map(hn(r,"script"),On)).length;p<u;p++)s=r,p!==m&&(s=T.clone(s,!0,!0),l&&T.merge(a,hn(s,"script"))),e.call(n[p],s,p);if(l)for(c=a[a.length-1].ownerDocument,T.map(a,Mn),p=0;p<l;p++)s=a[p],gn.test(s.type||"")&&!Q.access(s,"globalEval")&&T.contains(c,s)&&(s.src&&"module"!==(s.type||"").toLowerCase()?T._evalUrl&&T._evalUrl(s.src):w(s.textContent.replace(zn,""),c,s))}return n}function Pn(n,t,e){for(var o,r=t?T.filter(t,n):n,i=0;null!=(o=r[i]);i++)e||1!==o.nodeType||T.cleanData(hn(o)),o.parentNode&&(e&&T.contains(o.ownerDocument,o)&&xn(hn(o,"script")),o.parentNode.removeChild(o));return n}T.extend({htmlPrefilter:function(n){return n.replace(Nn,"<$1></$2>")},clone:function(n,t,e){var o,r,i,a,l=n.cloneNode(!0),s=T.contains(n.ownerDocument,n);if(!(h.noCloneChecked||1!==n.nodeType&&11!==n.nodeType||T.isXMLDoc(n)))for(a=hn(l),o=0,r=(i=hn(n)).length;o<r;o++)Rn(i[o],a[o]);if(t)if(e)for(i=i||hn(n),a=a||hn(l),o=0,r=i.length;o<r;o++)qn(i[o],a[o]);else qn(n,l);return(a=hn(l,"script")).length>0&&xn(a,!s&&hn(n,"script")),l},cleanData:function(n){for(var t,e,o,r=T.event.special,i=0;void 0!==(e=n[i]);i++)if(J(e)){if(t=e[Q.expando]){if(t.events)for(o in t.events)r[o]?T.event.remove(e,o):T.removeEvent(e,o,t.handle);e[Q.expando]=void 0}e[Z.expando]&&(e[Z.expando]=void 0)}}}),T.fn.extend({detach:function(n){return Pn(this,n,!0)},remove:function(n){return Pn(this,n)},text:function(n){return W(this,function(n){return void 0===n?T.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=n)})},null,n,arguments.length)},append:function(){return Hn(this,arguments,function(n){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Dn(this,n).appendChild(n)})},prepend:function(){return Hn(this,arguments,function(n){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Dn(this,n);t.insertBefore(n,t.firstChild)}})},before:function(){return Hn(this,arguments,function(n){this.parentNode&&this.parentNode.insertBefore(n,this)})},after:function(){return Hn(this,arguments,function(n){this.parentNode&&this.parentNode.insertBefore(n,this.nextSibling)})},empty:function(){for(var n,t=0;null!=(n=this[t]);t++)1===n.nodeType&&(T.cleanData(hn(n,!1)),n.textContent="");return this},clone:function(n,t){return n=null!=n&&n,t=null==t?n:t,this.map(function(){return T.clone(this,n,t)})},html:function(n){return W(this,function(n){var t=this[0]||{},e=0,o=this.length;if(void 0===n&&1===t.nodeType)return t.innerHTML;if("string"==typeof n&&!Ln.test(n)&&!bn[(fn.exec(n)||["",""])[1].toLowerCase()]){n=T.htmlPrefilter(n);try{for(;e<o;e++)1===(t=this[e]||{}).nodeType&&(T.cleanData(hn(t,!1)),t.innerHTML=n);t=0}catch(n){}}t&&this.empty().append(n)},null,n,arguments.length)},replaceWith:function(){var n=[];return Hn(this,arguments,function(t){var e=this.parentNode;T.inArray(this,n)<0&&(T.cleanData(hn(this)),e&&e.replaceChild(t,this))},n)}}),T.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(n,t){T.fn[n]=function(n){for(var e,o=[],r=T(n),i=r.length-1,a=0;a<=i;a++)e=a===i?this:this.clone(!0),T(r[a])[t](e),c.apply(o,e.get());return this.pushStack(o)}});var In=new RegExp("^("+on+")(?!px)[a-z%]+$","i"),Bn=function(n){var t=n.ownerDocument.defaultView;return t&&t.opener||(t=e),t.getComputedStyle(n)},$n=new RegExp(an.join("|"),"i");function Un(n,t,e){var o,r,i,a,l=n.style;return(e=e||Bn(n))&&(""!==(a=e.getPropertyValue(t)||e[t])||T.contains(n.ownerDocument,n)||(a=T.style(n,t)),!h.pixelBoxStyles()&&In.test(a)&&$n.test(t)&&(o=l.width,r=l.minWidth,i=l.maxWidth,l.minWidth=l.maxWidth=l.width=a,a=e.width,l.width=o,l.minWidth=r,l.maxWidth=i)),void 0!==a?a+"":a}function Fn(n,t){return{get:function(){if(!n())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function n(){if(c){d.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",wn.appendChild(d).appendChild(c);var n=e.getComputedStyle(c);o="1%"!==n.top,s=12===t(n.marginLeft),c.style.right="60%",l=36===t(n.right),r=36===t(n.width),c.style.position="absolute",i=36===c.offsetWidth||"absolute",wn.removeChild(d),c=null}}function t(n){return Math.round(parseFloat(n))}var o,r,i,l,s,d=a.createElement("div"),c=a.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",h.clearCloneStyle="content-box"===c.style.backgroundClip,T.extend(h,{boxSizingReliable:function(){return n(),r},pixelBoxStyles:function(){return n(),l},pixelPosition:function(){return n(),o},reliableMarginLeft:function(){return n(),s},scrollboxSize:function(){return n(),i}}))}();var Wn=/^(none|table(?!-c[ea]).+)/,Vn=/^--/,Xn={position:"absolute",visibility:"hidden",display:"block"},Gn={letterSpacing:"0",fontWeight:"400"},Yn=["Webkit","Moz","ms"],Jn=a.createElement("div").style;function Kn(n){var t=T.cssProps[n];return t||(t=T.cssProps[n]=function(n){if(n in Jn)return n;for(var t=n[0].toUpperCase()+n.slice(1),e=Yn.length;e--;)if((n=Yn[e]+t)in Jn)return n}(n)||n),t}function Qn(n,t,e){var o=rn.exec(t);return o?Math.max(0,o[2]-(e||0))+(o[3]||"px"):t}function Zn(n,t,e,o,r,i){var a="width"===t?1:0,l=0,s=0;if(e===(o?"border":"content"))return 0;for(;a<4;a+=2)"margin"===e&&(s+=T.css(n,e+an[a],!0,r)),o?("content"===e&&(s-=T.css(n,"padding"+an[a],!0,r)),"margin"!==e&&(s-=T.css(n,"border"+an[a]+"Width",!0,r))):(s+=T.css(n,"padding"+an[a],!0,r),"padding"!==e?s+=T.css(n,"border"+an[a]+"Width",!0,r):l+=T.css(n,"border"+an[a]+"Width",!0,r));return!o&&i>=0&&(s+=Math.max(0,Math.ceil(n["offset"+t[0].toUpperCase()+t.slice(1)]-i-s-l-.5))),s}function nt(n,t,e){var o=Bn(n),r=Un(n,t,o),i="border-box"===T.css(n,"boxSizing",!1,o),a=i;if(In.test(r)){if(!e)return r;r="auto"}return a=a&&(h.boxSizingReliable()||r===n.style[t]),("auto"===r||!parseFloat(r)&&"inline"===T.css(n,"display",!1,o))&&(r=n["offset"+t[0].toUpperCase()+t.slice(1)],a=!0),(r=parseFloat(r)||0)+Zn(n,t,e||(i?"border":"content"),a,o,r)+"px"}function tt(n,t,e,o,r){return new tt.prototype.init(n,t,e,o,r)}T.extend({cssHooks:{opacity:{get:function(n,t){if(t){var e=Un(n,"opacity");return""===e?"1":e}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(n,t,e,o){if(n&&3!==n.nodeType&&8!==n.nodeType&&n.style){var r,i,a,l=Y(t),s=Vn.test(t),d=n.style;if(s||(t=Kn(l)),a=T.cssHooks[t]||T.cssHooks[l],void 0===e)return a&&"get"in a&&void 0!==(r=a.get(n,!1,o))?r:d[t];"string"===(i=typeof e)&&(r=rn.exec(e))&&r[1]&&(e=dn(n,t,r),i="number"),null!=e&&e==e&&("number"===i&&(e+=r&&r[3]||(T.cssNumber[l]?"":"px")),h.clearCloneStyle||""!==e||0!==t.indexOf("background")||(d[t]="inherit"),a&&"set"in a&&void 0===(e=a.set(n,e,o))||(s?d.setProperty(t,e):d[t]=e))}},css:function(n,t,e,o){var r,i,a,l=Y(t);return Vn.test(t)||(t=Kn(l)),(a=T.cssHooks[t]||T.cssHooks[l])&&"get"in a&&(r=a.get(n,!0,e)),void 0===r&&(r=Un(n,t,o)),"normal"===r&&t in Gn&&(r=Gn[t]),""===e||e?(i=parseFloat(r),!0===e||isFinite(i)?i||0:r):r}}),T.each(["height","width"],function(n,t){T.cssHooks[t]={get:function(n,e,o){if(e)return!Wn.test(T.css(n,"display"))||n.getClientRects().length&&n.getBoundingClientRect().width?nt(n,t,o):sn(n,Xn,function(){return nt(n,t,o)})},set:function(n,e,o){var r,i=Bn(n),a="border-box"===T.css(n,"boxSizing",!1,i),l=o&&Zn(n,t,o,a,i);return a&&h.scrollboxSize()===i.position&&(l-=Math.ceil(n["offset"+t[0].toUpperCase()+t.slice(1)]-parseFloat(i[t])-Zn(n,t,"border",!1,i)-.5)),l&&(r=rn.exec(e))&&"px"!==(r[3]||"px")&&(n.style[t]=e,e=T.css(n,t)),Qn(0,e,l)}}}),T.cssHooks.marginLeft=Fn(h.reliableMarginLeft,function(n,t){if(t)return(parseFloat(Un(n,"marginLeft"))||n.getBoundingClientRect().left-sn(n,{marginLeft:0},function(){return n.getBoundingClientRect().left}))+"px"}),T.each({margin:"",padding:"",border:"Width"},function(n,t){T.cssHooks[n+t]={expand:function(e){for(var o=0,r={},i="string"==typeof e?e.split(" "):[e];o<4;o++)r[n+an[o]+t]=i[o]||i[o-2]||i[0];return r}},"margin"!==n&&(T.cssHooks[n+t].set=Qn)}),T.fn.extend({css:function(n,t){return W(this,function(n,t,e){var o,r,i={},a=0;if(Array.isArray(t)){for(o=Bn(n),r=t.length;a<r;a++)i[t[a]]=T.css(n,t[a],!1,o);return i}return void 0!==e?T.style(n,t,e):T.css(n,t)},n,t,arguments.length>1)}}),T.Tween=tt,tt.prototype={constructor:tt,init:function(n,t,e,o,r,i){this.elem=n,this.prop=e,this.easing=r||T.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=o,this.unit=i||(T.cssNumber[e]?"":"px")},cur:function(){var n=tt.propHooks[this.prop];return n&&n.get?n.get(this):tt.propHooks._default.get(this)},run:function(n){var t,e=tt.propHooks[this.prop];return this.options.duration?this.pos=t=T.easing[this.easing](n,this.options.duration*n,0,1,this.options.duration):this.pos=t=n,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),e&&e.set?e.set(this):tt.propHooks._default.set(this),this}},tt.prototype.init.prototype=tt.prototype,tt.propHooks={_default:{get:function(n){var t;return 1!==n.elem.nodeType||null!=n.elem[n.prop]&&null==n.elem.style[n.prop]?n.elem[n.prop]:(t=T.css(n.elem,n.prop,""))&&"auto"!==t?t:0},set:function(n){T.fx.step[n.prop]?T.fx.step[n.prop](n):1!==n.elem.nodeType||null==n.elem.style[T.cssProps[n.prop]]&&!T.cssHooks[n.prop]?n.elem[n.prop]=n.now:T.style(n.elem,n.prop,n.now+n.unit)}}},tt.propHooks.scrollTop=tt.propHooks.scrollLeft={set:function(n){n.elem.nodeType&&n.elem.parentNode&&(n.elem[n.prop]=n.now)}},T.easing={linear:function(n){return n},swing:function(n){return.5-Math.cos(n*Math.PI)/2},_default:"swing"},T.fx=tt.prototype.init,T.fx.step={};var et,ot,rt=/^(?:toggle|show|hide)$/,it=/queueHooks$/;function at(){ot&&(!1===a.hidden&&e.requestAnimationFrame?e.requestAnimationFrame(at):e.setTimeout(at,T.fx.interval),T.fx.tick())}function lt(){return e.setTimeout(function(){et=void 0}),et=Date.now()}function st(n,t){var e,o=0,r={height:n};for(t=t?1:0;o<4;o+=2-t)r["margin"+(e=an[o])]=r["padding"+e]=n;return t&&(r.opacity=r.width=n),r}function dt(n,t,e){for(var o,r=(ct.tweeners[t]||[]).concat(ct.tweeners["*"]),i=0,a=r.length;i<a;i++)if(o=r[i].call(e,t,n))return o}function ct(n,t,e){var o,r,i=0,a=ct.prefilters.length,l=T.Deferred().always(function(){delete s.elem}),s=function(){if(r)return!1;for(var t=et||lt(),e=Math.max(0,d.startTime+d.duration-t),o=1-(e/d.duration||0),i=0,a=d.tweens.length;i<a;i++)d.tweens[i].run(o);return l.notifyWith(n,[d,o,e]),o<1&&a?e:(a||l.notifyWith(n,[d,1,0]),l.resolveWith(n,[d]),!1)},d=l.promise({elem:n,props:T.extend({},t),opts:T.extend(!0,{specialEasing:{},easing:T.easing._default},e),originalProperties:t,originalOptions:e,startTime:et||lt(),duration:e.duration,tweens:[],createTween:function(t,e){var o=T.Tween(n,d.opts,t,e,d.opts.specialEasing[t]||d.opts.easing);return d.tweens.push(o),o},stop:function(t){var e=0,o=t?d.tweens.length:0;if(r)return this;for(r=!0;e<o;e++)d.tweens[e].run(1);return t?(l.notifyWith(n,[d,1,0]),l.resolveWith(n,[d,t])):l.rejectWith(n,[d,t]),this}}),c=d.props;for(!function(n,t){var e,o,r,i,a;for(e in n)if(r=t[o=Y(e)],i=n[e],Array.isArray(i)&&(r=i[1],i=n[e]=i[0]),e!==o&&(n[o]=i,delete n[e]),(a=T.cssHooks[o])&&"expand"in a)for(e in i=a.expand(i),delete n[o],i)e in n||(n[e]=i[e],t[e]=r);else t[o]=r}(c,d.opts.specialEasing);i<a;i++)if(o=ct.prefilters[i].call(d,n,c,d.opts))return x(o.stop)&&(T._queueHooks(d.elem,d.opts.queue).stop=o.stop.bind(o)),o;return T.map(c,dt,d),x(d.opts.start)&&d.opts.start.call(n,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),T.fx.timer(T.extend(s,{elem:n,anim:d,queue:d.opts.queue})),d}T.Animation=T.extend(ct,{tweeners:{"*":[function(n,t){var e=this.createTween(n,t);return dn(e.elem,n,rn.exec(t),e),e}]},tweener:function(n,t){x(n)?(t=n,n=["*"]):n=n.match(H);for(var e,o=0,r=n.length;o<r;o++)e=n[o],ct.tweeners[e]=ct.tweeners[e]||[],ct.tweeners[e].unshift(t)},prefilters:[function(n,t,e){var o,r,i,a,l,s,d,c,p="width"in t||"height"in t,u=this,m={},f=n.style,g=n.nodeType&&ln(n),b=Q.get(n,"fxshow");for(o in e.queue||(null==(a=T._queueHooks(n,"fx")).unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,u.always(function(){u.always(function(){a.unqueued--,T.queue(n,"fx").length||a.empty.fire()})})),t)if(r=t[o],rt.test(r)){if(delete t[o],i=i||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!b||void 0===b[o])continue;g=!0}m[o]=b&&b[o]||T.style(n,o)}if((s=!T.isEmptyObject(t))||!T.isEmptyObject(m))for(o in p&&1===n.nodeType&&(e.overflow=[f.overflow,f.overflowX,f.overflowY],null==(d=b&&b.display)&&(d=Q.get(n,"display")),"none"===(c=T.css(n,"display"))&&(d?c=d:(un([n],!0),d=n.style.display||d,c=T.css(n,"display"),un([n]))),("inline"===c||"inline-block"===c&&null!=d)&&"none"===T.css(n,"float")&&(s||(u.done(function(){f.display=d}),null==d&&(c=f.display,d="none"===c?"":c)),f.display="inline-block")),e.overflow&&(f.overflow="hidden",u.always(function(){f.overflow=e.overflow[0],f.overflowX=e.overflow[1],f.overflowY=e.overflow[2]})),s=!1,m)s||(b?"hidden"in b&&(g=b.hidden):b=Q.access(n,"fxshow",{display:d}),i&&(b.hidden=!g),g&&un([n],!0),u.done(function(){for(o in g||un([n]),Q.remove(n,"fxshow"),m)T.style(n,o,m[o])})),s=dt(g?b[o]:0,o,u),o in b||(b[o]=s.start,g&&(s.end=s.start,s.start=0))}],prefilter:function(n,t){t?ct.prefilters.unshift(n):ct.prefilters.push(n)}}),T.speed=function(n,t,e){var o=n&&"object"==typeof n?T.extend({},n):{complete:e||!e&&t||x(n)&&n,duration:n,easing:e&&t||t&&!x(t)&&t};return T.fx.off?o.duration=0:"number"!=typeof o.duration&&(o.duration in T.fx.speeds?o.duration=T.fx.speeds[o.duration]:o.duration=T.fx.speeds._default),null!=o.queue&&!0!==o.queue||(o.queue="fx"),o.old=o.complete,o.complete=function(){x(o.old)&&o.old.call(this),o.queue&&T.dequeue(this,o.queue)},o},T.fn.extend({fadeTo:function(n,t,e,o){return this.filter(ln).css("opacity",0).show().end().animate({opacity:t},n,e,o)},animate:function(n,t,e,o){var r=T.isEmptyObject(n),i=T.speed(t,e,o),a=function(){var t=ct(this,T.extend({},n),i);(r||Q.get(this,"finish"))&&t.stop(!0)};return a.finish=a,r||!1===i.queue?this.each(a):this.queue(i.queue,a)},stop:function(n,t,e){var o=function(n){var t=n.stop;delete n.stop,t(e)};return"string"!=typeof n&&(e=t,t=n,n=void 0),t&&!1!==n&&this.queue(n||"fx",[]),this.each(function(){var t=!0,r=null!=n&&n+"queueHooks",i=T.timers,a=Q.get(this);if(r)a[r]&&a[r].stop&&o(a[r]);else for(r in a)a[r]&&a[r].stop&&it.test(r)&&o(a[r]);for(r=i.length;r--;)i[r].elem!==this||null!=n&&i[r].queue!==n||(i[r].anim.stop(e),t=!1,i.splice(r,1));!t&&e||T.dequeue(this,n)})},finish:function(n){return!1!==n&&(n=n||"fx"),this.each(function(){var t,e=Q.get(this),o=e[n+"queue"],r=e[n+"queueHooks"],i=T.timers,a=o?o.length:0;for(e.finish=!0,T.queue(this,n,[]),r&&r.stop&&r.stop.call(this,!0),t=i.length;t--;)i[t].elem===this&&i[t].queue===n&&(i[t].anim.stop(!0),i.splice(t,1));for(t=0;t<a;t++)o[t]&&o[t].finish&&o[t].finish.call(this);delete e.finish})}}),T.each(["toggle","show","hide"],function(n,t){var e=T.fn[t];T.fn[t]=function(n,o,r){return null==n||"boolean"==typeof n?e.apply(this,arguments):this.animate(st(t,!0),n,o,r)}}),T.each({slideDown:st("show"),slideUp:st("hide"),slideToggle:st("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(n,t){T.fn[n]=function(n,e,o){return this.animate(t,n,e,o)}}),T.timers=[],T.fx.tick=function(){var n,t=0,e=T.timers;for(et=Date.now();t<e.length;t++)(n=e[t])()||e[t]!==n||e.splice(t--,1);e.length||T.fx.stop(),et=void 0},T.fx.timer=function(n){T.timers.push(n),T.fx.start()},T.fx.interval=13,T.fx.start=function(){ot||(ot=!0,at())},T.fx.stop=function(){ot=null},T.fx.speeds={slow:600,fast:200,_default:400},T.fn.delay=function(n,t){return n=T.fx&&T.fx.speeds[n]||n,t=t||"fx",this.queue(t,function(t,o){var r=e.setTimeout(t,n);o.stop=function(){e.clearTimeout(r)}})},function(){var n=a.createElement("input"),t=a.createElement("select").appendChild(a.createElement("option"));n.type="checkbox",h.checkOn=""!==n.value,h.optSelected=t.selected,(n=a.createElement("input")).value="t",n.type="radio",h.radioValue="t"===n.value}();var pt,ut=T.expr.attrHandle;T.fn.extend({attr:function(n,t){return W(this,T.attr,n,t,arguments.length>1)},removeAttr:function(n){return this.each(function(){T.removeAttr(this,n)})}}),T.extend({attr:function(n,t,e){var o,r,i=n.nodeType;if(3!==i&&8!==i&&2!==i)return void 0===n.getAttribute?T.prop(n,t,e):(1===i&&T.isXMLDoc(n)||(r=T.attrHooks[t.toLowerCase()]||(T.expr.match.bool.test(t)?pt:void 0)),void 0!==e?null===e?void T.removeAttr(n,t):r&&"set"in r&&void 0!==(o=r.set(n,e,t))?o:(n.setAttribute(t,e+""),e):r&&"get"in r&&null!==(o=r.get(n,t))?o:null==(o=T.find.attr(n,t))?void 0:o)},attrHooks:{type:{set:function(n,t){if(!h.radioValue&&"radio"===t&&L(n,"input")){var e=n.value;return n.setAttribute("type",t),e&&(n.value=e),t}}}},removeAttr:function(n,t){var e,o=0,r=t&&t.match(H);if(r&&1===n.nodeType)for(;e=r[o++];)n.removeAttribute(e)}}),pt={set:function(n,t,e){return!1===t?T.removeAttr(n,e):n.setAttribute(e,e),e}},T.each(T.expr.match.bool.source.match(/\w+/g),function(n,t){var e=ut[t]||T.find.attr;ut[t]=function(n,t,o){var r,i,a=t.toLowerCase();return o||(i=ut[a],ut[a]=r,r=null!=e(n,t,o)?a:null,ut[a]=i),r}});var mt=/^(?:input|select|textarea|button)$/i,ft=/^(?:a|area)$/i;function gt(n){return(n.match(H)||[]).join(" ")}function bt(n){return n.getAttribute&&n.getAttribute("class")||""}function ht(n){return Array.isArray(n)?n:"string"==typeof n&&n.match(H)||[]}T.fn.extend({prop:function(n,t){return W(this,T.prop,n,t,arguments.length>1)},removeProp:function(n){return this.each(function(){delete this[T.propFix[n]||n]})}}),T.extend({prop:function(n,t,e){var o,r,i=n.nodeType;if(3!==i&&8!==i&&2!==i)return 1===i&&T.isXMLDoc(n)||(t=T.propFix[t]||t,r=T.propHooks[t]),void 0!==e?r&&"set"in r&&void 0!==(o=r.set(n,e,t))?o:n[t]=e:r&&"get"in r&&null!==(o=r.get(n,t))?o:n[t]},propHooks:{tabIndex:{get:function(n){var t=T.find.attr(n,"tabindex");return t?parseInt(t,10):mt.test(n.nodeName)||ft.test(n.nodeName)&&n.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),h.optSelected||(T.propHooks.selected={get:function(n){var t=n.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(n){var t=n.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),T.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){T.propFix[this.toLowerCase()]=this}),T.fn.extend({addClass:function(n){var t,e,o,r,i,a,l,s=0;if(x(n))return this.each(function(t){T(this).addClass(n.call(this,t,bt(this)))});if((t=ht(n)).length)for(;e=this[s++];)if(r=bt(e),o=1===e.nodeType&&" "+gt(r)+" "){for(a=0;i=t[a++];)o.indexOf(" "+i+" ")<0&&(o+=i+" ");r!==(l=gt(o))&&e.setAttribute("class",l)}return this},removeClass:function(n){var t,e,o,r,i,a,l,s=0;if(x(n))return this.each(function(t){T(this).removeClass(n.call(this,t,bt(this)))});if(!arguments.length)return this.attr("class","");if((t=ht(n)).length)for(;e=this[s++];)if(r=bt(e),o=1===e.nodeType&&" "+gt(r)+" "){for(a=0;i=t[a++];)for(;o.indexOf(" "+i+" ")>-1;)o=o.replace(" "+i+" "," ");r!==(l=gt(o))&&e.setAttribute("class",l)}return this},toggleClass:function(n,t){var e=typeof n,o="string"===e||Array.isArray(n);return"boolean"==typeof t&&o?t?this.addClass(n):this.removeClass(n):x(n)?this.each(function(e){T(this).toggleClass(n.call(this,e,bt(this),t),t)}):this.each(function(){var t,r,i,a;if(o)for(r=0,i=T(this),a=ht(n);t=a[r++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else void 0!==n&&"boolean"!==e||((t=bt(this))&&Q.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===n?"":Q.get(this,"__className__")||""))})},hasClass:function(n){var t,e,o=0;for(t=" "+n+" ";e=this[o++];)if(1===e.nodeType&&(" "+gt(bt(e))+" ").indexOf(t)>-1)return!0;return!1}});var xt=/\r/g;T.fn.extend({val:function(n){var t,e,o,r=this[0];return arguments.length?(o=x(n),this.each(function(e){var r;1===this.nodeType&&(null==(r=o?n.call(this,e,T(this).val()):n)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=T.map(r,function(n){return null==n?"":n+""})),(t=T.valHooks[this.type]||T.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))})):r?(t=T.valHooks[r.type]||T.valHooks[r.nodeName.toLowerCase()])&&"get"in t&&void 0!==(e=t.get(r,"value"))?e:"string"==typeof(e=r.value)?e.replace(xt,""):null==e?"":e:void 0}}),T.extend({valHooks:{option:{get:function(n){var t=T.find.attr(n,"value");return null!=t?t:gt(T.text(n))}},select:{get:function(n){var t,e,o,r=n.options,i=n.selectedIndex,a="select-one"===n.type,l=a?null:[],s=a?i+1:r.length;for(o=i<0?s:a?i:0;o<s;o++)if(((e=r[o]).selected||o===i)&&!e.disabled&&(!e.parentNode.disabled||!L(e.parentNode,"optgroup"))){if(t=T(e).val(),a)return t;l.push(t)}return l},set:function(n,t){for(var e,o,r=n.options,i=T.makeArray(t),a=r.length;a--;)((o=r[a]).selected=T.inArray(T.valHooks.option.get(o),i)>-1)&&(e=!0);return e||(n.selectedIndex=-1),i}}}}),T.each(["radio","checkbox"],function(){T.valHooks[this]={set:function(n,t){if(Array.isArray(t))return n.checked=T.inArray(T(n).val(),t)>-1}},h.checkOn||(T.valHooks[this].get=function(n){return null===n.getAttribute("value")?"on":n.value})}),h.focusin="onfocusin"in e;var vt=/^(?:focusinfocus|focusoutblur)$/,yt=function(n){n.stopPropagation()};T.extend(T.event,{trigger:function(n,t,o,r){var i,l,s,d,c,p,u,m,g=[o||a],b=f.call(n,"type")?n.type:n,h=f.call(n,"namespace")?n.namespace.split("."):[];if(l=m=s=o=o||a,3!==o.nodeType&&8!==o.nodeType&&!vt.test(b+T.event.triggered)&&(b.indexOf(".")>-1&&(b=(h=b.split(".")).shift(),h.sort()),c=b.indexOf(":")<0&&"on"+b,(n=n[T.expando]?n:new T.Event(b,"object"==typeof n&&n)).isTrigger=r?2:3,n.namespace=h.join("."),n.rnamespace=n.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=void 0,n.target||(n.target=o),t=null==t?[n]:T.makeArray(t,[n]),u=T.event.special[b]||{},r||!u.trigger||!1!==u.trigger.apply(o,t))){if(!r&&!u.noBubble&&!v(o)){for(d=u.delegateType||b,vt.test(d+b)||(l=l.parentNode);l;l=l.parentNode)g.push(l),s=l;s===(o.ownerDocument||a)&&g.push(s.defaultView||s.parentWindow||e)}for(i=0;(l=g[i++])&&!n.isPropagationStopped();)m=l,n.type=i>1?d:u.bindType||b,(p=(Q.get(l,"events")||{})[n.type]&&Q.get(l,"handle"))&&p.apply(l,t),(p=c&&l[c])&&p.apply&&J(l)&&(n.result=p.apply(l,t),!1===n.result&&n.preventDefault());return n.type=b,r||n.isDefaultPrevented()||u._default&&!1!==u._default.apply(g.pop(),t)||!J(o)||c&&x(o[b])&&!v(o)&&((s=o[c])&&(o[c]=null),T.event.triggered=b,n.isPropagationStopped()&&m.addEventListener(b,yt),o[b](),n.isPropagationStopped()&&m.removeEventListener(b,yt),T.event.triggered=void 0,s&&(o[c]=s)),n.result}},simulate:function(n,t,e){var o=T.extend(new T.Event,e,{type:n,isSimulated:!0});T.event.trigger(o,null,t)}}),T.fn.extend({trigger:function(n,t){return this.each(function(){T.event.trigger(n,t,this)})},triggerHandler:function(n,t){var e=this[0];if(e)return T.event.trigger(n,t,e,!0)}}),h.focusin||T.each({focus:"focusin",blur:"focusout"},function(n,t){var e=function(n){T.event.simulate(t,n.target,T.event.fix(n))};T.event.special[t]={setup:function(){var o=this.ownerDocument||this,r=Q.access(o,t);r||o.addEventListener(n,e,!0),Q.access(o,t,(r||0)+1)},teardown:function(){var o=this.ownerDocument||this,r=Q.access(o,t)-1;r?Q.access(o,t,r):(o.removeEventListener(n,e,!0),Q.remove(o,t))}}});var wt=e.location,kt=Date.now(),Tt=/\?/;T.parseXML=function(n){var t;if(!n||"string"!=typeof n)return null;try{t=(new e.DOMParser).parseFromString(n,"text/xml")}catch(n){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||T.error("Invalid XML: "+n),t};var Ct=/\[\]$/,jt=/\r?\n/g,Et=/^(?:submit|button|image|reset|file)$/i,St=/^(?:input|select|textarea|keygen)/i;function At(n,t,e,o){var r;if(Array.isArray(t))T.each(t,function(t,r){e||Ct.test(n)?o(n,r):At(n+"["+("object"==typeof r&&null!=r?t:"")+"]",r,e,o)});else if(e||"object"!==k(t))o(n,t);else for(r in t)At(n+"["+r+"]",t[r],e,o)}T.param=function(n,t){var e,o=[],r=function(n,t){var e=x(t)?t():t;o[o.length]=encodeURIComponent(n)+"="+encodeURIComponent(null==e?"":e)};if(Array.isArray(n)||n.jquery&&!T.isPlainObject(n))T.each(n,function(){r(this.name,this.value)});else for(e in n)At(e,n[e],t,r);return o.join("&")},T.fn.extend({serialize:function(){return T.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var n=T.prop(this,"elements");return n?T.makeArray(n):this}).filter(function(){var n=this.type;return this.name&&!T(this).is(":disabled")&&St.test(this.nodeName)&&!Et.test(n)&&(this.checked||!mn.test(n))}).map(function(n,t){var e=T(this).val();return null==e?null:Array.isArray(e)?T.map(e,function(n){return{name:t.name,value:n.replace(jt,"\r\n")}}):{name:t.name,value:e.replace(jt,"\r\n")}}).get()}});var Nt=/%20/g,Lt=/#.*$/,_t=/([?&])_=[^&]*/,zt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Dt=/^(?:GET|HEAD)$/,Ot=/^\/\//,Mt={},qt={},Rt="*/".concat("*"),Ht=a.createElement("a");function Pt(n){return function(t,e){"string"!=typeof t&&(e=t,t="*");var o,r=0,i=t.toLowerCase().match(H)||[];if(x(e))for(;o=i[r++];)"+"===o[0]?(o=o.slice(1)||"*",(n[o]=n[o]||[]).unshift(e)):(n[o]=n[o]||[]).push(e)}}function It(n,t,e,o){var r={},i=n===qt;function a(l){var s;return r[l]=!0,T.each(n[l]||[],function(n,l){var d=l(t,e,o);return"string"!=typeof d||i||r[d]?i?!(s=d):void 0:(t.dataTypes.unshift(d),a(d),!1)}),s}return a(t.dataTypes[0])||!r["*"]&&a("*")}function Bt(n,t){var e,o,r=T.ajaxSettings.flatOptions||{};for(e in t)void 0!==t[e]&&((r[e]?n:o||(o={}))[e]=t[e]);return o&&T.extend(!0,n,o),n}Ht.href=wt.href,T.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:wt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(wt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Rt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":T.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(n,t){return t?Bt(Bt(n,T.ajaxSettings),t):Bt(T.ajaxSettings,n)},ajaxPrefilter:Pt(Mt),ajaxTransport:Pt(qt),ajax:function(n,t){"object"==typeof n&&(t=n,n=void 0),t=t||{};var o,r,i,l,s,d,c,p,u,m,f=T.ajaxSetup({},t),g=f.context||f,b=f.context&&(g.nodeType||g.jquery)?T(g):T.event,h=T.Deferred(),x=T.Callbacks("once memory"),v=f.statusCode||{},y={},w={},k="canceled",C={readyState:0,getResponseHeader:function(n){var t;if(c){if(!l)for(l={};t=zt.exec(i);)l[t[1].toLowerCase()]=t[2];t=l[n.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return c?i:null},setRequestHeader:function(n,t){return null==c&&(n=w[n.toLowerCase()]=w[n.toLowerCase()]||n,y[n]=t),this},overrideMimeType:function(n){return null==c&&(f.mimeType=n),this},statusCode:function(n){var t;if(n)if(c)C.always(n[C.status]);else for(t in n)v[t]=[v[t],n[t]];return this},abort:function(n){var t=n||k;return o&&o.abort(t),j(0,t),this}};if(h.promise(C),f.url=((n||f.url||wt.href)+"").replace(Ot,wt.protocol+"//"),f.type=t.method||t.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(H)||[""],null==f.crossDomain){d=a.createElement("a");try{d.href=f.url,d.href=d.href,f.crossDomain=Ht.protocol+"//"+Ht.host!=d.protocol+"//"+d.host}catch(n){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=T.param(f.data,f.traditional)),It(Mt,f,t,C),c)return C;for(u in(p=T.event&&f.global)&&0==T.active++&&T.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Dt.test(f.type),r=f.url.replace(Lt,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(Nt,"+")):(m=f.url.slice(r.length),f.data&&(f.processData||"string"==typeof f.data)&&(r+=(Tt.test(r)?"&":"?")+f.data,delete f.data),!1===f.cache&&(r=r.replace(_t,"$1"),m=(Tt.test(r)?"&":"?")+"_="+kt+++m),f.url=r+m),f.ifModified&&(T.lastModified[r]&&C.setRequestHeader("If-Modified-Since",T.lastModified[r]),T.etag[r]&&C.setRequestHeader("If-None-Match",T.etag[r])),(f.data&&f.hasContent&&!1!==f.contentType||t.contentType)&&C.setRequestHeader("Content-Type",f.contentType),C.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Rt+"; q=0.01":""):f.accepts["*"]),f.headers)C.setRequestHeader(u,f.headers[u]);if(f.beforeSend&&(!1===f.beforeSend.call(g,C,f)||c))return C.abort();if(k="abort",x.add(f.complete),C.done(f.success),C.fail(f.error),o=It(qt,f,t,C)){if(C.readyState=1,p&&b.trigger("ajaxSend",[C,f]),c)return C;f.async&&f.timeout>0&&(s=e.setTimeout(function(){C.abort("timeout")},f.timeout));try{c=!1,o.send(y,j)}catch(n){if(c)throw n;j(-1,n)}}else j(-1,"No Transport");function j(n,t,a,l){var d,u,m,y,w,k=t;c||(c=!0,s&&e.clearTimeout(s),o=void 0,i=l||"",C.readyState=n>0?4:0,d=n>=200&&n<300||304===n,a&&(y=function(n,t,e){for(var o,r,i,a,l=n.contents,s=n.dataTypes;"*"===s[0];)s.shift(),void 0===o&&(o=n.mimeType||t.getResponseHeader("Content-Type"));if(o)for(r in l)if(l[r]&&l[r].test(o)){s.unshift(r);break}if(s[0]in e)i=s[0];else{for(r in e){if(!s[0]||n.converters[r+" "+s[0]]){i=r;break}a||(a=r)}i=i||a}if(i)return i!==s[0]&&s.unshift(i),e[i]}(f,C,a)),y=function(n,t,e,o){var r,i,a,l,s,d={},c=n.dataTypes.slice();if(c[1])for(a in n.converters)d[a.toLowerCase()]=n.converters[a];for(i=c.shift();i;)if(n.responseFields[i]&&(e[n.responseFields[i]]=t),!s&&o&&n.dataFilter&&(t=n.dataFilter(t,n.dataType)),s=i,i=c.shift())if("*"===i)i=s;else if("*"!==s&&s!==i){if(!(a=d[s+" "+i]||d["* "+i]))for(r in d)if((l=r.split(" "))[1]===i&&(a=d[s+" "+l[0]]||d["* "+l[0]])){!0===a?a=d[r]:!0!==d[r]&&(i=l[0],c.unshift(l[1]));break}if(!0!==a)if(a&&n.throws)t=a(t);else try{t=a(t)}catch(n){return{state:"parsererror",error:a?n:"No conversion from "+s+" to "+i}}}return{state:"success",data:t}}(f,y,C,d),d?(f.ifModified&&((w=C.getResponseHeader("Last-Modified"))&&(T.lastModified[r]=w),(w=C.getResponseHeader("etag"))&&(T.etag[r]=w)),204===n||"HEAD"===f.type?k="nocontent":304===n?k="notmodified":(k=y.state,u=y.data,d=!(m=y.error))):(m=k,!n&&k||(k="error",n<0&&(n=0))),C.status=n,C.statusText=(t||k)+"",d?h.resolveWith(g,[u,k,C]):h.rejectWith(g,[C,k,m]),C.statusCode(v),v=void 0,p&&b.trigger(d?"ajaxSuccess":"ajaxError",[C,f,d?u:m]),x.fireWith(g,[C,k]),p&&(b.trigger("ajaxComplete",[C,f]),--T.active||T.event.trigger("ajaxStop")))}return C},getJSON:function(n,t,e){return T.get(n,t,e,"json")},getScript:function(n,t){return T.get(n,void 0,t,"script")}}),T.each(["get","post"],function(n,t){T[t]=function(n,e,o,r){return x(e)&&(r=r||o,o=e,e=void 0),T.ajax(T.extend({url:n,type:t,dataType:r,data:e,success:o},T.isPlainObject(n)&&n))}}),T._evalUrl=function(n){return T.ajax({url:n,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},T.fn.extend({wrapAll:function(n){var t;return this[0]&&(x(n)&&(n=n.call(this[0])),t=T(n,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var n=this;n.firstElementChild;)n=n.firstElementChild;return n}).append(this)),this},wrapInner:function(n){return x(n)?this.each(function(t){T(this).wrapInner(n.call(this,t))}):this.each(function(){var t=T(this),e=t.contents();e.length?e.wrapAll(n):t.append(n)})},wrap:function(n){var t=x(n);return this.each(function(e){T(this).wrapAll(t?n.call(this,e):n)})},unwrap:function(n){return this.parent(n).not("body").each(function(){T(this).replaceWith(this.childNodes)}),this}}),T.expr.pseudos.hidden=function(n){return!T.expr.pseudos.visible(n)},T.expr.pseudos.visible=function(n){return!!(n.offsetWidth||n.offsetHeight||n.getClientRects().length)},T.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(n){}};var $t={0:200,1223:204},Ut=T.ajaxSettings.xhr();h.cors=!!Ut&&"withCredentials"in Ut,h.ajax=Ut=!!Ut,T.ajaxTransport(function(n){var t,o;if(h.cors||Ut&&!n.crossDomain)return{send:function(r,i){var a,l=n.xhr();if(l.open(n.type,n.url,n.async,n.username,n.password),n.xhrFields)for(a in n.xhrFields)l[a]=n.xhrFields[a];for(a in n.mimeType&&l.overrideMimeType&&l.overrideMimeType(n.mimeType),n.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),r)l.setRequestHeader(a,r[a]);t=function(n){return function(){t&&(t=o=l.onload=l.onerror=l.onabort=l.ontimeout=l.onreadystatechange=null,"abort"===n?l.abort():"error"===n?"number"!=typeof l.status?i(0,"error"):i(l.status,l.statusText):i($t[l.status]||l.status,l.statusText,"text"!==(l.responseType||"text")||"string"!=typeof l.responseText?{binary:l.response}:{text:l.responseText},l.getAllResponseHeaders()))}},l.onload=t(),o=l.onerror=l.ontimeout=t("error"),void 0!==l.onabort?l.onabort=o:l.onreadystatechange=function(){4===l.readyState&&e.setTimeout(function(){t&&o()})},t=t("abort");try{l.send(n.hasContent&&n.data||null)}catch(n){if(t)throw n}},abort:function(){t&&t()}}}),T.ajaxPrefilter(function(n){n.crossDomain&&(n.contents.script=!1)}),T.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(n){return T.globalEval(n),n}}}),T.ajaxPrefilter("script",function(n){void 0===n.cache&&(n.cache=!1),n.crossDomain&&(n.type="GET")}),T.ajaxTransport("script",function(n){var t,e;if(n.crossDomain)return{send:function(o,r){t=T("<script>").prop({charset:n.scriptCharset,src:n.url}).on("load error",e=function(n){t.remove(),e=null,n&&r("error"===n.type?404:200,n.type)}),a.head.appendChild(t[0])},abort:function(){e&&e()}}});var Ft=[],Wt=/(=)\?(?=&|$)|\?\?/;T.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var n=Ft.pop()||T.expando+"_"+kt++;return this[n]=!0,n}}),T.ajaxPrefilter("json jsonp",function(n,t,o){var r,i,a,l=!1!==n.jsonp&&(Wt.test(n.url)?"url":"string"==typeof n.data&&0===(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Wt.test(n.data)&&"data");if(l||"jsonp"===n.dataTypes[0])return r=n.jsonpCallback=x(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,l?n[l]=n[l].replace(Wt,"$1"+r):!1!==n.jsonp&&(n.url+=(Tt.test(n.url)?"&":"?")+n.jsonp+"="+r),n.converters["script json"]=function(){return a||T.error(r+" was not called"),a[0]},n.dataTypes[0]="json",i=e[r],e[r]=function(){a=arguments},o.always(function(){void 0===i?T(e).removeProp(r):e[r]=i,n[r]&&(n.jsonpCallback=t.jsonpCallback,Ft.push(r)),a&&x(i)&&i(a[0]),a=i=void 0}),"script"}),h.createHTMLDocument=function(){var n=a.implementation.createHTMLDocument("").body;return n.innerHTML="<form></form><form></form>",2===n.childNodes.length}(),T.parseHTML=function(n,t,e){return"string"!=typeof n?[]:("boolean"==typeof t&&(e=t,t=!1),t||(h.createHTMLDocument?((o=(t=a.implementation.createHTMLDocument("")).createElement("base")).href=a.location.href,t.head.appendChild(o)):t=a),r=_.exec(n),i=!e&&[],r?[t.createElement(r[1])]:(r=yn([n],t,i),i&&i.length&&T(i).remove(),T.merge([],r.childNodes)));var o,r,i},T.fn.load=function(n,t,e){var o,r,i,a=this,l=n.indexOf(" ");return l>-1&&(o=gt(n.slice(l)),n=n.slice(0,l)),x(t)?(e=t,t=void 0):t&&"object"==typeof t&&(r="POST"),a.length>0&&T.ajax({url:n,type:r||"GET",dataType:"html",data:t}).done(function(n){i=arguments,a.html(o?T("<div>").append(T.parseHTML(n)).find(o):n)}).always(e&&function(n,t){a.each(function(){e.apply(this,i||[n.responseText,t,n])})}),this},T.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(n,t){T.fn[t]=function(n){return this.on(t,n)}}),T.expr.pseudos.animated=function(n){return T.grep(T.timers,function(t){return n===t.elem}).length},T.offset={setOffset:function(n,t,e){var o,r,i,a,l,s,d=T.css(n,"position"),c=T(n),p={};"static"===d&&(n.style.position="relative"),l=c.offset(),i=T.css(n,"top"),s=T.css(n,"left"),("absolute"===d||"fixed"===d)&&(i+s).indexOf("auto")>-1?(a=(o=c.position()).top,r=o.left):(a=parseFloat(i)||0,r=parseFloat(s)||0),x(t)&&(t=t.call(n,e,T.extend({},l))),null!=t.top&&(p.top=t.top-l.top+a),null!=t.left&&(p.left=t.left-l.left+r),"using"in t?t.using.call(n,p):c.css(p)}},T.fn.extend({offset:function(n){if(arguments.length)return void 0===n?this:this.each(function(t){T.offset.setOffset(this,n,t)});var t,e,o=this[0];return o?o.getClientRects().length?(t=o.getBoundingClientRect(),e=o.ownerDocument.defaultView,{top:t.top+e.pageYOffset,left:t.left+e.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var n,t,e,o=this[0],r={top:0,left:0};if("fixed"===T.css(o,"position"))t=o.getBoundingClientRect();else{for(t=this.offset(),e=o.ownerDocument,n=o.offsetParent||e.documentElement;n&&(n===e.body||n===e.documentElement)&&"static"===T.css(n,"position");)n=n.parentNode;n&&n!==o&&1===n.nodeType&&((r=T(n).offset()).top+=T.css(n,"borderTopWidth",!0),r.left+=T.css(n,"borderLeftWidth",!0))}return{top:t.top-r.top-T.css(o,"marginTop",!0),left:t.left-r.left-T.css(o,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var n=this.offsetParent;n&&"static"===T.css(n,"position");)n=n.offsetParent;return n||wn})}}),T.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(n,t){var e="pageYOffset"===t;T.fn[n]=function(o){return W(this,function(n,o,r){var i;if(v(n)?i=n:9===n.nodeType&&(i=n.defaultView),void 0===r)return i?i[t]:n[o];i?i.scrollTo(e?i.pageXOffset:r,e?r:i.pageYOffset):n[o]=r},n,o,arguments.length)}}),T.each(["top","left"],function(n,t){T.cssHooks[t]=Fn(h.pixelPosition,function(n,e){if(e)return e=Un(n,t),In.test(e)?T(n).position()[t]+"px":e})}),T.each({Height:"height",Width:"width"},function(n,t){T.each({padding:"inner"+n,content:t,"":"outer"+n},function(e,o){T.fn[o]=function(r,i){var a=arguments.length&&(e||"boolean"!=typeof r),l=e||(!0===r||!0===i?"margin":"border");return W(this,function(t,e,r){var i;return v(t)?0===o.indexOf("outer")?t["inner"+n]:t.document.documentElement["client"+n]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+n],i["scroll"+n],t.body["offset"+n],i["offset"+n],i["client"+n])):void 0===r?T.css(t,e,l):T.style(t,e,r,l)},t,a?r:void 0,a)}})}),T.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(n,t){T.fn[t]=function(n,e){return arguments.length>0?this.on(t,null,n,e):this.trigger(t)}}),T.fn.extend({hover:function(n,t){return this.mouseenter(n).mouseleave(t||n)}}),T.fn.extend({bind:function(n,t,e){return this.on(n,null,t,e)},unbind:function(n,t){return this.off(n,null,t)},delegate:function(n,t,e,o){return this.on(t,n,e,o)},undelegate:function(n,t,e){return 1===arguments.length?this.off(n,"**"):this.off(t,n||"**",e)}}),T.proxy=function(n,t){var e,o,r;if("string"==typeof t&&(e=n[t],t=n,n=e),x(n))return o=s.call(arguments,2),(r=function(){return n.apply(t||this,o.concat(s.call(arguments)))}).guid=n.guid=n.guid||T.guid++,r},T.holdReady=function(n){n?T.readyWait++:T.ready(!0)},T.isArray=Array.isArray,T.parseJSON=JSON.parse,T.nodeName=L,T.isFunction=x,T.isWindow=v,T.camelCase=Y,T.type=k,T.now=Date.now,T.isNumeric=function(n){var t=T.type(n);return("number"===t||"string"===t)&&!isNaN(n-parseFloat(n))},void 0===(o=function(){return T}.apply(t,[]))||(n.exports=o);var Vt=e.jQuery,Xt=e.$;return T.noConflict=function(n){return e.$===T&&(e.$=Xt),n&&e.jQuery===T&&(e.jQuery=Vt),T},r||(e.jQuery=e.$=T),T})},function(n,t,e){!function(n,t){"use strict";var e="isMounted opts".split(" ");function o(n){t.util.styleManager.inject();for(var r=document.querySelectorAll(n+", [data-is="+n+"]"),i=[],a=0;a<r.length;a++){var l,s=r[a],d=s._tag;o.trigger("before-unmount",d),d.unmount(!0),s.innerHTML=d.__.innerHTML,(d.__.instAttrs||[]).map(function(n){s.setAttribute(n.name,n.value)});var c={};for(u in d.opts)c[u]=d.opts[u];c.parent=d.parent,o.trigger("before-mount",c,d);var p=t.mount(s,c)[0];for(var u in d)l=d[u],~e.indexOf(u)||(p[u]=l);p.update(),i.push(p),o.trigger("after-mount",p,d)}return i}t.observable(o),t.reload=o,t.default&&(t.default.reload=o),n.reload=o,n.default=o,Object.defineProperty(n,"__esModule",{value:!0})}(t,e(0))},function(n,t,e){e(0).tag2("app",'<navbar></navbar> <section id="home"> <home></home> </section> <section id="about"> <about></about> </section>',"app section { display: flex; width: 100%; height: 94%; }","",function(n){})},function(n,t,e){var o=e(5);"string"==typeof o&&(o=[[n.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};e(7)(o,r);o.locals&&(n.exports=o.locals)},function(n,t,e){(n.exports=e(6)(!1)).push([n.i,'/* @import url(\'https://fonts.googleapis.com/css?family=Philosopher\'); */\n* {\n  font-family: "Inconsolata", serif; }\n\n:root {\n  --primary: #344164;\n  --secondary: #27314c;\n  --success: #1b73ba;\n  --info: #41435a;\n  --warning: #20263c;\n  --danger: #2cd4bd;\n  --light: #f8f9fa;\n  --dark: #d2d0d5; }\n\nhtml, body {\n  height: 100%; }\n\nbody {\n  overflow: hidden; }\n\n/* $spacer: 1rem;\n   $enable-rounded: false;\n   $enable-shadows: true;\n   $enable-gradients: true;\n   $enable-transitions: false;\n   $enable-hover-media-query: false;\n   $enable-grid-classes: true;\n   $enable-caret: false;\n   $enable-print-styles: true; */\n/*!\n * Bootstrap v4.1.2 (https://getbootstrap.com/)\n * Copyright 2011-2018 The Bootstrap Authors\n * Copyright 2011-2018 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n:root {\n  --blue: #007bff;\n  --indigo: #6610f2;\n  --purple: #6f42c1;\n  --pink: #e83e8c;\n  --red: #dc3545;\n  --orange: #fd7e14;\n  --yellow: #ffc107;\n  --green: #28a745;\n  --teal: #20c997;\n  --cyan: #17a2b8;\n  --white: #fff;\n  --gray: #6c757d;\n  --gray-dark: #343a40;\n  --primary: #007bff;\n  --secondary: #6c757d;\n  --success: #28a745;\n  --info: #17a2b8;\n  --warning: #ffc107;\n  --danger: #dc3545;\n  --light: #f8f9fa;\n  --dark: #343a40;\n  --breakpoint-xs: 0;\n  --breakpoint-sm: 576px;\n  --breakpoint-md: 768px;\n  --breakpoint-lg: 992px;\n  --breakpoint-xl: 1200px;\n  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box; }\n\nhtml {\n  font-family: sans-serif;\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n  -ms-overflow-style: scrollbar;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }\n\n@-ms-viewport {\n  width: device-width; }\n\narticle, aside, figcaption, figure, footer, header, hgroup, main, nav, section {\n  display: block; }\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  text-align: left;\n  background-color: #fff; }\n\n[tabindex="-1"]:focus {\n  outline: 0 !important; }\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible; }\n\nh1, h2, h3, h4, h5, h6 {\n  margin-top: 0;\n  margin-bottom: 0.5rem; }\n\np {\n  margin-top: 0;\n  margin-bottom: 1rem; }\n\nabbr[title],\nabbr[data-original-title] {\n  text-decoration: underline;\n  text-decoration: underline dotted;\n  cursor: help;\n  border-bottom: 0; }\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit; }\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem; }\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0; }\n\ndt {\n  font-weight: 700; }\n\ndd {\n  margin-bottom: .5rem;\n  margin-left: 0; }\n\nblockquote {\n  margin: 0 0 1rem; }\n\ndfn {\n  font-style: italic; }\n\nb,\nstrong {\n  font-weight: bolder; }\n\nsmall {\n  font-size: 80%; }\n\nsub,\nsup {\n  position: relative;\n  font-size: 75%;\n  line-height: 0;\n  vertical-align: baseline; }\n\nsub {\n  bottom: -.25em; }\n\nsup {\n  top: -.5em; }\n\na {\n  color: #007bff;\n  text-decoration: none;\n  background-color: transparent;\n  -webkit-text-decoration-skip: objects; }\n  a:hover {\n    color: #0056b3;\n    text-decoration: underline; }\n\na:not([href]):not([tabindex]) {\n  color: inherit;\n  text-decoration: none; }\n  a:not([href]):not([tabindex]):hover, a:not([href]):not([tabindex]):focus {\n    color: inherit;\n    text-decoration: none; }\n  a:not([href]):not([tabindex]):focus {\n    outline: 0; }\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;\n  font-size: 1em; }\n\npre {\n  margin-top: 0;\n  margin-bottom: 1rem;\n  overflow: auto;\n  -ms-overflow-style: scrollbar; }\n\nfigure {\n  margin: 0 0 1rem; }\n\nimg {\n  vertical-align: middle;\n  border-style: none; }\n\nsvg:not(:root) {\n  overflow: hidden;\n  vertical-align: middle; }\n\ntable {\n  border-collapse: collapse; }\n\ncaption {\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  color: #6c757d;\n  text-align: left;\n  caption-side: bottom; }\n\nth {\n  text-align: inherit; }\n\nlabel {\n  display: inline-block;\n  margin-bottom: 0.5rem; }\n\nbutton {\n  border-radius: 0; }\n\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color; }\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit; }\n\nbutton,\ninput {\n  overflow: visible; }\n\nbutton,\nselect {\n  text-transform: none; }\n\nbutton,\nhtml [type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button; }\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  padding: 0;\n  border-style: none; }\n\ninput[type="radio"],\ninput[type="checkbox"] {\n  box-sizing: border-box;\n  padding: 0; }\n\ninput[type="date"],\ninput[type="time"],\ninput[type="datetime-local"],\ninput[type="month"] {\n  -webkit-appearance: listbox; }\n\ntextarea {\n  overflow: auto;\n  resize: vertical; }\n\nfieldset {\n  min-width: 0;\n  padding: 0;\n  margin: 0;\n  border: 0; }\n\nlegend {\n  display: block;\n  width: 100%;\n  max-width: 100%;\n  padding: 0;\n  margin-bottom: .5rem;\n  font-size: 1.5rem;\n  line-height: inherit;\n  color: inherit;\n  white-space: normal; }\n\nprogress {\n  vertical-align: baseline; }\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto; }\n\n[type="search"] {\n  outline-offset: -2px;\n  -webkit-appearance: none; }\n\n[type="search"]::-webkit-search-cancel-button,\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none; }\n\n::-webkit-file-upload-button {\n  font: inherit;\n  -webkit-appearance: button; }\n\noutput {\n  display: inline-block; }\n\nsummary {\n  display: list-item;\n  cursor: pointer; }\n\ntemplate {\n  display: none; }\n\n[hidden] {\n  display: none !important; }\n\nh1, h2, h3, h4, h5, h6,\n.h1, .h2, .h3, .h4, .h5, .h6 {\n  margin-bottom: 0.5rem;\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.2;\n  color: inherit; }\n\nh1, .h1 {\n  font-size: 2.5rem; }\n\nh2, .h2 {\n  font-size: 2rem; }\n\nh3, .h3 {\n  font-size: 1.75rem; }\n\nh4, .h4 {\n  font-size: 1.5rem; }\n\nh5, .h5 {\n  font-size: 1.25rem; }\n\nh6, .h6 {\n  font-size: 1rem; }\n\n.lead {\n  font-size: 1.25rem;\n  font-weight: 300; }\n\n.display-1 {\n  font-size: 6rem;\n  font-weight: 300;\n  line-height: 1.2; }\n\n.display-2 {\n  font-size: 5.5rem;\n  font-weight: 300;\n  line-height: 1.2; }\n\n.display-3 {\n  font-size: 4.5rem;\n  font-weight: 300;\n  line-height: 1.2; }\n\n.display-4 {\n  font-size: 3.5rem;\n  font-weight: 300;\n  line-height: 1.2; }\n\nhr {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  border: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1); }\n\nsmall,\n.small {\n  font-size: 80%;\n  font-weight: 400; }\n\nmark,\n.mark {\n  padding: 0.2em;\n  background-color: #fcf8e3; }\n\n.list-unstyled {\n  padding-left: 0;\n  list-style: none; }\n\n.list-inline {\n  padding-left: 0;\n  list-style: none; }\n\n.list-inline-item {\n  display: inline-block; }\n  .list-inline-item:not(:last-child) {\n    margin-right: 0.5rem; }\n\n.initialism {\n  font-size: 90%;\n  text-transform: uppercase; }\n\n.blockquote {\n  margin-bottom: 1rem;\n  font-size: 1.25rem; }\n\n.blockquote-footer {\n  display: block;\n  font-size: 80%;\n  color: #6c757d; }\n  .blockquote-footer::before {\n    content: "\\2014   \\A0"; }\n\n.img-fluid {\n  max-width: 100%;\n  height: auto; }\n\n.img-thumbnail {\n  padding: 0.25rem;\n  background-color: #fff;\n  border: 1px solid #dee2e6;\n  border-radius: 0.25rem;\n  max-width: 100%;\n  height: auto; }\n\n.figure {\n  display: inline-block; }\n\n.figure-img {\n  margin-bottom: 0.5rem;\n  line-height: 1; }\n\n.figure-caption {\n  font-size: 90%;\n  color: #6c757d; }\n\ncode {\n  font-size: 87.5%;\n  color: #e83e8c;\n  word-break: break-word; }\n  a > code {\n    color: inherit; }\n\nkbd {\n  padding: 0.2rem 0.4rem;\n  font-size: 87.5%;\n  color: #fff;\n  background-color: #212529;\n  border-radius: 0.2rem; }\n  kbd kbd {\n    padding: 0;\n    font-size: 100%;\n    font-weight: 700; }\n\npre {\n  display: block;\n  font-size: 87.5%;\n  color: #212529; }\n  pre code {\n    font-size: inherit;\n    color: inherit;\n    word-break: normal; }\n\n.pre-scrollable {\n  max-height: 340px;\n  overflow-y: scroll; }\n\n.container {\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto; }\n  @media (min-width: 576px) {\n    .container {\n      max-width: 540px; } }\n  @media (min-width: 768px) {\n    .container {\n      max-width: 720px; } }\n  @media (min-width: 992px) {\n    .container {\n      max-width: 960px; } }\n  @media (min-width: 1200px) {\n    .container {\n      max-width: 1140px; } }\n\n.container-fluid {\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto; }\n\n.row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px; }\n\n.no-gutters {\n  margin-right: 0;\n  margin-left: 0; }\n  .no-gutters > .col,\n  .no-gutters > [class*="col-"] {\n    padding-right: 0;\n    padding-left: 0; }\n\n.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,\n.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,\n.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,\n.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,\n.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,\n.col-xl-auto {\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px; }\n\n.col {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%; }\n\n.col-auto {\n  flex: 0 0 auto;\n  width: auto;\n  max-width: none; }\n\n.col-1 {\n  flex: 0 0 8.33333%;\n  max-width: 8.33333%; }\n\n.col-2 {\n  flex: 0 0 16.66667%;\n  max-width: 16.66667%; }\n\n.col-3 {\n  flex: 0 0 25%;\n  max-width: 25%; }\n\n.col-4 {\n  flex: 0 0 33.33333%;\n  max-width: 33.33333%; }\n\n.col-5 {\n  flex: 0 0 41.66667%;\n  max-width: 41.66667%; }\n\n.col-6 {\n  flex: 0 0 50%;\n  max-width: 50%; }\n\n.col-7 {\n  flex: 0 0 58.33333%;\n  max-width: 58.33333%; }\n\n.col-8 {\n  flex: 0 0 66.66667%;\n  max-width: 66.66667%; }\n\n.col-9 {\n  flex: 0 0 75%;\n  max-width: 75%; }\n\n.col-10 {\n  flex: 0 0 83.33333%;\n  max-width: 83.33333%; }\n\n.col-11 {\n  flex: 0 0 91.66667%;\n  max-width: 91.66667%; }\n\n.col-12 {\n  flex: 0 0 100%;\n  max-width: 100%; }\n\n.order-first {\n  order: -1; }\n\n.order-last {\n  order: 13; }\n\n.order-0 {\n  order: 0; }\n\n.order-1 {\n  order: 1; }\n\n.order-2 {\n  order: 2; }\n\n.order-3 {\n  order: 3; }\n\n.order-4 {\n  order: 4; }\n\n.order-5 {\n  order: 5; }\n\n.order-6 {\n  order: 6; }\n\n.order-7 {\n  order: 7; }\n\n.order-8 {\n  order: 8; }\n\n.order-9 {\n  order: 9; }\n\n.order-10 {\n  order: 10; }\n\n.order-11 {\n  order: 11; }\n\n.order-12 {\n  order: 12; }\n\n.offset-1 {\n  margin-left: 8.33333%; }\n\n.offset-2 {\n  margin-left: 16.66667%; }\n\n.offset-3 {\n  margin-left: 25%; }\n\n.offset-4 {\n  margin-left: 33.33333%; }\n\n.offset-5 {\n  margin-left: 41.66667%; }\n\n.offset-6 {\n  margin-left: 50%; }\n\n.offset-7 {\n  margin-left: 58.33333%; }\n\n.offset-8 {\n  margin-left: 66.66667%; }\n\n.offset-9 {\n  margin-left: 75%; }\n\n.offset-10 {\n  margin-left: 83.33333%; }\n\n.offset-11 {\n  margin-left: 91.66667%; }\n\n@media (min-width: 576px) {\n  .col-sm {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-sm-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-sm-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-sm-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-sm-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-sm-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-sm-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-sm-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-sm-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-sm-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-sm-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-sm-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-sm-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-sm-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-sm-first {\n    order: -1; }\n  .order-sm-last {\n    order: 13; }\n  .order-sm-0 {\n    order: 0; }\n  .order-sm-1 {\n    order: 1; }\n  .order-sm-2 {\n    order: 2; }\n  .order-sm-3 {\n    order: 3; }\n  .order-sm-4 {\n    order: 4; }\n  .order-sm-5 {\n    order: 5; }\n  .order-sm-6 {\n    order: 6; }\n  .order-sm-7 {\n    order: 7; }\n  .order-sm-8 {\n    order: 8; }\n  .order-sm-9 {\n    order: 9; }\n  .order-sm-10 {\n    order: 10; }\n  .order-sm-11 {\n    order: 11; }\n  .order-sm-12 {\n    order: 12; }\n  .offset-sm-0 {\n    margin-left: 0; }\n  .offset-sm-1 {\n    margin-left: 8.33333%; }\n  .offset-sm-2 {\n    margin-left: 16.66667%; }\n  .offset-sm-3 {\n    margin-left: 25%; }\n  .offset-sm-4 {\n    margin-left: 33.33333%; }\n  .offset-sm-5 {\n    margin-left: 41.66667%; }\n  .offset-sm-6 {\n    margin-left: 50%; }\n  .offset-sm-7 {\n    margin-left: 58.33333%; }\n  .offset-sm-8 {\n    margin-left: 66.66667%; }\n  .offset-sm-9 {\n    margin-left: 75%; }\n  .offset-sm-10 {\n    margin-left: 83.33333%; }\n  .offset-sm-11 {\n    margin-left: 91.66667%; } }\n\n@media (min-width: 768px) {\n  .col-md {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-md-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-md-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-md-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-md-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-md-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-md-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-md-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-md-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-md-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-md-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-md-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-md-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-md-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-md-first {\n    order: -1; }\n  .order-md-last {\n    order: 13; }\n  .order-md-0 {\n    order: 0; }\n  .order-md-1 {\n    order: 1; }\n  .order-md-2 {\n    order: 2; }\n  .order-md-3 {\n    order: 3; }\n  .order-md-4 {\n    order: 4; }\n  .order-md-5 {\n    order: 5; }\n  .order-md-6 {\n    order: 6; }\n  .order-md-7 {\n    order: 7; }\n  .order-md-8 {\n    order: 8; }\n  .order-md-9 {\n    order: 9; }\n  .order-md-10 {\n    order: 10; }\n  .order-md-11 {\n    order: 11; }\n  .order-md-12 {\n    order: 12; }\n  .offset-md-0 {\n    margin-left: 0; }\n  .offset-md-1 {\n    margin-left: 8.33333%; }\n  .offset-md-2 {\n    margin-left: 16.66667%; }\n  .offset-md-3 {\n    margin-left: 25%; }\n  .offset-md-4 {\n    margin-left: 33.33333%; }\n  .offset-md-5 {\n    margin-left: 41.66667%; }\n  .offset-md-6 {\n    margin-left: 50%; }\n  .offset-md-7 {\n    margin-left: 58.33333%; }\n  .offset-md-8 {\n    margin-left: 66.66667%; }\n  .offset-md-9 {\n    margin-left: 75%; }\n  .offset-md-10 {\n    margin-left: 83.33333%; }\n  .offset-md-11 {\n    margin-left: 91.66667%; } }\n\n@media (min-width: 992px) {\n  .col-lg {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-lg-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-lg-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-lg-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-lg-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-lg-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-lg-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-lg-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-lg-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-lg-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-lg-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-lg-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-lg-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-lg-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-lg-first {\n    order: -1; }\n  .order-lg-last {\n    order: 13; }\n  .order-lg-0 {\n    order: 0; }\n  .order-lg-1 {\n    order: 1; }\n  .order-lg-2 {\n    order: 2; }\n  .order-lg-3 {\n    order: 3; }\n  .order-lg-4 {\n    order: 4; }\n  .order-lg-5 {\n    order: 5; }\n  .order-lg-6 {\n    order: 6; }\n  .order-lg-7 {\n    order: 7; }\n  .order-lg-8 {\n    order: 8; }\n  .order-lg-9 {\n    order: 9; }\n  .order-lg-10 {\n    order: 10; }\n  .order-lg-11 {\n    order: 11; }\n  .order-lg-12 {\n    order: 12; }\n  .offset-lg-0 {\n    margin-left: 0; }\n  .offset-lg-1 {\n    margin-left: 8.33333%; }\n  .offset-lg-2 {\n    margin-left: 16.66667%; }\n  .offset-lg-3 {\n    margin-left: 25%; }\n  .offset-lg-4 {\n    margin-left: 33.33333%; }\n  .offset-lg-5 {\n    margin-left: 41.66667%; }\n  .offset-lg-6 {\n    margin-left: 50%; }\n  .offset-lg-7 {\n    margin-left: 58.33333%; }\n  .offset-lg-8 {\n    margin-left: 66.66667%; }\n  .offset-lg-9 {\n    margin-left: 75%; }\n  .offset-lg-10 {\n    margin-left: 83.33333%; }\n  .offset-lg-11 {\n    margin-left: 91.66667%; } }\n\n@media (min-width: 1200px) {\n  .col-xl {\n    flex-basis: 0;\n    flex-grow: 1;\n    max-width: 100%; }\n  .col-xl-auto {\n    flex: 0 0 auto;\n    width: auto;\n    max-width: none; }\n  .col-xl-1 {\n    flex: 0 0 8.33333%;\n    max-width: 8.33333%; }\n  .col-xl-2 {\n    flex: 0 0 16.66667%;\n    max-width: 16.66667%; }\n  .col-xl-3 {\n    flex: 0 0 25%;\n    max-width: 25%; }\n  .col-xl-4 {\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%; }\n  .col-xl-5 {\n    flex: 0 0 41.66667%;\n    max-width: 41.66667%; }\n  .col-xl-6 {\n    flex: 0 0 50%;\n    max-width: 50%; }\n  .col-xl-7 {\n    flex: 0 0 58.33333%;\n    max-width: 58.33333%; }\n  .col-xl-8 {\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%; }\n  .col-xl-9 {\n    flex: 0 0 75%;\n    max-width: 75%; }\n  .col-xl-10 {\n    flex: 0 0 83.33333%;\n    max-width: 83.33333%; }\n  .col-xl-11 {\n    flex: 0 0 91.66667%;\n    max-width: 91.66667%; }\n  .col-xl-12 {\n    flex: 0 0 100%;\n    max-width: 100%; }\n  .order-xl-first {\n    order: -1; }\n  .order-xl-last {\n    order: 13; }\n  .order-xl-0 {\n    order: 0; }\n  .order-xl-1 {\n    order: 1; }\n  .order-xl-2 {\n    order: 2; }\n  .order-xl-3 {\n    order: 3; }\n  .order-xl-4 {\n    order: 4; }\n  .order-xl-5 {\n    order: 5; }\n  .order-xl-6 {\n    order: 6; }\n  .order-xl-7 {\n    order: 7; }\n  .order-xl-8 {\n    order: 8; }\n  .order-xl-9 {\n    order: 9; }\n  .order-xl-10 {\n    order: 10; }\n  .order-xl-11 {\n    order: 11; }\n  .order-xl-12 {\n    order: 12; }\n  .offset-xl-0 {\n    margin-left: 0; }\n  .offset-xl-1 {\n    margin-left: 8.33333%; }\n  .offset-xl-2 {\n    margin-left: 16.66667%; }\n  .offset-xl-3 {\n    margin-left: 25%; }\n  .offset-xl-4 {\n    margin-left: 33.33333%; }\n  .offset-xl-5 {\n    margin-left: 41.66667%; }\n  .offset-xl-6 {\n    margin-left: 50%; }\n  .offset-xl-7 {\n    margin-left: 58.33333%; }\n  .offset-xl-8 {\n    margin-left: 66.66667%; }\n  .offset-xl-9 {\n    margin-left: 75%; }\n  .offset-xl-10 {\n    margin-left: 83.33333%; }\n  .offset-xl-11 {\n    margin-left: 91.66667%; } }\n\n.table {\n  width: 100%;\n  max-width: 100%;\n  margin-bottom: 1rem;\n  background-color: transparent; }\n  .table th,\n  .table td {\n    padding: 0.75rem;\n    vertical-align: top;\n    border-top: 1px solid #dee2e6; }\n  .table thead th {\n    vertical-align: bottom;\n    border-bottom: 2px solid #dee2e6; }\n  .table tbody + tbody {\n    border-top: 2px solid #dee2e6; }\n  .table .table {\n    background-color: #fff; }\n\n.table-sm th,\n.table-sm td {\n  padding: 0.3rem; }\n\n.table-bordered {\n  border: 1px solid #dee2e6; }\n  .table-bordered th,\n  .table-bordered td {\n    border: 1px solid #dee2e6; }\n  .table-bordered thead th,\n  .table-bordered thead td {\n    border-bottom-width: 2px; }\n\n.table-borderless th,\n.table-borderless td,\n.table-borderless thead th,\n.table-borderless tbody + tbody {\n  border: 0; }\n\n.table-striped tbody tr:nth-of-type(odd) {\n  background-color: rgba(0, 0, 0, 0.05); }\n\n.table-hover tbody tr:hover {\n  background-color: rgba(0, 0, 0, 0.075); }\n\n.table-primary,\n.table-primary > th,\n.table-primary > td {\n  background-color: #b8daff; }\n\n.table-hover .table-primary:hover {\n  background-color: #9fcdff; }\n  .table-hover .table-primary:hover > td,\n  .table-hover .table-primary:hover > th {\n    background-color: #9fcdff; }\n\n.table-secondary,\n.table-secondary > th,\n.table-secondary > td {\n  background-color: #d6d8db; }\n\n.table-hover .table-secondary:hover {\n  background-color: #c8cbcf; }\n  .table-hover .table-secondary:hover > td,\n  .table-hover .table-secondary:hover > th {\n    background-color: #c8cbcf; }\n\n.table-success,\n.table-success > th,\n.table-success > td {\n  background-color: #c3e6cb; }\n\n.table-hover .table-success:hover {\n  background-color: #b1dfbb; }\n  .table-hover .table-success:hover > td,\n  .table-hover .table-success:hover > th {\n    background-color: #b1dfbb; }\n\n.table-info,\n.table-info > th,\n.table-info > td {\n  background-color: #bee5eb; }\n\n.table-hover .table-info:hover {\n  background-color: #abdde5; }\n  .table-hover .table-info:hover > td,\n  .table-hover .table-info:hover > th {\n    background-color: #abdde5; }\n\n.table-warning,\n.table-warning > th,\n.table-warning > td {\n  background-color: #ffeeba; }\n\n.table-hover .table-warning:hover {\n  background-color: #ffe8a1; }\n  .table-hover .table-warning:hover > td,\n  .table-hover .table-warning:hover > th {\n    background-color: #ffe8a1; }\n\n.table-danger,\n.table-danger > th,\n.table-danger > td {\n  background-color: #f5c6cb; }\n\n.table-hover .table-danger:hover {\n  background-color: #f1b0b7; }\n  .table-hover .table-danger:hover > td,\n  .table-hover .table-danger:hover > th {\n    background-color: #f1b0b7; }\n\n.table-light,\n.table-light > th,\n.table-light > td {\n  background-color: #fdfdfe; }\n\n.table-hover .table-light:hover {\n  background-color: #ececf6; }\n  .table-hover .table-light:hover > td,\n  .table-hover .table-light:hover > th {\n    background-color: #ececf6; }\n\n.table-dark,\n.table-dark > th,\n.table-dark > td {\n  background-color: #c6c8ca; }\n\n.table-hover .table-dark:hover {\n  background-color: #b9bbbe; }\n  .table-hover .table-dark:hover > td,\n  .table-hover .table-dark:hover > th {\n    background-color: #b9bbbe; }\n\n.table-active,\n.table-active > th,\n.table-active > td {\n  background-color: rgba(0, 0, 0, 0.075); }\n\n.table-hover .table-active:hover {\n  background-color: rgba(0, 0, 0, 0.075); }\n  .table-hover .table-active:hover > td,\n  .table-hover .table-active:hover > th {\n    background-color: rgba(0, 0, 0, 0.075); }\n\n.table .thead-dark th {\n  color: #fff;\n  background-color: #212529;\n  border-color: #32383e; }\n\n.table .thead-light th {\n  color: #495057;\n  background-color: #e9ecef;\n  border-color: #dee2e6; }\n\n.table-dark {\n  color: #fff;\n  background-color: #212529; }\n  .table-dark th,\n  .table-dark td,\n  .table-dark thead th {\n    border-color: #32383e; }\n  .table-dark.table-bordered {\n    border: 0; }\n  .table-dark.table-striped tbody tr:nth-of-type(odd) {\n    background-color: rgba(255, 255, 255, 0.05); }\n  .table-dark.table-hover tbody tr:hover {\n    background-color: rgba(255, 255, 255, 0.075); }\n\n@media (max-width: 575.98px) {\n  .table-responsive-sm {\n    display: block;\n    width: 100%;\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    -ms-overflow-style: -ms-autohiding-scrollbar; }\n    .table-responsive-sm > .table-bordered {\n      border: 0; } }\n\n@media (max-width: 767.98px) {\n  .table-responsive-md {\n    display: block;\n    width: 100%;\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    -ms-overflow-style: -ms-autohiding-scrollbar; }\n    .table-responsive-md > .table-bordered {\n      border: 0; } }\n\n@media (max-width: 991.98px) {\n  .table-responsive-lg {\n    display: block;\n    width: 100%;\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    -ms-overflow-style: -ms-autohiding-scrollbar; }\n    .table-responsive-lg > .table-bordered {\n      border: 0; } }\n\n@media (max-width: 1199.98px) {\n  .table-responsive-xl {\n    display: block;\n    width: 100%;\n    overflow-x: auto;\n    -webkit-overflow-scrolling: touch;\n    -ms-overflow-style: -ms-autohiding-scrollbar; }\n    .table-responsive-xl > .table-bordered {\n      border: 0; } }\n\n.table-responsive {\n  display: block;\n  width: 100%;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n  -ms-overflow-style: -ms-autohiding-scrollbar; }\n  .table-responsive > .table-bordered {\n    border: 0; }\n\n.form-control {\n  display: block;\n  width: 100%;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  color: #495057;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .form-control {\n      transition: none; } }\n  .form-control::-ms-expand {\n    background-color: transparent;\n    border: 0; }\n  .form-control:focus {\n    color: #495057;\n    background-color: #fff;\n    border-color: #80bdff;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n  .form-control::placeholder {\n    color: #6c757d;\n    opacity: 1; }\n  .form-control:disabled, .form-control[readonly] {\n    background-color: #e9ecef;\n    opacity: 1; }\n\nselect.form-control:not([size]):not([multiple]) {\n  height: calc(2.25rem + 2px); }\n\nselect.form-control:focus::-ms-value {\n  color: #495057;\n  background-color: #fff; }\n\n.form-control-file,\n.form-control-range {\n  display: block;\n  width: 100%; }\n\n.col-form-label {\n  padding-top: calc(0.375rem + 1px);\n  padding-bottom: calc(0.375rem + 1px);\n  margin-bottom: 0;\n  font-size: inherit;\n  line-height: 1.5; }\n\n.col-form-label-lg {\n  padding-top: calc(0.5rem + 1px);\n  padding-bottom: calc(0.5rem + 1px);\n  font-size: 1.25rem;\n  line-height: 1.5; }\n\n.col-form-label-sm {\n  padding-top: calc(0.25rem + 1px);\n  padding-bottom: calc(0.25rem + 1px);\n  font-size: 0.875rem;\n  line-height: 1.5; }\n\n.form-control-plaintext {\n  display: block;\n  width: 100%;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  margin-bottom: 0;\n  line-height: 1.5;\n  color: #212529;\n  background-color: transparent;\n  border: solid transparent;\n  border-width: 1px 0; }\n  .form-control-plaintext.form-control-sm, .input-group-sm > .form-control-plaintext.form-control,\n  .input-group-sm > .input-group-prepend > .form-control-plaintext.input-group-text,\n  .input-group-sm > .input-group-append > .form-control-plaintext.input-group-text,\n  .input-group-sm > .input-group-prepend > .form-control-plaintext.btn,\n  .input-group-sm > .input-group-append > .form-control-plaintext.btn, .form-control-plaintext.form-control-lg, .input-group-lg > .form-control-plaintext.form-control,\n  .input-group-lg > .input-group-prepend > .form-control-plaintext.input-group-text,\n  .input-group-lg > .input-group-append > .form-control-plaintext.input-group-text,\n  .input-group-lg > .input-group-prepend > .form-control-plaintext.btn,\n  .input-group-lg > .input-group-append > .form-control-plaintext.btn {\n    padding-right: 0;\n    padding-left: 0; }\n\n.form-control-sm, .input-group-sm > .form-control,\n.input-group-sm > .input-group-prepend > .input-group-text,\n.input-group-sm > .input-group-append > .input-group-text,\n.input-group-sm > .input-group-prepend > .btn,\n.input-group-sm > .input-group-append > .btn {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  border-radius: 0.2rem; }\n\nselect.form-control-sm:not([size]):not([multiple]), .input-group-sm > select.form-control:not([size]):not([multiple]),\n.input-group-sm > .input-group-prepend > select.input-group-text:not([size]):not([multiple]),\n.input-group-sm > .input-group-append > select.input-group-text:not([size]):not([multiple]),\n.input-group-sm > .input-group-prepend > select.btn:not([size]):not([multiple]),\n.input-group-sm > .input-group-append > select.btn:not([size]):not([multiple]) {\n  height: calc(1.8125rem + 2px); }\n\n.form-control-lg, .input-group-lg > .form-control,\n.input-group-lg > .input-group-prepend > .input-group-text,\n.input-group-lg > .input-group-append > .input-group-text,\n.input-group-lg > .input-group-prepend > .btn,\n.input-group-lg > .input-group-append > .btn {\n  padding: 0.5rem 1rem;\n  font-size: 1.25rem;\n  line-height: 1.5;\n  border-radius: 0.3rem; }\n\nselect.form-control-lg:not([size]):not([multiple]), .input-group-lg > select.form-control:not([size]):not([multiple]),\n.input-group-lg > .input-group-prepend > select.input-group-text:not([size]):not([multiple]),\n.input-group-lg > .input-group-append > select.input-group-text:not([size]):not([multiple]),\n.input-group-lg > .input-group-prepend > select.btn:not([size]):not([multiple]),\n.input-group-lg > .input-group-append > select.btn:not([size]):not([multiple]) {\n  height: calc(2.875rem + 2px); }\n\n.form-group {\n  margin-bottom: 1rem; }\n\n.form-text {\n  display: block;\n  margin-top: 0.25rem; }\n\n.form-row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -5px;\n  margin-left: -5px; }\n  .form-row > .col,\n  .form-row > [class*="col-"] {\n    padding-right: 5px;\n    padding-left: 5px; }\n\n.form-check {\n  position: relative;\n  display: block;\n  padding-left: 1.25rem; }\n\n.form-check-input {\n  position: absolute;\n  margin-top: 0.3rem;\n  margin-left: -1.25rem; }\n  .form-check-input:disabled ~ .form-check-label {\n    color: #6c757d; }\n\n.form-check-label {\n  margin-bottom: 0; }\n\n.form-check-inline {\n  display: inline-flex;\n  align-items: center;\n  padding-left: 0;\n  margin-right: 0.75rem; }\n  .form-check-inline .form-check-input {\n    position: static;\n    margin-top: 0;\n    margin-right: 0.3125rem;\n    margin-left: 0; }\n\n.valid-feedback {\n  display: none;\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 80%;\n  color: #28a745; }\n\n.valid-tooltip {\n  position: absolute;\n  top: 100%;\n  z-index: 5;\n  display: none;\n  max-width: 100%;\n  padding: .5rem;\n  margin-top: .1rem;\n  font-size: .875rem;\n  line-height: 1;\n  color: #fff;\n  background-color: rgba(40, 167, 69, 0.8);\n  border-radius: .2rem; }\n\n.was-validated .form-control:valid, .form-control.is-valid, .was-validated\n.custom-select:valid,\n.custom-select.is-valid {\n  border-color: #28a745; }\n  .was-validated .form-control:valid:focus, .form-control.is-valid:focus, .was-validated\n  .custom-select:valid:focus,\n  .custom-select.is-valid:focus {\n    border-color: #28a745;\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25); }\n  .was-validated .form-control:valid ~ .valid-feedback,\n  .was-validated .form-control:valid ~ .valid-tooltip, .form-control.is-valid ~ .valid-feedback,\n  .form-control.is-valid ~ .valid-tooltip, .was-validated\n  .custom-select:valid ~ .valid-feedback,\n  .was-validated\n  .custom-select:valid ~ .valid-tooltip,\n  .custom-select.is-valid ~ .valid-feedback,\n  .custom-select.is-valid ~ .valid-tooltip {\n    display: block; }\n\n.was-validated .form-control-file:valid ~ .valid-feedback,\n.was-validated .form-control-file:valid ~ .valid-tooltip, .form-control-file.is-valid ~ .valid-feedback,\n.form-control-file.is-valid ~ .valid-tooltip {\n  display: block; }\n\n.was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {\n  color: #28a745; }\n\n.was-validated .form-check-input:valid ~ .valid-feedback,\n.was-validated .form-check-input:valid ~ .valid-tooltip, .form-check-input.is-valid ~ .valid-feedback,\n.form-check-input.is-valid ~ .valid-tooltip {\n  display: block; }\n\n.was-validated .custom-control-input:valid ~ .custom-control-label, .custom-control-input.is-valid ~ .custom-control-label {\n  color: #28a745; }\n  .was-validated .custom-control-input:valid ~ .custom-control-label::before, .custom-control-input.is-valid ~ .custom-control-label::before {\n    background-color: #71dd8a; }\n\n.was-validated .custom-control-input:valid ~ .valid-feedback,\n.was-validated .custom-control-input:valid ~ .valid-tooltip, .custom-control-input.is-valid ~ .valid-feedback,\n.custom-control-input.is-valid ~ .valid-tooltip {\n  display: block; }\n\n.was-validated .custom-control-input:valid:checked ~ .custom-control-label::before, .custom-control-input.is-valid:checked ~ .custom-control-label::before {\n  background-color: #34ce57; }\n\n.was-validated .custom-control-input:valid:focus ~ .custom-control-label::before, .custom-control-input.is-valid:focus ~ .custom-control-label::before {\n  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(40, 167, 69, 0.25); }\n\n.was-validated .custom-file-input:valid ~ .custom-file-label, .custom-file-input.is-valid ~ .custom-file-label {\n  border-color: #28a745; }\n  .was-validated .custom-file-input:valid ~ .custom-file-label::before, .custom-file-input.is-valid ~ .custom-file-label::before {\n    border-color: inherit; }\n\n.was-validated .custom-file-input:valid ~ .valid-feedback,\n.was-validated .custom-file-input:valid ~ .valid-tooltip, .custom-file-input.is-valid ~ .valid-feedback,\n.custom-file-input.is-valid ~ .valid-tooltip {\n  display: block; }\n\n.was-validated .custom-file-input:valid:focus ~ .custom-file-label, .custom-file-input.is-valid:focus ~ .custom-file-label {\n  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25); }\n\n.invalid-feedback {\n  display: none;\n  width: 100%;\n  margin-top: 0.25rem;\n  font-size: 80%;\n  color: #dc3545; }\n\n.invalid-tooltip {\n  position: absolute;\n  top: 100%;\n  z-index: 5;\n  display: none;\n  max-width: 100%;\n  padding: .5rem;\n  margin-top: .1rem;\n  font-size: .875rem;\n  line-height: 1;\n  color: #fff;\n  background-color: rgba(220, 53, 69, 0.8);\n  border-radius: .2rem; }\n\n.was-validated .form-control:invalid, .form-control.is-invalid, .was-validated\n.custom-select:invalid,\n.custom-select.is-invalid {\n  border-color: #dc3545; }\n  .was-validated .form-control:invalid:focus, .form-control.is-invalid:focus, .was-validated\n  .custom-select:invalid:focus,\n  .custom-select.is-invalid:focus {\n    border-color: #dc3545;\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25); }\n  .was-validated .form-control:invalid ~ .invalid-feedback,\n  .was-validated .form-control:invalid ~ .invalid-tooltip, .form-control.is-invalid ~ .invalid-feedback,\n  .form-control.is-invalid ~ .invalid-tooltip, .was-validated\n  .custom-select:invalid ~ .invalid-feedback,\n  .was-validated\n  .custom-select:invalid ~ .invalid-tooltip,\n  .custom-select.is-invalid ~ .invalid-feedback,\n  .custom-select.is-invalid ~ .invalid-tooltip {\n    display: block; }\n\n.was-validated .form-control-file:invalid ~ .invalid-feedback,\n.was-validated .form-control-file:invalid ~ .invalid-tooltip, .form-control-file.is-invalid ~ .invalid-feedback,\n.form-control-file.is-invalid ~ .invalid-tooltip {\n  display: block; }\n\n.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {\n  color: #dc3545; }\n\n.was-validated .form-check-input:invalid ~ .invalid-feedback,\n.was-validated .form-check-input:invalid ~ .invalid-tooltip, .form-check-input.is-invalid ~ .invalid-feedback,\n.form-check-input.is-invalid ~ .invalid-tooltip {\n  display: block; }\n\n.was-validated .custom-control-input:invalid ~ .custom-control-label, .custom-control-input.is-invalid ~ .custom-control-label {\n  color: #dc3545; }\n  .was-validated .custom-control-input:invalid ~ .custom-control-label::before, .custom-control-input.is-invalid ~ .custom-control-label::before {\n    background-color: #efa2a9; }\n\n.was-validated .custom-control-input:invalid ~ .invalid-feedback,\n.was-validated .custom-control-input:invalid ~ .invalid-tooltip, .custom-control-input.is-invalid ~ .invalid-feedback,\n.custom-control-input.is-invalid ~ .invalid-tooltip {\n  display: block; }\n\n.was-validated .custom-control-input:invalid:checked ~ .custom-control-label::before, .custom-control-input.is-invalid:checked ~ .custom-control-label::before {\n  background-color: #e4606d; }\n\n.was-validated .custom-control-input:invalid:focus ~ .custom-control-label::before, .custom-control-input.is-invalid:focus ~ .custom-control-label::before {\n  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(220, 53, 69, 0.25); }\n\n.was-validated .custom-file-input:invalid ~ .custom-file-label, .custom-file-input.is-invalid ~ .custom-file-label {\n  border-color: #dc3545; }\n  .was-validated .custom-file-input:invalid ~ .custom-file-label::before, .custom-file-input.is-invalid ~ .custom-file-label::before {\n    border-color: inherit; }\n\n.was-validated .custom-file-input:invalid ~ .invalid-feedback,\n.was-validated .custom-file-input:invalid ~ .invalid-tooltip, .custom-file-input.is-invalid ~ .invalid-feedback,\n.custom-file-input.is-invalid ~ .invalid-tooltip {\n  display: block; }\n\n.was-validated .custom-file-input:invalid:focus ~ .custom-file-label, .custom-file-input.is-invalid:focus ~ .custom-file-label {\n  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25); }\n\n.form-inline {\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center; }\n  .form-inline .form-check {\n    width: 100%; }\n  @media (min-width: 576px) {\n    .form-inline label {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      margin-bottom: 0; }\n    .form-inline .form-group {\n      display: flex;\n      flex: 0 0 auto;\n      flex-flow: row wrap;\n      align-items: center;\n      margin-bottom: 0; }\n    .form-inline .form-control {\n      display: inline-block;\n      width: auto;\n      vertical-align: middle; }\n    .form-inline .form-control-plaintext {\n      display: inline-block; }\n    .form-inline .input-group,\n    .form-inline .custom-select {\n      width: auto; }\n    .form-inline .form-check {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: auto;\n      padding-left: 0; }\n    .form-inline .form-check-input {\n      position: relative;\n      margin-top: 0;\n      margin-right: 0.25rem;\n      margin-left: 0; }\n    .form-inline .custom-control {\n      align-items: center;\n      justify-content: center; }\n    .form-inline .custom-control-label {\n      margin-bottom: 0; } }\n\n.btn {\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  user-select: none;\n  border: 1px solid transparent;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .btn {\n      transition: none; } }\n  .btn:hover, .btn:focus {\n    text-decoration: none; }\n  .btn:focus, .btn.focus {\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n  .btn.disabled, .btn:disabled {\n    opacity: 0.65; }\n  .btn:not(:disabled):not(.disabled) {\n    cursor: pointer; }\n  .btn:not(:disabled):not(.disabled):active, .btn:not(:disabled):not(.disabled).active {\n    background-image: none; }\n\na.btn.disabled,\nfieldset:disabled a.btn {\n  pointer-events: none; }\n\n.btn-primary {\n  color: #fff;\n  background-color: #007bff;\n  border-color: #007bff; }\n  .btn-primary:hover {\n    color: #fff;\n    background-color: #0069d9;\n    border-color: #0062cc; }\n  .btn-primary:focus, .btn-primary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n  .btn-primary.disabled, .btn-primary:disabled {\n    color: #fff;\n    background-color: #007bff;\n    border-color: #007bff; }\n  .btn-primary:not(:disabled):not(.disabled):active, .btn-primary:not(:disabled):not(.disabled).active,\n  .show > .btn-primary.dropdown-toggle {\n    color: #fff;\n    background-color: #0062cc;\n    border-color: #005cbf; }\n    .btn-primary:not(:disabled):not(.disabled):active:focus, .btn-primary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-primary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n\n.btn-secondary {\n  color: #fff;\n  background-color: #6c757d;\n  border-color: #6c757d; }\n  .btn-secondary:hover {\n    color: #fff;\n    background-color: #5a6268;\n    border-color: #545b62; }\n  .btn-secondary:focus, .btn-secondary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n  .btn-secondary.disabled, .btn-secondary:disabled {\n    color: #fff;\n    background-color: #6c757d;\n    border-color: #6c757d; }\n  .btn-secondary:not(:disabled):not(.disabled):active, .btn-secondary:not(:disabled):not(.disabled).active,\n  .show > .btn-secondary.dropdown-toggle {\n    color: #fff;\n    background-color: #545b62;\n    border-color: #4e555b; }\n    .btn-secondary:not(:disabled):not(.disabled):active:focus, .btn-secondary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-secondary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n\n.btn-success {\n  color: #fff;\n  background-color: #28a745;\n  border-color: #28a745; }\n  .btn-success:hover {\n    color: #fff;\n    background-color: #218838;\n    border-color: #1e7e34; }\n  .btn-success:focus, .btn-success.focus {\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n  .btn-success.disabled, .btn-success:disabled {\n    color: #fff;\n    background-color: #28a745;\n    border-color: #28a745; }\n  .btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabled):not(.disabled).active,\n  .show > .btn-success.dropdown-toggle {\n    color: #fff;\n    background-color: #1e7e34;\n    border-color: #1c7430; }\n    .btn-success:not(:disabled):not(.disabled):active:focus, .btn-success:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-success.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n\n.btn-info {\n  color: #fff;\n  background-color: #17a2b8;\n  border-color: #17a2b8; }\n  .btn-info:hover {\n    color: #fff;\n    background-color: #138496;\n    border-color: #117a8b; }\n  .btn-info:focus, .btn-info.focus {\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n  .btn-info.disabled, .btn-info:disabled {\n    color: #fff;\n    background-color: #17a2b8;\n    border-color: #17a2b8; }\n  .btn-info:not(:disabled):not(.disabled):active, .btn-info:not(:disabled):not(.disabled).active,\n  .show > .btn-info.dropdown-toggle {\n    color: #fff;\n    background-color: #117a8b;\n    border-color: #10707f; }\n    .btn-info:not(:disabled):not(.disabled):active:focus, .btn-info:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-info.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n\n.btn-warning {\n  color: #212529;\n  background-color: #ffc107;\n  border-color: #ffc107; }\n  .btn-warning:hover {\n    color: #212529;\n    background-color: #e0a800;\n    border-color: #d39e00; }\n  .btn-warning:focus, .btn-warning.focus {\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n  .btn-warning.disabled, .btn-warning:disabled {\n    color: #212529;\n    background-color: #ffc107;\n    border-color: #ffc107; }\n  .btn-warning:not(:disabled):not(.disabled):active, .btn-warning:not(:disabled):not(.disabled).active,\n  .show > .btn-warning.dropdown-toggle {\n    color: #212529;\n    background-color: #d39e00;\n    border-color: #c69500; }\n    .btn-warning:not(:disabled):not(.disabled):active:focus, .btn-warning:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-warning.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n\n.btn-danger {\n  color: #fff;\n  background-color: #dc3545;\n  border-color: #dc3545; }\n  .btn-danger:hover {\n    color: #fff;\n    background-color: #c82333;\n    border-color: #bd2130; }\n  .btn-danger:focus, .btn-danger.focus {\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n  .btn-danger.disabled, .btn-danger:disabled {\n    color: #fff;\n    background-color: #dc3545;\n    border-color: #dc3545; }\n  .btn-danger:not(:disabled):not(.disabled):active, .btn-danger:not(:disabled):not(.disabled).active,\n  .show > .btn-danger.dropdown-toggle {\n    color: #fff;\n    background-color: #bd2130;\n    border-color: #b21f2d; }\n    .btn-danger:not(:disabled):not(.disabled):active:focus, .btn-danger:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-danger.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n\n.btn-light {\n  color: #212529;\n  background-color: #f8f9fa;\n  border-color: #f8f9fa; }\n  .btn-light:hover {\n    color: #212529;\n    background-color: #e2e6ea;\n    border-color: #dae0e5; }\n  .btn-light:focus, .btn-light.focus {\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n  .btn-light.disabled, .btn-light:disabled {\n    color: #212529;\n    background-color: #f8f9fa;\n    border-color: #f8f9fa; }\n  .btn-light:not(:disabled):not(.disabled):active, .btn-light:not(:disabled):not(.disabled).active,\n  .show > .btn-light.dropdown-toggle {\n    color: #212529;\n    background-color: #dae0e5;\n    border-color: #d3d9df; }\n    .btn-light:not(:disabled):not(.disabled):active:focus, .btn-light:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-light.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n\n.btn-dark {\n  color: #fff;\n  background-color: #343a40;\n  border-color: #343a40; }\n  .btn-dark:hover {\n    color: #fff;\n    background-color: #23272b;\n    border-color: #1d2124; }\n  .btn-dark:focus, .btn-dark.focus {\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n  .btn-dark.disabled, .btn-dark:disabled {\n    color: #fff;\n    background-color: #343a40;\n    border-color: #343a40; }\n  .btn-dark:not(:disabled):not(.disabled):active, .btn-dark:not(:disabled):not(.disabled).active,\n  .show > .btn-dark.dropdown-toggle {\n    color: #fff;\n    background-color: #1d2124;\n    border-color: #171a1d; }\n    .btn-dark:not(:disabled):not(.disabled):active:focus, .btn-dark:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-dark.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n\n.btn-outline-primary {\n  color: #007bff;\n  background-color: transparent;\n  background-image: none;\n  border-color: #007bff; }\n  .btn-outline-primary:hover {\n    color: #fff;\n    background-color: #007bff;\n    border-color: #007bff; }\n  .btn-outline-primary:focus, .btn-outline-primary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n  .btn-outline-primary.disabled, .btn-outline-primary:disabled {\n    color: #007bff;\n    background-color: transparent; }\n  .btn-outline-primary:not(:disabled):not(.disabled):active, .btn-outline-primary:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-primary.dropdown-toggle {\n    color: #fff;\n    background-color: #007bff;\n    border-color: #007bff; }\n    .btn-outline-primary:not(:disabled):not(.disabled):active:focus, .btn-outline-primary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-primary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5); }\n\n.btn-outline-secondary {\n  color: #6c757d;\n  background-color: transparent;\n  background-image: none;\n  border-color: #6c757d; }\n  .btn-outline-secondary:hover {\n    color: #fff;\n    background-color: #6c757d;\n    border-color: #6c757d; }\n  .btn-outline-secondary:focus, .btn-outline-secondary.focus {\n    box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n  .btn-outline-secondary.disabled, .btn-outline-secondary:disabled {\n    color: #6c757d;\n    background-color: transparent; }\n  .btn-outline-secondary:not(:disabled):not(.disabled):active, .btn-outline-secondary:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-secondary.dropdown-toggle {\n    color: #fff;\n    background-color: #6c757d;\n    border-color: #6c757d; }\n    .btn-outline-secondary:not(:disabled):not(.disabled):active:focus, .btn-outline-secondary:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-secondary.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5); }\n\n.btn-outline-success {\n  color: #28a745;\n  background-color: transparent;\n  background-image: none;\n  border-color: #28a745; }\n  .btn-outline-success:hover {\n    color: #fff;\n    background-color: #28a745;\n    border-color: #28a745; }\n  .btn-outline-success:focus, .btn-outline-success.focus {\n    box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n  .btn-outline-success.disabled, .btn-outline-success:disabled {\n    color: #28a745;\n    background-color: transparent; }\n  .btn-outline-success:not(:disabled):not(.disabled):active, .btn-outline-success:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-success.dropdown-toggle {\n    color: #fff;\n    background-color: #28a745;\n    border-color: #28a745; }\n    .btn-outline-success:not(:disabled):not(.disabled):active:focus, .btn-outline-success:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-success.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5); }\n\n.btn-outline-info {\n  color: #17a2b8;\n  background-color: transparent;\n  background-image: none;\n  border-color: #17a2b8; }\n  .btn-outline-info:hover {\n    color: #fff;\n    background-color: #17a2b8;\n    border-color: #17a2b8; }\n  .btn-outline-info:focus, .btn-outline-info.focus {\n    box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n  .btn-outline-info.disabled, .btn-outline-info:disabled {\n    color: #17a2b8;\n    background-color: transparent; }\n  .btn-outline-info:not(:disabled):not(.disabled):active, .btn-outline-info:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-info.dropdown-toggle {\n    color: #fff;\n    background-color: #17a2b8;\n    border-color: #17a2b8; }\n    .btn-outline-info:not(:disabled):not(.disabled):active:focus, .btn-outline-info:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-info.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5); }\n\n.btn-outline-warning {\n  color: #ffc107;\n  background-color: transparent;\n  background-image: none;\n  border-color: #ffc107; }\n  .btn-outline-warning:hover {\n    color: #212529;\n    background-color: #ffc107;\n    border-color: #ffc107; }\n  .btn-outline-warning:focus, .btn-outline-warning.focus {\n    box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n  .btn-outline-warning.disabled, .btn-outline-warning:disabled {\n    color: #ffc107;\n    background-color: transparent; }\n  .btn-outline-warning:not(:disabled):not(.disabled):active, .btn-outline-warning:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-warning.dropdown-toggle {\n    color: #212529;\n    background-color: #ffc107;\n    border-color: #ffc107; }\n    .btn-outline-warning:not(:disabled):not(.disabled):active:focus, .btn-outline-warning:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-warning.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5); }\n\n.btn-outline-danger {\n  color: #dc3545;\n  background-color: transparent;\n  background-image: none;\n  border-color: #dc3545; }\n  .btn-outline-danger:hover {\n    color: #fff;\n    background-color: #dc3545;\n    border-color: #dc3545; }\n  .btn-outline-danger:focus, .btn-outline-danger.focus {\n    box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n  .btn-outline-danger.disabled, .btn-outline-danger:disabled {\n    color: #dc3545;\n    background-color: transparent; }\n  .btn-outline-danger:not(:disabled):not(.disabled):active, .btn-outline-danger:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-danger.dropdown-toggle {\n    color: #fff;\n    background-color: #dc3545;\n    border-color: #dc3545; }\n    .btn-outline-danger:not(:disabled):not(.disabled):active:focus, .btn-outline-danger:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-danger.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5); }\n\n.btn-outline-light {\n  color: #f8f9fa;\n  background-color: transparent;\n  background-image: none;\n  border-color: #f8f9fa; }\n  .btn-outline-light:hover {\n    color: #212529;\n    background-color: #f8f9fa;\n    border-color: #f8f9fa; }\n  .btn-outline-light:focus, .btn-outline-light.focus {\n    box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n  .btn-outline-light.disabled, .btn-outline-light:disabled {\n    color: #f8f9fa;\n    background-color: transparent; }\n  .btn-outline-light:not(:disabled):not(.disabled):active, .btn-outline-light:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-light.dropdown-toggle {\n    color: #212529;\n    background-color: #f8f9fa;\n    border-color: #f8f9fa; }\n    .btn-outline-light:not(:disabled):not(.disabled):active:focus, .btn-outline-light:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-light.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5); }\n\n.btn-outline-dark {\n  color: #343a40;\n  background-color: transparent;\n  background-image: none;\n  border-color: #343a40; }\n  .btn-outline-dark:hover {\n    color: #fff;\n    background-color: #343a40;\n    border-color: #343a40; }\n  .btn-outline-dark:focus, .btn-outline-dark.focus {\n    box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n  .btn-outline-dark.disabled, .btn-outline-dark:disabled {\n    color: #343a40;\n    background-color: transparent; }\n  .btn-outline-dark:not(:disabled):not(.disabled):active, .btn-outline-dark:not(:disabled):not(.disabled).active,\n  .show > .btn-outline-dark.dropdown-toggle {\n    color: #fff;\n    background-color: #343a40;\n    border-color: #343a40; }\n    .btn-outline-dark:not(:disabled):not(.disabled):active:focus, .btn-outline-dark:not(:disabled):not(.disabled).active:focus,\n    .show > .btn-outline-dark.dropdown-toggle:focus {\n      box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5); }\n\n.btn-link {\n  font-weight: 400;\n  color: #007bff;\n  background-color: transparent; }\n  .btn-link:hover {\n    color: #0056b3;\n    text-decoration: underline;\n    background-color: transparent;\n    border-color: transparent; }\n  .btn-link:focus, .btn-link.focus {\n    text-decoration: underline;\n    border-color: transparent;\n    box-shadow: none; }\n  .btn-link:disabled, .btn-link.disabled {\n    color: #6c757d;\n    pointer-events: none; }\n\n.btn-lg, .btn-group-lg > .btn {\n  padding: 0.5rem 1rem;\n  font-size: 1.25rem;\n  line-height: 1.5;\n  border-radius: 0.3rem; }\n\n.btn-sm, .btn-group-sm > .btn {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  border-radius: 0.2rem; }\n\n.btn-block {\n  display: block;\n  width: 100%; }\n  .btn-block + .btn-block {\n    margin-top: 0.5rem; }\n\ninput[type="submit"].btn-block,\ninput[type="reset"].btn-block,\ninput[type="button"].btn-block {\n  width: 100%; }\n\n.fade {\n  transition: opacity 0.15s linear; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .fade {\n      transition: none; } }\n  .fade:not(.show) {\n    opacity: 0; }\n\n.collapse:not(.show) {\n  display: none; }\n\n.collapsing {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  transition: height 0.35s ease; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .collapsing {\n      transition: none; } }\n\n.dropup,\n.dropright,\n.dropdown,\n.dropleft {\n  position: relative; }\n\n.dropdown-toggle::after {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 0.255em;\n  vertical-align: 0.255em;\n  content: "";\n  border-top: 0.3em solid;\n  border-right: 0.3em solid transparent;\n  border-bottom: 0;\n  border-left: 0.3em solid transparent; }\n\n.dropdown-toggle:empty::after {\n  margin-left: 0; }\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  display: none;\n  float: left;\n  min-width: 10rem;\n  padding: 0.5rem 0;\n  margin: 0.125rem 0 0;\n  font-size: 1rem;\n  color: #212529;\n  text-align: left;\n  list-style: none;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 0.25rem; }\n\n.dropdown-menu-right {\n  right: 0;\n  left: auto; }\n\n.dropup .dropdown-menu {\n  top: auto;\n  bottom: 100%;\n  margin-top: 0;\n  margin-bottom: 0.125rem; }\n\n.dropup .dropdown-toggle::after {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 0.255em;\n  vertical-align: 0.255em;\n  content: "";\n  border-top: 0;\n  border-right: 0.3em solid transparent;\n  border-bottom: 0.3em solid;\n  border-left: 0.3em solid transparent; }\n\n.dropup .dropdown-toggle:empty::after {\n  margin-left: 0; }\n\n.dropright .dropdown-menu {\n  top: 0;\n  right: auto;\n  left: 100%;\n  margin-top: 0;\n  margin-left: 0.125rem; }\n\n.dropright .dropdown-toggle::after {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 0.255em;\n  vertical-align: 0.255em;\n  content: "";\n  border-top: 0.3em solid transparent;\n  border-right: 0;\n  border-bottom: 0.3em solid transparent;\n  border-left: 0.3em solid; }\n\n.dropright .dropdown-toggle:empty::after {\n  margin-left: 0; }\n\n.dropright .dropdown-toggle::after {\n  vertical-align: 0; }\n\n.dropleft .dropdown-menu {\n  top: 0;\n  right: 100%;\n  left: auto;\n  margin-top: 0;\n  margin-right: 0.125rem; }\n\n.dropleft .dropdown-toggle::after {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 0.255em;\n  vertical-align: 0.255em;\n  content: ""; }\n\n.dropleft .dropdown-toggle::after {\n  display: none; }\n\n.dropleft .dropdown-toggle::before {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-right: 0.255em;\n  vertical-align: 0.255em;\n  content: "";\n  border-top: 0.3em solid transparent;\n  border-right: 0.3em solid;\n  border-bottom: 0.3em solid transparent; }\n\n.dropleft .dropdown-toggle:empty::after {\n  margin-left: 0; }\n\n.dropleft .dropdown-toggle::before {\n  vertical-align: 0; }\n\n.dropdown-menu[x-placement^="top"], .dropdown-menu[x-placement^="right"], .dropdown-menu[x-placement^="bottom"], .dropdown-menu[x-placement^="left"] {\n  right: auto;\n  bottom: auto; }\n\n.dropdown-divider {\n  height: 0;\n  margin: 0.5rem 0;\n  overflow: hidden;\n  border-top: 1px solid #e9ecef; }\n\n.dropdown-item {\n  display: block;\n  width: 100%;\n  padding: 0.25rem 1.5rem;\n  clear: both;\n  font-weight: 400;\n  color: #212529;\n  text-align: inherit;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0; }\n  .dropdown-item:hover, .dropdown-item:focus {\n    color: #16181b;\n    text-decoration: none;\n    background-color: #f8f9fa; }\n  .dropdown-item.active, .dropdown-item:active {\n    color: #fff;\n    text-decoration: none;\n    background-color: #007bff; }\n  .dropdown-item.disabled, .dropdown-item:disabled {\n    color: #6c757d;\n    background-color: transparent; }\n\n.dropdown-menu.show {\n  display: block; }\n\n.dropdown-header {\n  display: block;\n  padding: 0.5rem 1.5rem;\n  margin-bottom: 0;\n  font-size: 0.875rem;\n  color: #6c757d;\n  white-space: nowrap; }\n\n.dropdown-item-text {\n  display: block;\n  padding: 0.25rem 1.5rem;\n  color: #212529; }\n\n.btn-group,\n.btn-group-vertical {\n  position: relative;\n  display: inline-flex;\n  vertical-align: middle; }\n  .btn-group > .btn,\n  .btn-group-vertical > .btn {\n    position: relative;\n    flex: 0 1 auto; }\n    .btn-group > .btn:hover,\n    .btn-group-vertical > .btn:hover {\n      z-index: 1; }\n    .btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active,\n    .btn-group-vertical > .btn:focus,\n    .btn-group-vertical > .btn:active,\n    .btn-group-vertical > .btn.active {\n      z-index: 1; }\n  .btn-group .btn + .btn,\n  .btn-group .btn + .btn-group,\n  .btn-group .btn-group + .btn,\n  .btn-group .btn-group + .btn-group,\n  .btn-group-vertical .btn + .btn,\n  .btn-group-vertical .btn + .btn-group,\n  .btn-group-vertical .btn-group + .btn,\n  .btn-group-vertical .btn-group + .btn-group {\n    margin-left: -1px; }\n\n.btn-toolbar {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start; }\n  .btn-toolbar .input-group {\n    width: auto; }\n\n.btn-group > .btn:first-child {\n  margin-left: 0; }\n\n.btn-group > .btn:not(:last-child):not(.dropdown-toggle),\n.btn-group > .btn-group:not(:last-child) > .btn {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0; }\n\n.btn-group > .btn:not(:first-child),\n.btn-group > .btn-group:not(:first-child) > .btn {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.dropdown-toggle-split {\n  padding-right: 0.5625rem;\n  padding-left: 0.5625rem; }\n  .dropdown-toggle-split::after,\n  .dropup .dropdown-toggle-split::after,\n  .dropright .dropdown-toggle-split::after {\n    margin-left: 0; }\n  .dropleft .dropdown-toggle-split::before {\n    margin-right: 0; }\n\n.btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-split {\n  padding-right: 0.375rem;\n  padding-left: 0.375rem; }\n\n.btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-split {\n  padding-right: 0.75rem;\n  padding-left: 0.75rem; }\n\n.btn-group-vertical {\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center; }\n  .btn-group-vertical .btn,\n  .btn-group-vertical .btn-group {\n    width: 100%; }\n  .btn-group-vertical > .btn + .btn,\n  .btn-group-vertical > .btn + .btn-group,\n  .btn-group-vertical > .btn-group + .btn,\n  .btn-group-vertical > .btn-group + .btn-group {\n    margin-top: -1px;\n    margin-left: 0; }\n  .btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),\n  .btn-group-vertical > .btn-group:not(:last-child) > .btn {\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0; }\n  .btn-group-vertical > .btn:not(:first-child),\n  .btn-group-vertical > .btn-group:not(:first-child) > .btn {\n    border-top-left-radius: 0;\n    border-top-right-radius: 0; }\n\n.btn-group-toggle > .btn,\n.btn-group-toggle > .btn-group > .btn {\n  margin-bottom: 0; }\n  .btn-group-toggle > .btn input[type="radio"],\n  .btn-group-toggle > .btn input[type="checkbox"],\n  .btn-group-toggle > .btn-group > .btn input[type="radio"],\n  .btn-group-toggle > .btn-group > .btn input[type="checkbox"] {\n    position: absolute;\n    clip: rect(0, 0, 0, 0);\n    pointer-events: none; }\n\n.input-group {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  width: 100%; }\n  .input-group > .form-control,\n  .input-group > .custom-select,\n  .input-group > .custom-file {\n    position: relative;\n    flex: 1 1 auto;\n    width: 1%;\n    margin-bottom: 0; }\n    .input-group > .form-control + .form-control,\n    .input-group > .form-control + .custom-select,\n    .input-group > .form-control + .custom-file,\n    .input-group > .custom-select + .form-control,\n    .input-group > .custom-select + .custom-select,\n    .input-group > .custom-select + .custom-file,\n    .input-group > .custom-file + .form-control,\n    .input-group > .custom-file + .custom-select,\n    .input-group > .custom-file + .custom-file {\n      margin-left: -1px; }\n  .input-group > .form-control:focus,\n  .input-group > .custom-select:focus,\n  .input-group > .custom-file .custom-file-input:focus ~ .custom-file-label {\n    z-index: 3; }\n  .input-group > .form-control:not(:last-child),\n  .input-group > .custom-select:not(:last-child) {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0; }\n  .input-group > .form-control:not(:first-child),\n  .input-group > .custom-select:not(:first-child) {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0; }\n  .input-group > .custom-file {\n    display: flex;\n    align-items: center; }\n    .input-group > .custom-file:not(:last-child) .custom-file-label,\n    .input-group > .custom-file:not(:last-child) .custom-file-label::after {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0; }\n    .input-group > .custom-file:not(:first-child) .custom-file-label {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0; }\n\n.input-group-prepend,\n.input-group-append {\n  display: flex; }\n  .input-group-prepend .btn,\n  .input-group-append .btn {\n    position: relative;\n    z-index: 2; }\n  .input-group-prepend .btn + .btn,\n  .input-group-prepend .btn + .input-group-text,\n  .input-group-prepend .input-group-text + .input-group-text,\n  .input-group-prepend .input-group-text + .btn,\n  .input-group-append .btn + .btn,\n  .input-group-append .btn + .input-group-text,\n  .input-group-append .input-group-text + .input-group-text,\n  .input-group-append .input-group-text + .btn {\n    margin-left: -1px; }\n\n.input-group-prepend {\n  margin-right: -1px; }\n\n.input-group-append {\n  margin-left: -1px; }\n\n.input-group-text {\n  display: flex;\n  align-items: center;\n  padding: 0.375rem 0.75rem;\n  margin-bottom: 0;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #495057;\n  text-align: center;\n  white-space: nowrap;\n  background-color: #e9ecef;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem; }\n  .input-group-text input[type="radio"],\n  .input-group-text input[type="checkbox"] {\n    margin-top: 0; }\n\n.input-group > .input-group-prepend > .btn,\n.input-group > .input-group-prepend > .input-group-text,\n.input-group > .input-group-append:not(:last-child) > .btn,\n.input-group > .input-group-append:not(:last-child) > .input-group-text,\n.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),\n.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0; }\n\n.input-group > .input-group-append > .btn,\n.input-group > .input-group-append > .input-group-text,\n.input-group > .input-group-prepend:not(:first-child) > .btn,\n.input-group > .input-group-prepend:not(:first-child) > .input-group-text,\n.input-group > .input-group-prepend:first-child > .btn:not(:first-child),\n.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.custom-control {\n  position: relative;\n  display: block;\n  min-height: 1.5rem;\n  padding-left: 1.5rem; }\n\n.custom-control-inline {\n  display: inline-flex;\n  margin-right: 1rem; }\n\n.custom-control-input {\n  position: absolute;\n  z-index: -1;\n  opacity: 0; }\n  .custom-control-input:checked ~ .custom-control-label::before {\n    color: #fff;\n    background-color: #007bff; }\n  .custom-control-input:focus ~ .custom-control-label::before {\n    box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n  .custom-control-input:active ~ .custom-control-label::before {\n    color: #fff;\n    background-color: #b3d7ff; }\n  .custom-control-input:disabled ~ .custom-control-label {\n    color: #6c757d; }\n    .custom-control-input:disabled ~ .custom-control-label::before {\n      background-color: #e9ecef; }\n\n.custom-control-label {\n  position: relative;\n  margin-bottom: 0; }\n  .custom-control-label::before {\n    position: absolute;\n    top: 0.25rem;\n    left: -1.5rem;\n    display: block;\n    width: 1rem;\n    height: 1rem;\n    pointer-events: none;\n    content: "";\n    user-select: none;\n    background-color: #dee2e6; }\n  .custom-control-label::after {\n    position: absolute;\n    top: 0.25rem;\n    left: -1.5rem;\n    display: block;\n    width: 1rem;\n    height: 1rem;\n    content: "";\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: 50% 50%; }\n\n.custom-checkbox .custom-control-label::before {\n  border-radius: 0.25rem; }\n\n.custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {\n  background-color: #007bff; }\n\n.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after {\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 8 8\'%3E%3Cpath fill=\'%23fff\' d=\'M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z\'/%3E%3C/svg%3E"); }\n\n.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before {\n  background-color: #007bff; }\n\n.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after {\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 4 4\'%3E%3Cpath stroke=\'%23fff\' d=\'M0 2h4\'/%3E%3C/svg%3E"); }\n\n.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-label::before {\n  background-color: rgba(0, 123, 255, 0.5); }\n\n.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-control-label::before {\n  background-color: rgba(0, 123, 255, 0.5); }\n\n.custom-radio .custom-control-label::before {\n  border-radius: 50%; }\n\n.custom-radio .custom-control-input:checked ~ .custom-control-label::before {\n  background-color: #007bff; }\n\n.custom-radio .custom-control-input:checked ~ .custom-control-label::after {\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'-4 -4 8 8\'%3E%3Ccircle r=\'3\' fill=\'%23fff\'/%3E%3C/svg%3E"); }\n\n.custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before {\n  background-color: rgba(0, 123, 255, 0.5); }\n\n.custom-select {\n  display: inline-block;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  padding: 0.375rem 1.75rem 0.375rem 0.75rem;\n  line-height: 1.5;\n  color: #495057;\n  vertical-align: middle;\n  background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' viewBox=\'0 0 4 5\'%3E%3Cpath fill=\'%23343a40\' d=\'M2 0L0 2h4zm0 5L0 3h4z\'/%3E%3C/svg%3E") no-repeat right 0.75rem center;\n  background-size: 8px 10px;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n  appearance: none; }\n  .custom-select:focus {\n    border-color: #80bdff;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(128, 189, 255, 0.5); }\n    .custom-select:focus::-ms-value {\n      color: #495057;\n      background-color: #fff; }\n  .custom-select[multiple], .custom-select[size]:not([size="1"]) {\n    height: auto;\n    padding-right: 0.75rem;\n    background-image: none; }\n  .custom-select:disabled {\n    color: #6c757d;\n    background-color: #e9ecef; }\n  .custom-select::-ms-expand {\n    opacity: 0; }\n\n.custom-select-sm {\n  height: calc(1.8125rem + 2px);\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 75%; }\n\n.custom-select-lg {\n  height: calc(2.875rem + 2px);\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  font-size: 125%; }\n\n.custom-file {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  margin-bottom: 0; }\n\n.custom-file-input {\n  position: relative;\n  z-index: 2;\n  width: 100%;\n  height: calc(2.25rem + 2px);\n  margin: 0;\n  opacity: 0; }\n  .custom-file-input:focus ~ .custom-file-label {\n    border-color: #80bdff;\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n    .custom-file-input:focus ~ .custom-file-label::after {\n      border-color: #80bdff; }\n  .custom-file-input:disabled ~ .custom-file-label {\n    background-color: #e9ecef; }\n  .custom-file-input:lang(en) ~ .custom-file-label::after {\n    content: "Browse"; }\n\n.custom-file-label {\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 1;\n  height: calc(2.25rem + 2px);\n  padding: 0.375rem 0.75rem;\n  line-height: 1.5;\n  color: #495057;\n  background-color: #fff;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem; }\n  .custom-file-label::after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 3;\n    display: block;\n    height: 2.25rem;\n    padding: 0.375rem 0.75rem;\n    line-height: 1.5;\n    color: #495057;\n    content: "Browse";\n    background-color: #e9ecef;\n    border-left: 1px solid #ced4da;\n    border-radius: 0 0.25rem 0.25rem 0; }\n\n.custom-range {\n  width: 100%;\n  padding-left: 0;\n  background-color: transparent;\n  appearance: none; }\n  .custom-range:focus {\n    outline: none; }\n  .custom-range::-moz-focus-outer {\n    border: 0; }\n  .custom-range::-webkit-slider-thumb {\n    width: 1rem;\n    height: 1rem;\n    margin-top: -0.25rem;\n    background-color: #007bff;\n    border: 0;\n    border-radius: 1rem;\n    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    appearance: none; }\n    @media screen and (prefers-reduced-motion: reduce) {\n      .custom-range::-webkit-slider-thumb {\n        transition: none; } }\n    .custom-range::-webkit-slider-thumb:focus {\n      outline: none;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n    .custom-range::-webkit-slider-thumb:active {\n      background-color: #b3d7ff; }\n  .custom-range::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 0.5rem;\n    color: transparent;\n    cursor: pointer;\n    background-color: #dee2e6;\n    border-color: transparent;\n    border-radius: 1rem; }\n  .custom-range::-moz-range-thumb {\n    width: 1rem;\n    height: 1rem;\n    background-color: #007bff;\n    border: 0;\n    border-radius: 1rem;\n    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    appearance: none; }\n    @media screen and (prefers-reduced-motion: reduce) {\n      .custom-range::-moz-range-thumb {\n        transition: none; } }\n    .custom-range::-moz-range-thumb:focus {\n      outline: none;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n    .custom-range::-moz-range-thumb:active {\n      background-color: #b3d7ff; }\n  .custom-range::-moz-range-track {\n    width: 100%;\n    height: 0.5rem;\n    color: transparent;\n    cursor: pointer;\n    background-color: #dee2e6;\n    border-color: transparent;\n    border-radius: 1rem; }\n  .custom-range::-ms-thumb {\n    width: 1rem;\n    height: 1rem;\n    background-color: #007bff;\n    border: 0;\n    border-radius: 1rem;\n    transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    appearance: none; }\n    @media screen and (prefers-reduced-motion: reduce) {\n      .custom-range::-ms-thumb {\n        transition: none; } }\n    .custom-range::-ms-thumb:focus {\n      outline: none;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n    .custom-range::-ms-thumb:active {\n      background-color: #b3d7ff; }\n  .custom-range::-ms-track {\n    width: 100%;\n    height: 0.5rem;\n    color: transparent;\n    cursor: pointer;\n    background-color: transparent;\n    border-color: transparent;\n    border-width: 0.5rem; }\n  .custom-range::-ms-fill-lower {\n    background-color: #dee2e6;\n    border-radius: 1rem; }\n  .custom-range::-ms-fill-upper {\n    margin-right: 15px;\n    background-color: #dee2e6;\n    border-radius: 1rem; }\n\n.custom-control-label::before,\n.custom-file-label,\n.custom-select {\n  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .custom-control-label::before,\n    .custom-file-label,\n    .custom-select {\n      transition: none; } }\n\n.nav {\n  display: flex;\n  flex-wrap: wrap;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none; }\n\n.nav-link {\n  display: block;\n  padding: 0.5rem 1rem; }\n  .nav-link:hover, .nav-link:focus {\n    text-decoration: none; }\n  .nav-link.disabled {\n    color: #6c757d; }\n\n.nav-tabs {\n  border-bottom: 1px solid #dee2e6; }\n  .nav-tabs .nav-item {\n    margin-bottom: -1px; }\n  .nav-tabs .nav-link {\n    border: 1px solid transparent;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem; }\n    .nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus {\n      border-color: #e9ecef #e9ecef #dee2e6; }\n    .nav-tabs .nav-link.disabled {\n      color: #6c757d;\n      background-color: transparent;\n      border-color: transparent; }\n  .nav-tabs .nav-link.active,\n  .nav-tabs .nav-item.show .nav-link {\n    color: #495057;\n    background-color: #fff;\n    border-color: #dee2e6 #dee2e6 #fff; }\n  .nav-tabs .dropdown-menu {\n    margin-top: -1px;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0; }\n\n.nav-pills .nav-link {\n  border-radius: 0.25rem; }\n\n.nav-pills .nav-link.active,\n.nav-pills .show > .nav-link {\n  color: #fff;\n  background-color: #007bff; }\n\n.nav-fill .nav-item {\n  flex: 1 1 auto;\n  text-align: center; }\n\n.nav-justified .nav-item {\n  flex-basis: 0;\n  flex-grow: 1;\n  text-align: center; }\n\n.tab-content > .tab-pane {\n  display: none; }\n\n.tab-content > .active {\n  display: block; }\n\n.navbar {\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 1rem; }\n  .navbar > .container,\n  .navbar > .container-fluid {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between; }\n\n.navbar-brand {\n  display: inline-block;\n  padding-top: 0.3125rem;\n  padding-bottom: 0.3125rem;\n  margin-right: 1rem;\n  font-size: 1.25rem;\n  line-height: inherit;\n  white-space: nowrap; }\n  .navbar-brand:hover, .navbar-brand:focus {\n    text-decoration: none; }\n\n.navbar-nav {\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  margin-bottom: 0;\n  list-style: none; }\n  .navbar-nav .nav-link {\n    padding-right: 0;\n    padding-left: 0; }\n  .navbar-nav .dropdown-menu {\n    position: static;\n    float: none; }\n\n.navbar-text {\n  display: inline-block;\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem; }\n\n.navbar-collapse {\n  flex-basis: 100%;\n  flex-grow: 1;\n  align-items: center; }\n\n.navbar-toggler {\n  padding: 0.25rem 0.75rem;\n  font-size: 1.25rem;\n  line-height: 1;\n  background-color: transparent;\n  border: 1px solid transparent;\n  border-radius: 0.25rem; }\n  .navbar-toggler:hover, .navbar-toggler:focus {\n    text-decoration: none; }\n  .navbar-toggler:not(:disabled):not(.disabled) {\n    cursor: pointer; }\n\n.navbar-toggler-icon {\n  display: inline-block;\n  width: 1.5em;\n  height: 1.5em;\n  vertical-align: middle;\n  content: "";\n  background: no-repeat center center;\n  background-size: 100% 100%; }\n\n@media (max-width: 575.98px) {\n  .navbar-expand-sm > .container,\n  .navbar-expand-sm > .container-fluid {\n    padding-right: 0;\n    padding-left: 0; } }\n\n@media (min-width: 576px) {\n  .navbar-expand-sm {\n    flex-flow: row nowrap;\n    justify-content: flex-start; }\n    .navbar-expand-sm .navbar-nav {\n      flex-direction: row; }\n      .navbar-expand-sm .navbar-nav .dropdown-menu {\n        position: absolute; }\n      .navbar-expand-sm .navbar-nav .nav-link {\n        padding-right: 0.5rem;\n        padding-left: 0.5rem; }\n    .navbar-expand-sm > .container,\n    .navbar-expand-sm > .container-fluid {\n      flex-wrap: nowrap; }\n    .navbar-expand-sm .navbar-collapse {\n      display: flex !important;\n      flex-basis: auto; }\n    .navbar-expand-sm .navbar-toggler {\n      display: none; } }\n\n@media (max-width: 767.98px) {\n  .navbar-expand-md > .container,\n  .navbar-expand-md > .container-fluid {\n    padding-right: 0;\n    padding-left: 0; } }\n\n@media (min-width: 768px) {\n  .navbar-expand-md {\n    flex-flow: row nowrap;\n    justify-content: flex-start; }\n    .navbar-expand-md .navbar-nav {\n      flex-direction: row; }\n      .navbar-expand-md .navbar-nav .dropdown-menu {\n        position: absolute; }\n      .navbar-expand-md .navbar-nav .nav-link {\n        padding-right: 0.5rem;\n        padding-left: 0.5rem; }\n    .navbar-expand-md > .container,\n    .navbar-expand-md > .container-fluid {\n      flex-wrap: nowrap; }\n    .navbar-expand-md .navbar-collapse {\n      display: flex !important;\n      flex-basis: auto; }\n    .navbar-expand-md .navbar-toggler {\n      display: none; } }\n\n@media (max-width: 991.98px) {\n  .navbar-expand-lg > .container,\n  .navbar-expand-lg > .container-fluid {\n    padding-right: 0;\n    padding-left: 0; } }\n\n@media (min-width: 992px) {\n  .navbar-expand-lg {\n    flex-flow: row nowrap;\n    justify-content: flex-start; }\n    .navbar-expand-lg .navbar-nav {\n      flex-direction: row; }\n      .navbar-expand-lg .navbar-nav .dropdown-menu {\n        position: absolute; }\n      .navbar-expand-lg .navbar-nav .nav-link {\n        padding-right: 0.5rem;\n        padding-left: 0.5rem; }\n    .navbar-expand-lg > .container,\n    .navbar-expand-lg > .container-fluid {\n      flex-wrap: nowrap; }\n    .navbar-expand-lg .navbar-collapse {\n      display: flex !important;\n      flex-basis: auto; }\n    .navbar-expand-lg .navbar-toggler {\n      display: none; } }\n\n@media (max-width: 1199.98px) {\n  .navbar-expand-xl > .container,\n  .navbar-expand-xl > .container-fluid {\n    padding-right: 0;\n    padding-left: 0; } }\n\n@media (min-width: 1200px) {\n  .navbar-expand-xl {\n    flex-flow: row nowrap;\n    justify-content: flex-start; }\n    .navbar-expand-xl .navbar-nav {\n      flex-direction: row; }\n      .navbar-expand-xl .navbar-nav .dropdown-menu {\n        position: absolute; }\n      .navbar-expand-xl .navbar-nav .nav-link {\n        padding-right: 0.5rem;\n        padding-left: 0.5rem; }\n    .navbar-expand-xl > .container,\n    .navbar-expand-xl > .container-fluid {\n      flex-wrap: nowrap; }\n    .navbar-expand-xl .navbar-collapse {\n      display: flex !important;\n      flex-basis: auto; }\n    .navbar-expand-xl .navbar-toggler {\n      display: none; } }\n\n.navbar-expand {\n  flex-flow: row nowrap;\n  justify-content: flex-start; }\n  .navbar-expand > .container,\n  .navbar-expand > .container-fluid {\n    padding-right: 0;\n    padding-left: 0; }\n  .navbar-expand .navbar-nav {\n    flex-direction: row; }\n    .navbar-expand .navbar-nav .dropdown-menu {\n      position: absolute; }\n    .navbar-expand .navbar-nav .nav-link {\n      padding-right: 0.5rem;\n      padding-left: 0.5rem; }\n  .navbar-expand > .container,\n  .navbar-expand > .container-fluid {\n    flex-wrap: nowrap; }\n  .navbar-expand .navbar-collapse {\n    display: flex !important;\n    flex-basis: auto; }\n  .navbar-expand .navbar-toggler {\n    display: none; }\n\n.navbar-light .navbar-brand {\n  color: rgba(0, 0, 0, 0.9); }\n  .navbar-light .navbar-brand:hover, .navbar-light .navbar-brand:focus {\n    color: rgba(0, 0, 0, 0.9); }\n\n.navbar-light .navbar-nav .nav-link {\n  color: rgba(0, 0, 0, 0.5); }\n  .navbar-light .navbar-nav .nav-link:hover, .navbar-light .navbar-nav .nav-link:focus {\n    color: rgba(0, 0, 0, 0.7); }\n  .navbar-light .navbar-nav .nav-link.disabled {\n    color: rgba(0, 0, 0, 0.3); }\n\n.navbar-light .navbar-nav .show > .nav-link,\n.navbar-light .navbar-nav .active > .nav-link,\n.navbar-light .navbar-nav .nav-link.show,\n.navbar-light .navbar-nav .nav-link.active {\n  color: rgba(0, 0, 0, 0.9); }\n\n.navbar-light .navbar-toggler {\n  color: rgba(0, 0, 0, 0.5);\n  border-color: rgba(0, 0, 0, 0.1); }\n\n.navbar-light .navbar-toggler-icon {\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox=\'0 0 30 30\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath stroke=\'rgba(0, 0, 0, 0.5)\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' d=\'M4 7h22M4 15h22M4 23h22\'/%3E%3C/svg%3E"); }\n\n.navbar-light .navbar-text {\n  color: rgba(0, 0, 0, 0.5); }\n  .navbar-light .navbar-text a {\n    color: rgba(0, 0, 0, 0.9); }\n    .navbar-light .navbar-text a:hover, .navbar-light .navbar-text a:focus {\n      color: rgba(0, 0, 0, 0.9); }\n\n.navbar-dark .navbar-brand {\n  color: #fff; }\n  .navbar-dark .navbar-brand:hover, .navbar-dark .navbar-brand:focus {\n    color: #fff; }\n\n.navbar-dark .navbar-nav .nav-link {\n  color: rgba(255, 255, 255, 0.5); }\n  .navbar-dark .navbar-nav .nav-link:hover, .navbar-dark .navbar-nav .nav-link:focus {\n    color: rgba(255, 255, 255, 0.75); }\n  .navbar-dark .navbar-nav .nav-link.disabled {\n    color: rgba(255, 255, 255, 0.25); }\n\n.navbar-dark .navbar-nav .show > .nav-link,\n.navbar-dark .navbar-nav .active > .nav-link,\n.navbar-dark .navbar-nav .nav-link.show,\n.navbar-dark .navbar-nav .nav-link.active {\n  color: #fff; }\n\n.navbar-dark .navbar-toggler {\n  color: rgba(255, 255, 255, 0.5);\n  border-color: rgba(255, 255, 255, 0.1); }\n\n.navbar-dark .navbar-toggler-icon {\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox=\'0 0 30 30\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cpath stroke=\'rgba(255, 255, 255, 0.5)\' stroke-width=\'2\' stroke-linecap=\'round\' stroke-miterlimit=\'10\' d=\'M4 7h22M4 15h22M4 23h22\'/%3E%3C/svg%3E"); }\n\n.navbar-dark .navbar-text {\n  color: rgba(255, 255, 255, 0.5); }\n  .navbar-dark .navbar-text a {\n    color: #fff; }\n    .navbar-dark .navbar-text a:hover, .navbar-dark .navbar-text a:focus {\n      color: #fff; }\n\n.card {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  word-wrap: break-word;\n  background-color: #fff;\n  background-clip: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 0.25rem; }\n  .card > hr {\n    margin-right: 0;\n    margin-left: 0; }\n  .card > .list-group:first-child .list-group-item:first-child {\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem; }\n  .card > .list-group:last-child .list-group-item:last-child {\n    border-bottom-right-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem; }\n\n.card-body {\n  flex: 1 1 auto;\n  padding: 1.25rem; }\n\n.card-title {\n  margin-bottom: 0.75rem; }\n\n.card-subtitle {\n  margin-top: -0.375rem;\n  margin-bottom: 0; }\n\n.card-text:last-child {\n  margin-bottom: 0; }\n\n.card-link:hover {\n  text-decoration: none; }\n\n.card-link + .card-link {\n  margin-left: 1.25rem; }\n\n.card-header {\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 0;\n  background-color: rgba(0, 0, 0, 0.03);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125); }\n  .card-header:first-child {\n    border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0; }\n  .card-header + .list-group .list-group-item:first-child {\n    border-top: 0; }\n\n.card-footer {\n  padding: 0.75rem 1.25rem;\n  background-color: rgba(0, 0, 0, 0.03);\n  border-top: 1px solid rgba(0, 0, 0, 0.125); }\n  .card-footer:last-child {\n    border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px); }\n\n.card-header-tabs {\n  margin-right: -0.625rem;\n  margin-bottom: -0.75rem;\n  margin-left: -0.625rem;\n  border-bottom: 0; }\n\n.card-header-pills {\n  margin-right: -0.625rem;\n  margin-left: -0.625rem; }\n\n.card-img-overlay {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  padding: 1.25rem; }\n\n.card-img {\n  width: 100%;\n  border-radius: calc(0.25rem - 1px); }\n\n.card-img-top {\n  width: 100%;\n  border-top-left-radius: calc(0.25rem - 1px);\n  border-top-right-radius: calc(0.25rem - 1px); }\n\n.card-img-bottom {\n  width: 100%;\n  border-bottom-right-radius: calc(0.25rem - 1px);\n  border-bottom-left-radius: calc(0.25rem - 1px); }\n\n.card-deck {\n  display: flex;\n  flex-direction: column; }\n  .card-deck .card {\n    margin-bottom: 15px; }\n  @media (min-width: 576px) {\n    .card-deck {\n      flex-flow: row wrap;\n      margin-right: -15px;\n      margin-left: -15px; }\n      .card-deck .card {\n        display: flex;\n        flex: 1 0 0%;\n        flex-direction: column;\n        margin-right: 15px;\n        margin-bottom: 0;\n        margin-left: 15px; } }\n\n.card-group {\n  display: flex;\n  flex-direction: column; }\n  .card-group > .card {\n    margin-bottom: 15px; }\n  @media (min-width: 576px) {\n    .card-group {\n      flex-flow: row wrap; }\n      .card-group > .card {\n        flex: 1 0 0%;\n        margin-bottom: 0; }\n        .card-group > .card + .card {\n          margin-left: 0;\n          border-left: 0; }\n        .card-group > .card:first-child {\n          border-top-right-radius: 0;\n          border-bottom-right-radius: 0; }\n          .card-group > .card:first-child .card-img-top,\n          .card-group > .card:first-child .card-header {\n            border-top-right-radius: 0; }\n          .card-group > .card:first-child .card-img-bottom,\n          .card-group > .card:first-child .card-footer {\n            border-bottom-right-radius: 0; }\n        .card-group > .card:last-child {\n          border-top-left-radius: 0;\n          border-bottom-left-radius: 0; }\n          .card-group > .card:last-child .card-img-top,\n          .card-group > .card:last-child .card-header {\n            border-top-left-radius: 0; }\n          .card-group > .card:last-child .card-img-bottom,\n          .card-group > .card:last-child .card-footer {\n            border-bottom-left-radius: 0; }\n        .card-group > .card:only-child {\n          border-radius: 0.25rem; }\n          .card-group > .card:only-child .card-img-top,\n          .card-group > .card:only-child .card-header {\n            border-top-left-radius: 0.25rem;\n            border-top-right-radius: 0.25rem; }\n          .card-group > .card:only-child .card-img-bottom,\n          .card-group > .card:only-child .card-footer {\n            border-bottom-right-radius: 0.25rem;\n            border-bottom-left-radius: 0.25rem; }\n        .card-group > .card:not(:first-child):not(:last-child):not(:only-child) {\n          border-radius: 0; }\n          .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-img-top,\n          .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-img-bottom,\n          .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-header,\n          .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-footer {\n            border-radius: 0; } }\n\n.card-columns .card {\n  margin-bottom: 0.75rem; }\n\n@media (min-width: 576px) {\n  .card-columns {\n    column-count: 3;\n    column-gap: 1.25rem;\n    orphans: 1;\n    widows: 1; }\n    .card-columns .card {\n      display: inline-block;\n      width: 100%; } }\n\n.accordion .card:not(:first-of-type):not(:last-of-type) {\n  border-bottom: 0;\n  border-radius: 0; }\n\n.accordion .card:not(:first-of-type) .card-header:first-child {\n  border-radius: 0; }\n\n.accordion .card:first-of-type {\n  border-bottom: 0;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0; }\n\n.accordion .card:last-of-type {\n  border-top-left-radius: 0;\n  border-top-right-radius: 0; }\n\n.breadcrumb {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  list-style: none;\n  background-color: #e9ecef;\n  border-radius: 0.25rem; }\n\n.breadcrumb-item + .breadcrumb-item {\n  padding-left: 0.5rem; }\n  .breadcrumb-item + .breadcrumb-item::before {\n    display: inline-block;\n    padding-right: 0.5rem;\n    color: #6c757d;\n    content: "/"; }\n\n.breadcrumb-item + .breadcrumb-item:hover::before {\n  text-decoration: underline; }\n\n.breadcrumb-item + .breadcrumb-item:hover::before {\n  text-decoration: none; }\n\n.breadcrumb-item.active {\n  color: #6c757d; }\n\n.pagination {\n  display: flex;\n  padding-left: 0;\n  list-style: none;\n  border-radius: 0.25rem; }\n\n.page-link {\n  position: relative;\n  display: block;\n  padding: 0.5rem 0.75rem;\n  margin-left: -1px;\n  line-height: 1.25;\n  color: #007bff;\n  background-color: #fff;\n  border: 1px solid #dee2e6; }\n  .page-link:hover {\n    z-index: 2;\n    color: #0056b3;\n    text-decoration: none;\n    background-color: #e9ecef;\n    border-color: #dee2e6; }\n  .page-link:focus {\n    z-index: 2;\n    outline: 0;\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); }\n  .page-link:not(:disabled):not(.disabled) {\n    cursor: pointer; }\n\n.page-item:first-child .page-link {\n  margin-left: 0;\n  border-top-left-radius: 0.25rem;\n  border-bottom-left-radius: 0.25rem; }\n\n.page-item:last-child .page-link {\n  border-top-right-radius: 0.25rem;\n  border-bottom-right-radius: 0.25rem; }\n\n.page-item.active .page-link {\n  z-index: 1;\n  color: #fff;\n  background-color: #007bff;\n  border-color: #007bff; }\n\n.page-item.disabled .page-link {\n  color: #6c757d;\n  pointer-events: none;\n  cursor: auto;\n  background-color: #fff;\n  border-color: #dee2e6; }\n\n.pagination-lg .page-link {\n  padding: 0.75rem 1.5rem;\n  font-size: 1.25rem;\n  line-height: 1.5; }\n\n.pagination-lg .page-item:first-child .page-link {\n  border-top-left-radius: 0.3rem;\n  border-bottom-left-radius: 0.3rem; }\n\n.pagination-lg .page-item:last-child .page-link {\n  border-top-right-radius: 0.3rem;\n  border-bottom-right-radius: 0.3rem; }\n\n.pagination-sm .page-link {\n  padding: 0.25rem 0.5rem;\n  font-size: 0.875rem;\n  line-height: 1.5; }\n\n.pagination-sm .page-item:first-child .page-link {\n  border-top-left-radius: 0.2rem;\n  border-bottom-left-radius: 0.2rem; }\n\n.pagination-sm .page-item:last-child .page-link {\n  border-top-right-radius: 0.2rem;\n  border-bottom-right-radius: 0.2rem; }\n\n.badge {\n  display: inline-block;\n  padding: 0.25em 0.4em;\n  font-size: 75%;\n  font-weight: 700;\n  line-height: 1;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: 0.25rem; }\n  .badge:empty {\n    display: none; }\n\n.btn .badge {\n  position: relative;\n  top: -1px; }\n\n.badge-pill {\n  padding-right: 0.6em;\n  padding-left: 0.6em;\n  border-radius: 10rem; }\n\n.badge-primary {\n  color: #fff;\n  background-color: #007bff; }\n  .badge-primary[href]:hover, .badge-primary[href]:focus {\n    color: #fff;\n    text-decoration: none;\n    background-color: #0062cc; }\n\n.badge-secondary {\n  color: #fff;\n  background-color: #6c757d; }\n  .badge-secondary[href]:hover, .badge-secondary[href]:focus {\n    color: #fff;\n    text-decoration: none;\n    background-color: #545b62; }\n\n.badge-success {\n  color: #fff;\n  background-color: #28a745; }\n  .badge-success[href]:hover, .badge-success[href]:focus {\n    color: #fff;\n    text-decoration: none;\n    background-color: #1e7e34; }\n\n.badge-info {\n  color: #fff;\n  background-color: #17a2b8; }\n  .badge-info[href]:hover, .badge-info[href]:focus {\n    color: #fff;\n    text-decoration: none;\n    background-color: #117a8b; }\n\n.badge-warning {\n  color: #212529;\n  background-color: #ffc107; }\n  .badge-warning[href]:hover, .badge-warning[href]:focus {\n    color: #212529;\n    text-decoration: none;\n    background-color: #d39e00; }\n\n.badge-danger {\n  color: #fff;\n  background-color: #dc3545; }\n  .badge-danger[href]:hover, .badge-danger[href]:focus {\n    color: #fff;\n    text-decoration: none;\n    background-color: #bd2130; }\n\n.badge-light {\n  color: #212529;\n  background-color: #f8f9fa; }\n  .badge-light[href]:hover, .badge-light[href]:focus {\n    color: #212529;\n    text-decoration: none;\n    background-color: #dae0e5; }\n\n.badge-dark {\n  color: #fff;\n  background-color: #343a40; }\n  .badge-dark[href]:hover, .badge-dark[href]:focus {\n    color: #fff;\n    text-decoration: none;\n    background-color: #1d2124; }\n\n.jumbotron {\n  padding: 2rem 1rem;\n  margin-bottom: 2rem;\n  background-color: #e9ecef;\n  border-radius: 0.3rem; }\n  @media (min-width: 576px) {\n    .jumbotron {\n      padding: 4rem 2rem; } }\n\n.jumbotron-fluid {\n  padding-right: 0;\n  padding-left: 0;\n  border-radius: 0; }\n\n.alert {\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 1rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem; }\n\n.alert-heading {\n  color: inherit; }\n\n.alert-link {\n  font-weight: 700; }\n\n.alert-dismissible {\n  padding-right: 4rem; }\n  .alert-dismissible .close {\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 0.75rem 1.25rem;\n    color: inherit; }\n\n.alert-primary {\n  color: #004085;\n  background-color: #cce5ff;\n  border-color: #b8daff; }\n  .alert-primary hr {\n    border-top-color: #9fcdff; }\n  .alert-primary .alert-link {\n    color: #002752; }\n\n.alert-secondary {\n  color: #383d41;\n  background-color: #e2e3e5;\n  border-color: #d6d8db; }\n  .alert-secondary hr {\n    border-top-color: #c8cbcf; }\n  .alert-secondary .alert-link {\n    color: #202326; }\n\n.alert-success {\n  color: #155724;\n  background-color: #d4edda;\n  border-color: #c3e6cb; }\n  .alert-success hr {\n    border-top-color: #b1dfbb; }\n  .alert-success .alert-link {\n    color: #0b2e13; }\n\n.alert-info {\n  color: #0c5460;\n  background-color: #d1ecf1;\n  border-color: #bee5eb; }\n  .alert-info hr {\n    border-top-color: #abdde5; }\n  .alert-info .alert-link {\n    color: #062c33; }\n\n.alert-warning {\n  color: #856404;\n  background-color: #fff3cd;\n  border-color: #ffeeba; }\n  .alert-warning hr {\n    border-top-color: #ffe8a1; }\n  .alert-warning .alert-link {\n    color: #533f03; }\n\n.alert-danger {\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb; }\n  .alert-danger hr {\n    border-top-color: #f1b0b7; }\n  .alert-danger .alert-link {\n    color: #491217; }\n\n.alert-light {\n  color: #818182;\n  background-color: #fefefe;\n  border-color: #fdfdfe; }\n  .alert-light hr {\n    border-top-color: #ececf6; }\n  .alert-light .alert-link {\n    color: #686868; }\n\n.alert-dark {\n  color: #1b1e21;\n  background-color: #d6d8d9;\n  border-color: #c6c8ca; }\n  .alert-dark hr {\n    border-top-color: #b9bbbe; }\n  .alert-dark .alert-link {\n    color: #040505; }\n\n@keyframes progress-bar-stripes {\n  from {\n    background-position: 1rem 0; }\n  to {\n    background-position: 0 0; } }\n\n.progress {\n  display: flex;\n  height: 1rem;\n  overflow: hidden;\n  font-size: 0.75rem;\n  background-color: #e9ecef;\n  border-radius: 0.25rem; }\n\n.progress-bar {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  text-align: center;\n  white-space: nowrap;\n  background-color: #007bff;\n  transition: width 0.6s ease; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .progress-bar {\n      transition: none; } }\n\n.progress-bar-striped {\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-size: 1rem 1rem; }\n\n.progress-bar-animated {\n  animation: progress-bar-stripes 1s linear infinite; }\n\n.media {\n  display: flex;\n  align-items: flex-start; }\n\n.media-body {\n  flex: 1; }\n\n.list-group {\n  display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  margin-bottom: 0; }\n\n.list-group-item-action {\n  width: 100%;\n  color: #495057;\n  text-align: inherit; }\n  .list-group-item-action:hover, .list-group-item-action:focus {\n    color: #495057;\n    text-decoration: none;\n    background-color: #f8f9fa; }\n  .list-group-item-action:active {\n    color: #212529;\n    background-color: #e9ecef; }\n\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: -1px;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.125); }\n  .list-group-item:first-child {\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem; }\n  .list-group-item:last-child {\n    margin-bottom: 0;\n    border-bottom-right-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem; }\n  .list-group-item:hover, .list-group-item:focus {\n    z-index: 1;\n    text-decoration: none; }\n  .list-group-item.disabled, .list-group-item:disabled {\n    color: #6c757d;\n    background-color: #fff; }\n  .list-group-item.active {\n    z-index: 2;\n    color: #fff;\n    background-color: #007bff;\n    border-color: #007bff; }\n\n.list-group-flush .list-group-item {\n  border-right: 0;\n  border-left: 0;\n  border-radius: 0; }\n\n.list-group-flush:first-child .list-group-item:first-child {\n  border-top: 0; }\n\n.list-group-flush:last-child .list-group-item:last-child {\n  border-bottom: 0; }\n\n.list-group-item-primary {\n  color: #004085;\n  background-color: #b8daff; }\n  .list-group-item-primary.list-group-item-action:hover, .list-group-item-primary.list-group-item-action:focus {\n    color: #004085;\n    background-color: #9fcdff; }\n  .list-group-item-primary.list-group-item-action.active {\n    color: #fff;\n    background-color: #004085;\n    border-color: #004085; }\n\n.list-group-item-secondary {\n  color: #383d41;\n  background-color: #d6d8db; }\n  .list-group-item-secondary.list-group-item-action:hover, .list-group-item-secondary.list-group-item-action:focus {\n    color: #383d41;\n    background-color: #c8cbcf; }\n  .list-group-item-secondary.list-group-item-action.active {\n    color: #fff;\n    background-color: #383d41;\n    border-color: #383d41; }\n\n.list-group-item-success {\n  color: #155724;\n  background-color: #c3e6cb; }\n  .list-group-item-success.list-group-item-action:hover, .list-group-item-success.list-group-item-action:focus {\n    color: #155724;\n    background-color: #b1dfbb; }\n  .list-group-item-success.list-group-item-action.active {\n    color: #fff;\n    background-color: #155724;\n    border-color: #155724; }\n\n.list-group-item-info {\n  color: #0c5460;\n  background-color: #bee5eb; }\n  .list-group-item-info.list-group-item-action:hover, .list-group-item-info.list-group-item-action:focus {\n    color: #0c5460;\n    background-color: #abdde5; }\n  .list-group-item-info.list-group-item-action.active {\n    color: #fff;\n    background-color: #0c5460;\n    border-color: #0c5460; }\n\n.list-group-item-warning {\n  color: #856404;\n  background-color: #ffeeba; }\n  .list-group-item-warning.list-group-item-action:hover, .list-group-item-warning.list-group-item-action:focus {\n    color: #856404;\n    background-color: #ffe8a1; }\n  .list-group-item-warning.list-group-item-action.active {\n    color: #fff;\n    background-color: #856404;\n    border-color: #856404; }\n\n.list-group-item-danger {\n  color: #721c24;\n  background-color: #f5c6cb; }\n  .list-group-item-danger.list-group-item-action:hover, .list-group-item-danger.list-group-item-action:focus {\n    color: #721c24;\n    background-color: #f1b0b7; }\n  .list-group-item-danger.list-group-item-action.active {\n    color: #fff;\n    background-color: #721c24;\n    border-color: #721c24; }\n\n.list-group-item-light {\n  color: #818182;\n  background-color: #fdfdfe; }\n  .list-group-item-light.list-group-item-action:hover, .list-group-item-light.list-group-item-action:focus {\n    color: #818182;\n    background-color: #ececf6; }\n  .list-group-item-light.list-group-item-action.active {\n    color: #fff;\n    background-color: #818182;\n    border-color: #818182; }\n\n.list-group-item-dark {\n  color: #1b1e21;\n  background-color: #c6c8ca; }\n  .list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.list-group-item-action:focus {\n    color: #1b1e21;\n    background-color: #b9bbbe; }\n  .list-group-item-dark.list-group-item-action.active {\n    color: #fff;\n    background-color: #1b1e21;\n    border-color: #1b1e21; }\n\n.close {\n  float: right;\n  font-size: 1.5rem;\n  font-weight: 700;\n  line-height: 1;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: .5; }\n  .close:not(:disabled):not(.disabled) {\n    cursor: pointer; }\n    .close:not(:disabled):not(.disabled):hover, .close:not(:disabled):not(.disabled):focus {\n      color: #000;\n      text-decoration: none;\n      opacity: .75; }\n\nbutton.close {\n  padding: 0;\n  background-color: transparent;\n  border: 0;\n  -webkit-appearance: none; }\n\n.modal-open {\n  overflow: hidden; }\n\n.modal {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1050;\n  display: none;\n  overflow: hidden;\n  outline: 0; }\n  .modal-open .modal {\n    overflow-x: hidden;\n    overflow-y: auto; }\n\n.modal-dialog {\n  position: relative;\n  width: auto;\n  margin: 0.5rem;\n  pointer-events: none; }\n  .modal.fade .modal-dialog {\n    transition: transform 0.3s ease-out;\n    transform: translate(0, -25%); }\n    @media screen and (prefers-reduced-motion: reduce) {\n      .modal.fade .modal-dialog {\n        transition: none; } }\n  .modal.show .modal-dialog {\n    transform: translate(0, 0); }\n\n.modal-dialog-centered {\n  display: flex;\n  align-items: center;\n  min-height: calc(100% - (0.5rem * 2)); }\n\n.modal-content {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  pointer-events: auto;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0.3rem;\n  outline: 0; }\n\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1040;\n  background-color: #000; }\n  .modal-backdrop.fade {\n    opacity: 0; }\n  .modal-backdrop.show {\n    opacity: 0.5; }\n\n.modal-header {\n  display: flex;\n  align-items: flex-start;\n  justify-content: space-between;\n  padding: 1rem;\n  border-bottom: 1px solid #e9ecef;\n  border-top-left-radius: 0.3rem;\n  border-top-right-radius: 0.3rem; }\n  .modal-header .close {\n    padding: 1rem;\n    margin: -1rem -1rem -1rem auto; }\n\n.modal-title {\n  margin-bottom: 0;\n  line-height: 1.5; }\n\n.modal-body {\n  position: relative;\n  flex: 1 1 auto;\n  padding: 1rem; }\n\n.modal-footer {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 1rem;\n  border-top: 1px solid #e9ecef; }\n  .modal-footer > :not(:first-child) {\n    margin-left: .25rem; }\n  .modal-footer > :not(:last-child) {\n    margin-right: .25rem; }\n\n.modal-scrollbar-measure {\n  position: absolute;\n  top: -9999px;\n  width: 50px;\n  height: 50px;\n  overflow: scroll; }\n\n@media (min-width: 576px) {\n  .modal-dialog {\n    max-width: 500px;\n    margin: 1.75rem auto; }\n  .modal-dialog-centered {\n    min-height: calc(100% - (1.75rem * 2)); }\n  .modal-sm {\n    max-width: 300px; } }\n\n@media (min-width: 992px) {\n  .modal-lg {\n    max-width: 800px; } }\n\n.tooltip {\n  position: absolute;\n  z-index: 1070;\n  display: block;\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  letter-spacing: normal;\n  word-break: normal;\n  word-spacing: normal;\n  white-space: normal;\n  line-break: auto;\n  font-size: 0.875rem;\n  word-wrap: break-word;\n  opacity: 0; }\n  .tooltip.show {\n    opacity: 0.9; }\n  .tooltip .arrow {\n    position: absolute;\n    display: block;\n    width: 0.8rem;\n    height: 0.4rem; }\n    .tooltip .arrow::before {\n      position: absolute;\n      content: "";\n      border-color: transparent;\n      border-style: solid; }\n\n.bs-tooltip-top, .bs-tooltip-auto[x-placement^="top"] {\n  padding: 0.4rem 0; }\n  .bs-tooltip-top .arrow, .bs-tooltip-auto[x-placement^="top"] .arrow {\n    bottom: 0; }\n    .bs-tooltip-top .arrow::before, .bs-tooltip-auto[x-placement^="top"] .arrow::before {\n      top: 0;\n      border-width: 0.4rem 0.4rem 0;\n      border-top-color: #000; }\n\n.bs-tooltip-right, .bs-tooltip-auto[x-placement^="right"] {\n  padding: 0 0.4rem; }\n  .bs-tooltip-right .arrow, .bs-tooltip-auto[x-placement^="right"] .arrow {\n    left: 0;\n    width: 0.4rem;\n    height: 0.8rem; }\n    .bs-tooltip-right .arrow::before, .bs-tooltip-auto[x-placement^="right"] .arrow::before {\n      right: 0;\n      border-width: 0.4rem 0.4rem 0.4rem 0;\n      border-right-color: #000; }\n\n.bs-tooltip-bottom, .bs-tooltip-auto[x-placement^="bottom"] {\n  padding: 0.4rem 0; }\n  .bs-tooltip-bottom .arrow, .bs-tooltip-auto[x-placement^="bottom"] .arrow {\n    top: 0; }\n    .bs-tooltip-bottom .arrow::before, .bs-tooltip-auto[x-placement^="bottom"] .arrow::before {\n      bottom: 0;\n      border-width: 0 0.4rem 0.4rem;\n      border-bottom-color: #000; }\n\n.bs-tooltip-left, .bs-tooltip-auto[x-placement^="left"] {\n  padding: 0 0.4rem; }\n  .bs-tooltip-left .arrow, .bs-tooltip-auto[x-placement^="left"] .arrow {\n    right: 0;\n    width: 0.4rem;\n    height: 0.8rem; }\n    .bs-tooltip-left .arrow::before, .bs-tooltip-auto[x-placement^="left"] .arrow::before {\n      left: 0;\n      border-width: 0.4rem 0 0.4rem 0.4rem;\n      border-left-color: #000; }\n\n.tooltip-inner {\n  max-width: 200px;\n  padding: 0.25rem 0.5rem;\n  color: #fff;\n  text-align: center;\n  background-color: #000;\n  border-radius: 0.25rem; }\n\n.popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1060;\n  display: block;\n  max-width: 276px;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  letter-spacing: normal;\n  word-break: normal;\n  word-spacing: normal;\n  white-space: normal;\n  line-break: auto;\n  font-size: 0.875rem;\n  word-wrap: break-word;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 0.3rem; }\n  .popover .arrow {\n    position: absolute;\n    display: block;\n    width: 1rem;\n    height: 0.5rem;\n    margin: 0 0.3rem; }\n    .popover .arrow::before, .popover .arrow::after {\n      position: absolute;\n      display: block;\n      content: "";\n      border-color: transparent;\n      border-style: solid; }\n\n.bs-popover-top, .bs-popover-auto[x-placement^="top"] {\n  margin-bottom: 0.5rem; }\n  .bs-popover-top .arrow, .bs-popover-auto[x-placement^="top"] .arrow {\n    bottom: calc((0.5rem + 1px) * -1); }\n  .bs-popover-top .arrow::before, .bs-popover-auto[x-placement^="top"] .arrow::before,\n  .bs-popover-top .arrow::after,\n  .bs-popover-auto[x-placement^="top"] .arrow::after {\n    border-width: 0.5rem 0.5rem 0; }\n  .bs-popover-top .arrow::before, .bs-popover-auto[x-placement^="top"] .arrow::before {\n    bottom: 0;\n    border-top-color: rgba(0, 0, 0, 0.25); }\n  \n  .bs-popover-top .arrow::after,\n  .bs-popover-auto[x-placement^="top"] .arrow::after {\n    bottom: 1px;\n    border-top-color: #fff; }\n\n.bs-popover-right, .bs-popover-auto[x-placement^="right"] {\n  margin-left: 0.5rem; }\n  .bs-popover-right .arrow, .bs-popover-auto[x-placement^="right"] .arrow {\n    left: calc((0.5rem + 1px) * -1);\n    width: 0.5rem;\n    height: 1rem;\n    margin: 0.3rem 0; }\n  .bs-popover-right .arrow::before, .bs-popover-auto[x-placement^="right"] .arrow::before,\n  .bs-popover-right .arrow::after,\n  .bs-popover-auto[x-placement^="right"] .arrow::after {\n    border-width: 0.5rem 0.5rem 0.5rem 0; }\n  .bs-popover-right .arrow::before, .bs-popover-auto[x-placement^="right"] .arrow::before {\n    left: 0;\n    border-right-color: rgba(0, 0, 0, 0.25); }\n  \n  .bs-popover-right .arrow::after,\n  .bs-popover-auto[x-placement^="right"] .arrow::after {\n    left: 1px;\n    border-right-color: #fff; }\n\n.bs-popover-bottom, .bs-popover-auto[x-placement^="bottom"] {\n  margin-top: 0.5rem; }\n  .bs-popover-bottom .arrow, .bs-popover-auto[x-placement^="bottom"] .arrow {\n    top: calc((0.5rem + 1px) * -1); }\n  .bs-popover-bottom .arrow::before, .bs-popover-auto[x-placement^="bottom"] .arrow::before,\n  .bs-popover-bottom .arrow::after,\n  .bs-popover-auto[x-placement^="bottom"] .arrow::after {\n    border-width: 0 0.5rem 0.5rem 0.5rem; }\n  .bs-popover-bottom .arrow::before, .bs-popover-auto[x-placement^="bottom"] .arrow::before {\n    top: 0;\n    border-bottom-color: rgba(0, 0, 0, 0.25); }\n  \n  .bs-popover-bottom .arrow::after,\n  .bs-popover-auto[x-placement^="bottom"] .arrow::after {\n    top: 1px;\n    border-bottom-color: #fff; }\n  .bs-popover-bottom .popover-header::before, .bs-popover-auto[x-placement^="bottom"] .popover-header::before {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    display: block;\n    width: 1rem;\n    margin-left: -0.5rem;\n    content: "";\n    border-bottom: 1px solid #f7f7f7; }\n\n.bs-popover-left, .bs-popover-auto[x-placement^="left"] {\n  margin-right: 0.5rem; }\n  .bs-popover-left .arrow, .bs-popover-auto[x-placement^="left"] .arrow {\n    right: calc((0.5rem + 1px) * -1);\n    width: 0.5rem;\n    height: 1rem;\n    margin: 0.3rem 0; }\n  .bs-popover-left .arrow::before, .bs-popover-auto[x-placement^="left"] .arrow::before,\n  .bs-popover-left .arrow::after,\n  .bs-popover-auto[x-placement^="left"] .arrow::after {\n    border-width: 0.5rem 0 0.5rem 0.5rem; }\n  .bs-popover-left .arrow::before, .bs-popover-auto[x-placement^="left"] .arrow::before {\n    right: 0;\n    border-left-color: rgba(0, 0, 0, 0.25); }\n  \n  .bs-popover-left .arrow::after,\n  .bs-popover-auto[x-placement^="left"] .arrow::after {\n    right: 1px;\n    border-left-color: #fff; }\n\n.popover-header {\n  padding: 0.5rem 0.75rem;\n  margin-bottom: 0;\n  font-size: 1rem;\n  color: inherit;\n  background-color: #f7f7f7;\n  border-bottom: 1px solid #ebebeb;\n  border-top-left-radius: calc(0.3rem - 1px);\n  border-top-right-radius: calc(0.3rem - 1px); }\n  .popover-header:empty {\n    display: none; }\n\n.popover-body {\n  padding: 0.5rem 0.75rem;\n  color: #212529; }\n\n.carousel {\n  position: relative; }\n\n.carousel-inner {\n  position: relative;\n  width: 100%;\n  overflow: hidden; }\n\n.carousel-item {\n  position: relative;\n  display: none;\n  align-items: center;\n  width: 100%;\n  backface-visibility: hidden;\n  perspective: 1000px; }\n\n.carousel-item.active,\n.carousel-item-next,\n.carousel-item-prev {\n  display: block;\n  transition: transform 0.6s ease; }\n  @media screen and (prefers-reduced-motion: reduce) {\n    .carousel-item.active,\n    .carousel-item-next,\n    .carousel-item-prev {\n      transition: none; } }\n\n.carousel-item-next,\n.carousel-item-prev {\n  position: absolute;\n  top: 0; }\n\n.carousel-item-next.carousel-item-left,\n.carousel-item-prev.carousel-item-right {\n  transform: translateX(0); }\n  @supports (transform-style: preserve-3d) {\n    .carousel-item-next.carousel-item-left,\n    .carousel-item-prev.carousel-item-right {\n      transform: translate3d(0, 0, 0); } }\n\n.carousel-item-next,\n.active.carousel-item-right {\n  transform: translateX(100%); }\n  @supports (transform-style: preserve-3d) {\n    .carousel-item-next,\n    .active.carousel-item-right {\n      transform: translate3d(100%, 0, 0); } }\n\n.carousel-item-prev,\n.active.carousel-item-left {\n  transform: translateX(-100%); }\n  @supports (transform-style: preserve-3d) {\n    .carousel-item-prev,\n    .active.carousel-item-left {\n      transform: translate3d(-100%, 0, 0); } }\n\n.carousel-fade .carousel-item {\n  opacity: 0;\n  transition-duration: .6s;\n  transition-property: opacity; }\n\n.carousel-fade .carousel-item.active,\n.carousel-fade .carousel-item-next.carousel-item-left,\n.carousel-fade .carousel-item-prev.carousel-item-right {\n  opacity: 1; }\n\n.carousel-fade .active.carousel-item-left,\n.carousel-fade .active.carousel-item-right {\n  opacity: 0; }\n\n.carousel-fade .carousel-item-next,\n.carousel-fade .carousel-item-prev,\n.carousel-fade .carousel-item.active,\n.carousel-fade .active.carousel-item-left,\n.carousel-fade .active.carousel-item-prev {\n  transform: translateX(0); }\n  @supports (transform-style: preserve-3d) {\n    .carousel-fade .carousel-item-next,\n    .carousel-fade .carousel-item-prev,\n    .carousel-fade .carousel-item.active,\n    .carousel-fade .active.carousel-item-left,\n    .carousel-fade .active.carousel-item-prev {\n      transform: translate3d(0, 0, 0); } }\n\n.carousel-control-prev,\n.carousel-control-next {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 15%;\n  color: #fff;\n  text-align: center;\n  opacity: 0.5; }\n  .carousel-control-prev:hover, .carousel-control-prev:focus,\n  .carousel-control-next:hover,\n  .carousel-control-next:focus {\n    color: #fff;\n    text-decoration: none;\n    outline: 0;\n    opacity: .9; }\n\n.carousel-control-prev {\n  left: 0; }\n\n.carousel-control-next {\n  right: 0; }\n\n.carousel-control-prev-icon,\n.carousel-control-next-icon {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  background: transparent no-repeat center center;\n  background-size: 100% 100%; }\n\n.carousel-control-prev-icon {\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' viewBox=\'0 0 8 8\'%3E%3Cpath d=\'M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z\'/%3E%3C/svg%3E"); }\n\n.carousel-control-next-icon {\n  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns=\'http://www.w3.org/2000/svg\' fill=\'%23fff\' viewBox=\'0 0 8 8\'%3E%3Cpath d=\'M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z\'/%3E%3C/svg%3E"); }\n\n.carousel-indicators {\n  position: absolute;\n  right: 0;\n  bottom: 10px;\n  left: 0;\n  z-index: 15;\n  display: flex;\n  justify-content: center;\n  padding-left: 0;\n  margin-right: 15%;\n  margin-left: 15%;\n  list-style: none; }\n  .carousel-indicators li {\n    position: relative;\n    flex: 0 1 auto;\n    width: 30px;\n    height: 3px;\n    margin-right: 3px;\n    margin-left: 3px;\n    text-indent: -999px;\n    cursor: pointer;\n    background-color: rgba(255, 255, 255, 0.5); }\n    .carousel-indicators li::before {\n      position: absolute;\n      top: -10px;\n      left: 0;\n      display: inline-block;\n      width: 100%;\n      height: 10px;\n      content: ""; }\n    .carousel-indicators li::after {\n      position: absolute;\n      bottom: -10px;\n      left: 0;\n      display: inline-block;\n      width: 100%;\n      height: 10px;\n      content: ""; }\n  .carousel-indicators .active {\n    background-color: #fff; }\n\n.carousel-caption {\n  position: absolute;\n  right: 15%;\n  bottom: 20px;\n  left: 15%;\n  z-index: 10;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: #fff;\n  text-align: center; }\n\n.align-baseline {\n  vertical-align: baseline !important; }\n\n.align-top {\n  vertical-align: top !important; }\n\n.align-middle {\n  vertical-align: middle !important; }\n\n.align-bottom {\n  vertical-align: bottom !important; }\n\n.align-text-bottom {\n  vertical-align: text-bottom !important; }\n\n.align-text-top {\n  vertical-align: text-top !important; }\n\n.bg-primary {\n  background-color: #007bff !important; }\n\na.bg-primary:hover, a.bg-primary:focus,\nbutton.bg-primary:hover,\nbutton.bg-primary:focus {\n  background-color: #0062cc !important; }\n\n.bg-secondary {\n  background-color: #6c757d !important; }\n\na.bg-secondary:hover, a.bg-secondary:focus,\nbutton.bg-secondary:hover,\nbutton.bg-secondary:focus {\n  background-color: #545b62 !important; }\n\n.bg-success {\n  background-color: #28a745 !important; }\n\na.bg-success:hover, a.bg-success:focus,\nbutton.bg-success:hover,\nbutton.bg-success:focus {\n  background-color: #1e7e34 !important; }\n\n.bg-info {\n  background-color: #17a2b8 !important; }\n\na.bg-info:hover, a.bg-info:focus,\nbutton.bg-info:hover,\nbutton.bg-info:focus {\n  background-color: #117a8b !important; }\n\n.bg-warning {\n  background-color: #ffc107 !important; }\n\na.bg-warning:hover, a.bg-warning:focus,\nbutton.bg-warning:hover,\nbutton.bg-warning:focus {\n  background-color: #d39e00 !important; }\n\n.bg-danger {\n  background-color: #dc3545 !important; }\n\na.bg-danger:hover, a.bg-danger:focus,\nbutton.bg-danger:hover,\nbutton.bg-danger:focus {\n  background-color: #bd2130 !important; }\n\n.bg-light {\n  background-color: #f8f9fa !important; }\n\na.bg-light:hover, a.bg-light:focus,\nbutton.bg-light:hover,\nbutton.bg-light:focus {\n  background-color: #dae0e5 !important; }\n\n.bg-dark {\n  background-color: #343a40 !important; }\n\na.bg-dark:hover, a.bg-dark:focus,\nbutton.bg-dark:hover,\nbutton.bg-dark:focus {\n  background-color: #1d2124 !important; }\n\n.bg-white {\n  background-color: #fff !important; }\n\n.bg-transparent {\n  background-color: transparent !important; }\n\n.border {\n  border: 1px solid #dee2e6 !important; }\n\n.border-top {\n  border-top: 1px solid #dee2e6 !important; }\n\n.border-right {\n  border-right: 1px solid #dee2e6 !important; }\n\n.border-bottom {\n  border-bottom: 1px solid #dee2e6 !important; }\n\n.border-left {\n  border-left: 1px solid #dee2e6 !important; }\n\n.border-0 {\n  border: 0 !important; }\n\n.border-top-0 {\n  border-top: 0 !important; }\n\n.border-right-0 {\n  border-right: 0 !important; }\n\n.border-bottom-0 {\n  border-bottom: 0 !important; }\n\n.border-left-0 {\n  border-left: 0 !important; }\n\n.border-primary {\n  border-color: #007bff !important; }\n\n.border-secondary {\n  border-color: #6c757d !important; }\n\n.border-success {\n  border-color: #28a745 !important; }\n\n.border-info {\n  border-color: #17a2b8 !important; }\n\n.border-warning {\n  border-color: #ffc107 !important; }\n\n.border-danger {\n  border-color: #dc3545 !important; }\n\n.border-light {\n  border-color: #f8f9fa !important; }\n\n.border-dark {\n  border-color: #343a40 !important; }\n\n.border-white {\n  border-color: #fff !important; }\n\n.rounded {\n  border-radius: 0.25rem !important; }\n\n.rounded-top {\n  border-top-left-radius: 0.25rem !important;\n  border-top-right-radius: 0.25rem !important; }\n\n.rounded-right {\n  border-top-right-radius: 0.25rem !important;\n  border-bottom-right-radius: 0.25rem !important; }\n\n.rounded-bottom {\n  border-bottom-right-radius: 0.25rem !important;\n  border-bottom-left-radius: 0.25rem !important; }\n\n.rounded-left {\n  border-top-left-radius: 0.25rem !important;\n  border-bottom-left-radius: 0.25rem !important; }\n\n.rounded-circle {\n  border-radius: 50% !important; }\n\n.rounded-0 {\n  border-radius: 0 !important; }\n\n.clearfix::after {\n  display: block;\n  clear: both;\n  content: ""; }\n\n.d-none {\n  display: none !important; }\n\n.d-inline {\n  display: inline !important; }\n\n.d-inline-block {\n  display: inline-block !important; }\n\n.d-block {\n  display: block !important; }\n\n.d-table {\n  display: table !important; }\n\n.d-table-row {\n  display: table-row !important; }\n\n.d-table-cell {\n  display: table-cell !important; }\n\n.d-flex {\n  display: flex !important; }\n\n.d-inline-flex {\n  display: inline-flex !important; }\n\n@media (min-width: 576px) {\n  .d-sm-none {\n    display: none !important; }\n  .d-sm-inline {\n    display: inline !important; }\n  .d-sm-inline-block {\n    display: inline-block !important; }\n  .d-sm-block {\n    display: block !important; }\n  .d-sm-table {\n    display: table !important; }\n  .d-sm-table-row {\n    display: table-row !important; }\n  .d-sm-table-cell {\n    display: table-cell !important; }\n  .d-sm-flex {\n    display: flex !important; }\n  .d-sm-inline-flex {\n    display: inline-flex !important; } }\n\n@media (min-width: 768px) {\n  .d-md-none {\n    display: none !important; }\n  .d-md-inline {\n    display: inline !important; }\n  .d-md-inline-block {\n    display: inline-block !important; }\n  .d-md-block {\n    display: block !important; }\n  .d-md-table {\n    display: table !important; }\n  .d-md-table-row {\n    display: table-row !important; }\n  .d-md-table-cell {\n    display: table-cell !important; }\n  .d-md-flex {\n    display: flex !important; }\n  .d-md-inline-flex {\n    display: inline-flex !important; } }\n\n@media (min-width: 992px) {\n  .d-lg-none {\n    display: none !important; }\n  .d-lg-inline {\n    display: inline !important; }\n  .d-lg-inline-block {\n    display: inline-block !important; }\n  .d-lg-block {\n    display: block !important; }\n  .d-lg-table {\n    display: table !important; }\n  .d-lg-table-row {\n    display: table-row !important; }\n  .d-lg-table-cell {\n    display: table-cell !important; }\n  .d-lg-flex {\n    display: flex !important; }\n  .d-lg-inline-flex {\n    display: inline-flex !important; } }\n\n@media (min-width: 1200px) {\n  .d-xl-none {\n    display: none !important; }\n  .d-xl-inline {\n    display: inline !important; }\n  .d-xl-inline-block {\n    display: inline-block !important; }\n  .d-xl-block {\n    display: block !important; }\n  .d-xl-table {\n    display: table !important; }\n  .d-xl-table-row {\n    display: table-row !important; }\n  .d-xl-table-cell {\n    display: table-cell !important; }\n  .d-xl-flex {\n    display: flex !important; }\n  .d-xl-inline-flex {\n    display: inline-flex !important; } }\n\n@media print {\n  .d-print-none {\n    display: none !important; }\n  .d-print-inline {\n    display: inline !important; }\n  .d-print-inline-block {\n    display: inline-block !important; }\n  .d-print-block {\n    display: block !important; }\n  .d-print-table {\n    display: table !important; }\n  .d-print-table-row {\n    display: table-row !important; }\n  .d-print-table-cell {\n    display: table-cell !important; }\n  .d-print-flex {\n    display: flex !important; }\n  .d-print-inline-flex {\n    display: inline-flex !important; } }\n\n.embed-responsive {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: 0;\n  overflow: hidden; }\n  .embed-responsive::before {\n    display: block;\n    content: ""; }\n  .embed-responsive .embed-responsive-item,\n  .embed-responsive iframe,\n  .embed-responsive embed,\n  .embed-responsive object,\n  .embed-responsive video {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: 0; }\n\n.embed-responsive-21by9::before {\n  padding-top: 42.85714%; }\n\n.embed-responsive-16by9::before {\n  padding-top: 56.25%; }\n\n.embed-responsive-4by3::before {\n  padding-top: 75%; }\n\n.embed-responsive-1by1::before {\n  padding-top: 100%; }\n\n.flex-row {\n  flex-direction: row !important; }\n\n.flex-column {\n  flex-direction: column !important; }\n\n.flex-row-reverse {\n  flex-direction: row-reverse !important; }\n\n.flex-column-reverse {\n  flex-direction: column-reverse !important; }\n\n.flex-wrap {\n  flex-wrap: wrap !important; }\n\n.flex-nowrap {\n  flex-wrap: nowrap !important; }\n\n.flex-wrap-reverse {\n  flex-wrap: wrap-reverse !important; }\n\n.flex-fill {\n  flex: 1 1 auto !important; }\n\n.flex-grow-0 {\n  flex-grow: 0 !important; }\n\n.flex-grow-1 {\n  flex-grow: 1 !important; }\n\n.flex-shrink-0 {\n  flex-shrink: 0 !important; }\n\n.flex-shrink-1 {\n  flex-shrink: 1 !important; }\n\n.justify-content-start {\n  justify-content: flex-start !important; }\n\n.justify-content-end {\n  justify-content: flex-end !important; }\n\n.justify-content-center {\n  justify-content: center !important; }\n\n.justify-content-between {\n  justify-content: space-between !important; }\n\n.justify-content-around {\n  justify-content: space-around !important; }\n\n.align-items-start {\n  align-items: flex-start !important; }\n\n.align-items-end {\n  align-items: flex-end !important; }\n\n.align-items-center {\n  align-items: center !important; }\n\n.align-items-baseline {\n  align-items: baseline !important; }\n\n.align-items-stretch {\n  align-items: stretch !important; }\n\n.align-content-start {\n  align-content: flex-start !important; }\n\n.align-content-end {\n  align-content: flex-end !important; }\n\n.align-content-center {\n  align-content: center !important; }\n\n.align-content-between {\n  align-content: space-between !important; }\n\n.align-content-around {\n  align-content: space-around !important; }\n\n.align-content-stretch {\n  align-content: stretch !important; }\n\n.align-self-auto {\n  align-self: auto !important; }\n\n.align-self-start {\n  align-self: flex-start !important; }\n\n.align-self-end {\n  align-self: flex-end !important; }\n\n.align-self-center {\n  align-self: center !important; }\n\n.align-self-baseline {\n  align-self: baseline !important; }\n\n.align-self-stretch {\n  align-self: stretch !important; }\n\n@media (min-width: 576px) {\n  .flex-sm-row {\n    flex-direction: row !important; }\n  .flex-sm-column {\n    flex-direction: column !important; }\n  .flex-sm-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-sm-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-sm-wrap {\n    flex-wrap: wrap !important; }\n  .flex-sm-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-sm-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-sm-fill {\n    flex: 1 1 auto !important; }\n  .flex-sm-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-sm-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-sm-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-sm-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-sm-start {\n    justify-content: flex-start !important; }\n  .justify-content-sm-end {\n    justify-content: flex-end !important; }\n  .justify-content-sm-center {\n    justify-content: center !important; }\n  .justify-content-sm-between {\n    justify-content: space-between !important; }\n  .justify-content-sm-around {\n    justify-content: space-around !important; }\n  .align-items-sm-start {\n    align-items: flex-start !important; }\n  .align-items-sm-end {\n    align-items: flex-end !important; }\n  .align-items-sm-center {\n    align-items: center !important; }\n  .align-items-sm-baseline {\n    align-items: baseline !important; }\n  .align-items-sm-stretch {\n    align-items: stretch !important; }\n  .align-content-sm-start {\n    align-content: flex-start !important; }\n  .align-content-sm-end {\n    align-content: flex-end !important; }\n  .align-content-sm-center {\n    align-content: center !important; }\n  .align-content-sm-between {\n    align-content: space-between !important; }\n  .align-content-sm-around {\n    align-content: space-around !important; }\n  .align-content-sm-stretch {\n    align-content: stretch !important; }\n  .align-self-sm-auto {\n    align-self: auto !important; }\n  .align-self-sm-start {\n    align-self: flex-start !important; }\n  .align-self-sm-end {\n    align-self: flex-end !important; }\n  .align-self-sm-center {\n    align-self: center !important; }\n  .align-self-sm-baseline {\n    align-self: baseline !important; }\n  .align-self-sm-stretch {\n    align-self: stretch !important; } }\n\n@media (min-width: 768px) {\n  .flex-md-row {\n    flex-direction: row !important; }\n  .flex-md-column {\n    flex-direction: column !important; }\n  .flex-md-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-md-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-md-wrap {\n    flex-wrap: wrap !important; }\n  .flex-md-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-md-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-md-fill {\n    flex: 1 1 auto !important; }\n  .flex-md-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-md-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-md-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-md-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-md-start {\n    justify-content: flex-start !important; }\n  .justify-content-md-end {\n    justify-content: flex-end !important; }\n  .justify-content-md-center {\n    justify-content: center !important; }\n  .justify-content-md-between {\n    justify-content: space-between !important; }\n  .justify-content-md-around {\n    justify-content: space-around !important; }\n  .align-items-md-start {\n    align-items: flex-start !important; }\n  .align-items-md-end {\n    align-items: flex-end !important; }\n  .align-items-md-center {\n    align-items: center !important; }\n  .align-items-md-baseline {\n    align-items: baseline !important; }\n  .align-items-md-stretch {\n    align-items: stretch !important; }\n  .align-content-md-start {\n    align-content: flex-start !important; }\n  .align-content-md-end {\n    align-content: flex-end !important; }\n  .align-content-md-center {\n    align-content: center !important; }\n  .align-content-md-between {\n    align-content: space-between !important; }\n  .align-content-md-around {\n    align-content: space-around !important; }\n  .align-content-md-stretch {\n    align-content: stretch !important; }\n  .align-self-md-auto {\n    align-self: auto !important; }\n  .align-self-md-start {\n    align-self: flex-start !important; }\n  .align-self-md-end {\n    align-self: flex-end !important; }\n  .align-self-md-center {\n    align-self: center !important; }\n  .align-self-md-baseline {\n    align-self: baseline !important; }\n  .align-self-md-stretch {\n    align-self: stretch !important; } }\n\n@media (min-width: 992px) {\n  .flex-lg-row {\n    flex-direction: row !important; }\n  .flex-lg-column {\n    flex-direction: column !important; }\n  .flex-lg-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-lg-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-lg-wrap {\n    flex-wrap: wrap !important; }\n  .flex-lg-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-lg-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-lg-fill {\n    flex: 1 1 auto !important; }\n  .flex-lg-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-lg-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-lg-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-lg-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-lg-start {\n    justify-content: flex-start !important; }\n  .justify-content-lg-end {\n    justify-content: flex-end !important; }\n  .justify-content-lg-center {\n    justify-content: center !important; }\n  .justify-content-lg-between {\n    justify-content: space-between !important; }\n  .justify-content-lg-around {\n    justify-content: space-around !important; }\n  .align-items-lg-start {\n    align-items: flex-start !important; }\n  .align-items-lg-end {\n    align-items: flex-end !important; }\n  .align-items-lg-center {\n    align-items: center !important; }\n  .align-items-lg-baseline {\n    align-items: baseline !important; }\n  .align-items-lg-stretch {\n    align-items: stretch !important; }\n  .align-content-lg-start {\n    align-content: flex-start !important; }\n  .align-content-lg-end {\n    align-content: flex-end !important; }\n  .align-content-lg-center {\n    align-content: center !important; }\n  .align-content-lg-between {\n    align-content: space-between !important; }\n  .align-content-lg-around {\n    align-content: space-around !important; }\n  .align-content-lg-stretch {\n    align-content: stretch !important; }\n  .align-self-lg-auto {\n    align-self: auto !important; }\n  .align-self-lg-start {\n    align-self: flex-start !important; }\n  .align-self-lg-end {\n    align-self: flex-end !important; }\n  .align-self-lg-center {\n    align-self: center !important; }\n  .align-self-lg-baseline {\n    align-self: baseline !important; }\n  .align-self-lg-stretch {\n    align-self: stretch !important; } }\n\n@media (min-width: 1200px) {\n  .flex-xl-row {\n    flex-direction: row !important; }\n  .flex-xl-column {\n    flex-direction: column !important; }\n  .flex-xl-row-reverse {\n    flex-direction: row-reverse !important; }\n  .flex-xl-column-reverse {\n    flex-direction: column-reverse !important; }\n  .flex-xl-wrap {\n    flex-wrap: wrap !important; }\n  .flex-xl-nowrap {\n    flex-wrap: nowrap !important; }\n  .flex-xl-wrap-reverse {\n    flex-wrap: wrap-reverse !important; }\n  .flex-xl-fill {\n    flex: 1 1 auto !important; }\n  .flex-xl-grow-0 {\n    flex-grow: 0 !important; }\n  .flex-xl-grow-1 {\n    flex-grow: 1 !important; }\n  .flex-xl-shrink-0 {\n    flex-shrink: 0 !important; }\n  .flex-xl-shrink-1 {\n    flex-shrink: 1 !important; }\n  .justify-content-xl-start {\n    justify-content: flex-start !important; }\n  .justify-content-xl-end {\n    justify-content: flex-end !important; }\n  .justify-content-xl-center {\n    justify-content: center !important; }\n  .justify-content-xl-between {\n    justify-content: space-between !important; }\n  .justify-content-xl-around {\n    justify-content: space-around !important; }\n  .align-items-xl-start {\n    align-items: flex-start !important; }\n  .align-items-xl-end {\n    align-items: flex-end !important; }\n  .align-items-xl-center {\n    align-items: center !important; }\n  .align-items-xl-baseline {\n    align-items: baseline !important; }\n  .align-items-xl-stretch {\n    align-items: stretch !important; }\n  .align-content-xl-start {\n    align-content: flex-start !important; }\n  .align-content-xl-end {\n    align-content: flex-end !important; }\n  .align-content-xl-center {\n    align-content: center !important; }\n  .align-content-xl-between {\n    align-content: space-between !important; }\n  .align-content-xl-around {\n    align-content: space-around !important; }\n  .align-content-xl-stretch {\n    align-content: stretch !important; }\n  .align-self-xl-auto {\n    align-self: auto !important; }\n  .align-self-xl-start {\n    align-self: flex-start !important; }\n  .align-self-xl-end {\n    align-self: flex-end !important; }\n  .align-self-xl-center {\n    align-self: center !important; }\n  .align-self-xl-baseline {\n    align-self: baseline !important; }\n  .align-self-xl-stretch {\n    align-self: stretch !important; } }\n\n.float-left {\n  float: left !important; }\n\n.float-right {\n  float: right !important; }\n\n.float-none {\n  float: none !important; }\n\n@media (min-width: 576px) {\n  .float-sm-left {\n    float: left !important; }\n  .float-sm-right {\n    float: right !important; }\n  .float-sm-none {\n    float: none !important; } }\n\n@media (min-width: 768px) {\n  .float-md-left {\n    float: left !important; }\n  .float-md-right {\n    float: right !important; }\n  .float-md-none {\n    float: none !important; } }\n\n@media (min-width: 992px) {\n  .float-lg-left {\n    float: left !important; }\n  .float-lg-right {\n    float: right !important; }\n  .float-lg-none {\n    float: none !important; } }\n\n@media (min-width: 1200px) {\n  .float-xl-left {\n    float: left !important; }\n  .float-xl-right {\n    float: right !important; }\n  .float-xl-none {\n    float: none !important; } }\n\n.position-static {\n  position: static !important; }\n\n.position-relative {\n  position: relative !important; }\n\n.position-absolute {\n  position: absolute !important; }\n\n.position-fixed {\n  position: fixed !important; }\n\n.position-sticky {\n  position: sticky !important; }\n\n.fixed-top {\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  z-index: 1030; }\n\n.fixed-bottom {\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1030; }\n\n@supports (position: sticky) {\n  .sticky-top {\n    position: sticky;\n    top: 0;\n    z-index: 1020; } }\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0; }\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  overflow: visible;\n  clip: auto;\n  white-space: normal; }\n\n.shadow-sm {\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important; }\n\n.shadow {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important; }\n\n.shadow-lg {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important; }\n\n.shadow-none {\n  box-shadow: none !important; }\n\n.w-25 {\n  width: 25% !important; }\n\n.w-50 {\n  width: 50% !important; }\n\n.w-75 {\n  width: 75% !important; }\n\n.w-100 {\n  width: 100% !important; }\n\n.w-auto {\n  width: auto !important; }\n\n.h-25 {\n  height: 25% !important; }\n\n.h-50 {\n  height: 50% !important; }\n\n.h-75 {\n  height: 75% !important; }\n\n.h-100 {\n  height: 100% !important; }\n\n.h-auto {\n  height: auto !important; }\n\n.mw-100 {\n  max-width: 100% !important; }\n\n.mh-100 {\n  max-height: 100% !important; }\n\n.m-0 {\n  margin: 0 !important; }\n\n.mt-0,\n.my-0 {\n  margin-top: 0 !important; }\n\n.mr-0,\n.mx-0 {\n  margin-right: 0 !important; }\n\n.mb-0,\n.my-0 {\n  margin-bottom: 0 !important; }\n\n.ml-0,\n.mx-0 {\n  margin-left: 0 !important; }\n\n.m-1 {\n  margin: 0.25rem !important; }\n\n.mt-1,\n.my-1 {\n  margin-top: 0.25rem !important; }\n\n.mr-1,\n.mx-1 {\n  margin-right: 0.25rem !important; }\n\n.mb-1,\n.my-1 {\n  margin-bottom: 0.25rem !important; }\n\n.ml-1,\n.mx-1 {\n  margin-left: 0.25rem !important; }\n\n.m-2 {\n  margin: 0.5rem !important; }\n\n.mt-2,\n.my-2 {\n  margin-top: 0.5rem !important; }\n\n.mr-2,\n.mx-2 {\n  margin-right: 0.5rem !important; }\n\n.mb-2,\n.my-2 {\n  margin-bottom: 0.5rem !important; }\n\n.ml-2,\n.mx-2 {\n  margin-left: 0.5rem !important; }\n\n.m-3 {\n  margin: 1rem !important; }\n\n.mt-3,\n.my-3 {\n  margin-top: 1rem !important; }\n\n.mr-3,\n.mx-3 {\n  margin-right: 1rem !important; }\n\n.mb-3,\n.my-3 {\n  margin-bottom: 1rem !important; }\n\n.ml-3,\n.mx-3 {\n  margin-left: 1rem !important; }\n\n.m-4 {\n  margin: 1.5rem !important; }\n\n.mt-4,\n.my-4 {\n  margin-top: 1.5rem !important; }\n\n.mr-4,\n.mx-4 {\n  margin-right: 1.5rem !important; }\n\n.mb-4,\n.my-4 {\n  margin-bottom: 1.5rem !important; }\n\n.ml-4,\n.mx-4 {\n  margin-left: 1.5rem !important; }\n\n.m-5 {\n  margin: 3rem !important; }\n\n.mt-5,\n.my-5 {\n  margin-top: 3rem !important; }\n\n.mr-5,\n.mx-5 {\n  margin-right: 3rem !important; }\n\n.mb-5,\n.my-5 {\n  margin-bottom: 3rem !important; }\n\n.ml-5,\n.mx-5 {\n  margin-left: 3rem !important; }\n\n.p-0 {\n  padding: 0 !important; }\n\n.pt-0,\n.py-0 {\n  padding-top: 0 !important; }\n\n.pr-0,\n.px-0 {\n  padding-right: 0 !important; }\n\n.pb-0,\n.py-0 {\n  padding-bottom: 0 !important; }\n\n.pl-0,\n.px-0 {\n  padding-left: 0 !important; }\n\n.p-1 {\n  padding: 0.25rem !important; }\n\n.pt-1,\n.py-1 {\n  padding-top: 0.25rem !important; }\n\n.pr-1,\n.px-1 {\n  padding-right: 0.25rem !important; }\n\n.pb-1,\n.py-1 {\n  padding-bottom: 0.25rem !important; }\n\n.pl-1,\n.px-1 {\n  padding-left: 0.25rem !important; }\n\n.p-2 {\n  padding: 0.5rem !important; }\n\n.pt-2,\n.py-2 {\n  padding-top: 0.5rem !important; }\n\n.pr-2,\n.px-2 {\n  padding-right: 0.5rem !important; }\n\n.pb-2,\n.py-2 {\n  padding-bottom: 0.5rem !important; }\n\n.pl-2,\n.px-2 {\n  padding-left: 0.5rem !important; }\n\n.p-3 {\n  padding: 1rem !important; }\n\n.pt-3,\n.py-3 {\n  padding-top: 1rem !important; }\n\n.pr-3,\n.px-3 {\n  padding-right: 1rem !important; }\n\n.pb-3,\n.py-3 {\n  padding-bottom: 1rem !important; }\n\n.pl-3,\n.px-3 {\n  padding-left: 1rem !important; }\n\n.p-4 {\n  padding: 1.5rem !important; }\n\n.pt-4,\n.py-4 {\n  padding-top: 1.5rem !important; }\n\n.pr-4,\n.px-4 {\n  padding-right: 1.5rem !important; }\n\n.pb-4,\n.py-4 {\n  padding-bottom: 1.5rem !important; }\n\n.pl-4,\n.px-4 {\n  padding-left: 1.5rem !important; }\n\n.p-5 {\n  padding: 3rem !important; }\n\n.pt-5,\n.py-5 {\n  padding-top: 3rem !important; }\n\n.pr-5,\n.px-5 {\n  padding-right: 3rem !important; }\n\n.pb-5,\n.py-5 {\n  padding-bottom: 3rem !important; }\n\n.pl-5,\n.px-5 {\n  padding-left: 3rem !important; }\n\n.m-auto {\n  margin: auto !important; }\n\n.mt-auto,\n.my-auto {\n  margin-top: auto !important; }\n\n.mr-auto,\n.mx-auto {\n  margin-right: auto !important; }\n\n.mb-auto,\n.my-auto {\n  margin-bottom: auto !important; }\n\n.ml-auto,\n.mx-auto {\n  margin-left: auto !important; }\n\n@media (min-width: 576px) {\n  .m-sm-0 {\n    margin: 0 !important; }\n  .mt-sm-0,\n  .my-sm-0 {\n    margin-top: 0 !important; }\n  .mr-sm-0,\n  .mx-sm-0 {\n    margin-right: 0 !important; }\n  .mb-sm-0,\n  .my-sm-0 {\n    margin-bottom: 0 !important; }\n  .ml-sm-0,\n  .mx-sm-0 {\n    margin-left: 0 !important; }\n  .m-sm-1 {\n    margin: 0.25rem !important; }\n  .mt-sm-1,\n  .my-sm-1 {\n    margin-top: 0.25rem !important; }\n  .mr-sm-1,\n  .mx-sm-1 {\n    margin-right: 0.25rem !important; }\n  .mb-sm-1,\n  .my-sm-1 {\n    margin-bottom: 0.25rem !important; }\n  .ml-sm-1,\n  .mx-sm-1 {\n    margin-left: 0.25rem !important; }\n  .m-sm-2 {\n    margin: 0.5rem !important; }\n  .mt-sm-2,\n  .my-sm-2 {\n    margin-top: 0.5rem !important; }\n  .mr-sm-2,\n  .mx-sm-2 {\n    margin-right: 0.5rem !important; }\n  .mb-sm-2,\n  .my-sm-2 {\n    margin-bottom: 0.5rem !important; }\n  .ml-sm-2,\n  .mx-sm-2 {\n    margin-left: 0.5rem !important; }\n  .m-sm-3 {\n    margin: 1rem !important; }\n  .mt-sm-3,\n  .my-sm-3 {\n    margin-top: 1rem !important; }\n  .mr-sm-3,\n  .mx-sm-3 {\n    margin-right: 1rem !important; }\n  .mb-sm-3,\n  .my-sm-3 {\n    margin-bottom: 1rem !important; }\n  .ml-sm-3,\n  .mx-sm-3 {\n    margin-left: 1rem !important; }\n  .m-sm-4 {\n    margin: 1.5rem !important; }\n  .mt-sm-4,\n  .my-sm-4 {\n    margin-top: 1.5rem !important; }\n  .mr-sm-4,\n  .mx-sm-4 {\n    margin-right: 1.5rem !important; }\n  .mb-sm-4,\n  .my-sm-4 {\n    margin-bottom: 1.5rem !important; }\n  .ml-sm-4,\n  .mx-sm-4 {\n    margin-left: 1.5rem !important; }\n  .m-sm-5 {\n    margin: 3rem !important; }\n  .mt-sm-5,\n  .my-sm-5 {\n    margin-top: 3rem !important; }\n  .mr-sm-5,\n  .mx-sm-5 {\n    margin-right: 3rem !important; }\n  .mb-sm-5,\n  .my-sm-5 {\n    margin-bottom: 3rem !important; }\n  .ml-sm-5,\n  .mx-sm-5 {\n    margin-left: 3rem !important; }\n  .p-sm-0 {\n    padding: 0 !important; }\n  .pt-sm-0,\n  .py-sm-0 {\n    padding-top: 0 !important; }\n  .pr-sm-0,\n  .px-sm-0 {\n    padding-right: 0 !important; }\n  .pb-sm-0,\n  .py-sm-0 {\n    padding-bottom: 0 !important; }\n  .pl-sm-0,\n  .px-sm-0 {\n    padding-left: 0 !important; }\n  .p-sm-1 {\n    padding: 0.25rem !important; }\n  .pt-sm-1,\n  .py-sm-1 {\n    padding-top: 0.25rem !important; }\n  .pr-sm-1,\n  .px-sm-1 {\n    padding-right: 0.25rem !important; }\n  .pb-sm-1,\n  .py-sm-1 {\n    padding-bottom: 0.25rem !important; }\n  .pl-sm-1,\n  .px-sm-1 {\n    padding-left: 0.25rem !important; }\n  .p-sm-2 {\n    padding: 0.5rem !important; }\n  .pt-sm-2,\n  .py-sm-2 {\n    padding-top: 0.5rem !important; }\n  .pr-sm-2,\n  .px-sm-2 {\n    padding-right: 0.5rem !important; }\n  .pb-sm-2,\n  .py-sm-2 {\n    padding-bottom: 0.5rem !important; }\n  .pl-sm-2,\n  .px-sm-2 {\n    padding-left: 0.5rem !important; }\n  .p-sm-3 {\n    padding: 1rem !important; }\n  .pt-sm-3,\n  .py-sm-3 {\n    padding-top: 1rem !important; }\n  .pr-sm-3,\n  .px-sm-3 {\n    padding-right: 1rem !important; }\n  .pb-sm-3,\n  .py-sm-3 {\n    padding-bottom: 1rem !important; }\n  .pl-sm-3,\n  .px-sm-3 {\n    padding-left: 1rem !important; }\n  .p-sm-4 {\n    padding: 1.5rem !important; }\n  .pt-sm-4,\n  .py-sm-4 {\n    padding-top: 1.5rem !important; }\n  .pr-sm-4,\n  .px-sm-4 {\n    padding-right: 1.5rem !important; }\n  .pb-sm-4,\n  .py-sm-4 {\n    padding-bottom: 1.5rem !important; }\n  .pl-sm-4,\n  .px-sm-4 {\n    padding-left: 1.5rem !important; }\n  .p-sm-5 {\n    padding: 3rem !important; }\n  .pt-sm-5,\n  .py-sm-5 {\n    padding-top: 3rem !important; }\n  .pr-sm-5,\n  .px-sm-5 {\n    padding-right: 3rem !important; }\n  .pb-sm-5,\n  .py-sm-5 {\n    padding-bottom: 3rem !important; }\n  .pl-sm-5,\n  .px-sm-5 {\n    padding-left: 3rem !important; }\n  .m-sm-auto {\n    margin: auto !important; }\n  .mt-sm-auto,\n  .my-sm-auto {\n    margin-top: auto !important; }\n  .mr-sm-auto,\n  .mx-sm-auto {\n    margin-right: auto !important; }\n  .mb-sm-auto,\n  .my-sm-auto {\n    margin-bottom: auto !important; }\n  .ml-sm-auto,\n  .mx-sm-auto {\n    margin-left: auto !important; } }\n\n@media (min-width: 768px) {\n  .m-md-0 {\n    margin: 0 !important; }\n  .mt-md-0,\n  .my-md-0 {\n    margin-top: 0 !important; }\n  .mr-md-0,\n  .mx-md-0 {\n    margin-right: 0 !important; }\n  .mb-md-0,\n  .my-md-0 {\n    margin-bottom: 0 !important; }\n  .ml-md-0,\n  .mx-md-0 {\n    margin-left: 0 !important; }\n  .m-md-1 {\n    margin: 0.25rem !important; }\n  .mt-md-1,\n  .my-md-1 {\n    margin-top: 0.25rem !important; }\n  .mr-md-1,\n  .mx-md-1 {\n    margin-right: 0.25rem !important; }\n  .mb-md-1,\n  .my-md-1 {\n    margin-bottom: 0.25rem !important; }\n  .ml-md-1,\n  .mx-md-1 {\n    margin-left: 0.25rem !important; }\n  .m-md-2 {\n    margin: 0.5rem !important; }\n  .mt-md-2,\n  .my-md-2 {\n    margin-top: 0.5rem !important; }\n  .mr-md-2,\n  .mx-md-2 {\n    margin-right: 0.5rem !important; }\n  .mb-md-2,\n  .my-md-2 {\n    margin-bottom: 0.5rem !important; }\n  .ml-md-2,\n  .mx-md-2 {\n    margin-left: 0.5rem !important; }\n  .m-md-3 {\n    margin: 1rem !important; }\n  .mt-md-3,\n  .my-md-3 {\n    margin-top: 1rem !important; }\n  .mr-md-3,\n  .mx-md-3 {\n    margin-right: 1rem !important; }\n  .mb-md-3,\n  .my-md-3 {\n    margin-bottom: 1rem !important; }\n  .ml-md-3,\n  .mx-md-3 {\n    margin-left: 1rem !important; }\n  .m-md-4 {\n    margin: 1.5rem !important; }\n  .mt-md-4,\n  .my-md-4 {\n    margin-top: 1.5rem !important; }\n  .mr-md-4,\n  .mx-md-4 {\n    margin-right: 1.5rem !important; }\n  .mb-md-4,\n  .my-md-4 {\n    margin-bottom: 1.5rem !important; }\n  .ml-md-4,\n  .mx-md-4 {\n    margin-left: 1.5rem !important; }\n  .m-md-5 {\n    margin: 3rem !important; }\n  .mt-md-5,\n  .my-md-5 {\n    margin-top: 3rem !important; }\n  .mr-md-5,\n  .mx-md-5 {\n    margin-right: 3rem !important; }\n  .mb-md-5,\n  .my-md-5 {\n    margin-bottom: 3rem !important; }\n  .ml-md-5,\n  .mx-md-5 {\n    margin-left: 3rem !important; }\n  .p-md-0 {\n    padding: 0 !important; }\n  .pt-md-0,\n  .py-md-0 {\n    padding-top: 0 !important; }\n  .pr-md-0,\n  .px-md-0 {\n    padding-right: 0 !important; }\n  .pb-md-0,\n  .py-md-0 {\n    padding-bottom: 0 !important; }\n  .pl-md-0,\n  .px-md-0 {\n    padding-left: 0 !important; }\n  .p-md-1 {\n    padding: 0.25rem !important; }\n  .pt-md-1,\n  .py-md-1 {\n    padding-top: 0.25rem !important; }\n  .pr-md-1,\n  .px-md-1 {\n    padding-right: 0.25rem !important; }\n  .pb-md-1,\n  .py-md-1 {\n    padding-bottom: 0.25rem !important; }\n  .pl-md-1,\n  .px-md-1 {\n    padding-left: 0.25rem !important; }\n  .p-md-2 {\n    padding: 0.5rem !important; }\n  .pt-md-2,\n  .py-md-2 {\n    padding-top: 0.5rem !important; }\n  .pr-md-2,\n  .px-md-2 {\n    padding-right: 0.5rem !important; }\n  .pb-md-2,\n  .py-md-2 {\n    padding-bottom: 0.5rem !important; }\n  .pl-md-2,\n  .px-md-2 {\n    padding-left: 0.5rem !important; }\n  .p-md-3 {\n    padding: 1rem !important; }\n  .pt-md-3,\n  .py-md-3 {\n    padding-top: 1rem !important; }\n  .pr-md-3,\n  .px-md-3 {\n    padding-right: 1rem !important; }\n  .pb-md-3,\n  .py-md-3 {\n    padding-bottom: 1rem !important; }\n  .pl-md-3,\n  .px-md-3 {\n    padding-left: 1rem !important; }\n  .p-md-4 {\n    padding: 1.5rem !important; }\n  .pt-md-4,\n  .py-md-4 {\n    padding-top: 1.5rem !important; }\n  .pr-md-4,\n  .px-md-4 {\n    padding-right: 1.5rem !important; }\n  .pb-md-4,\n  .py-md-4 {\n    padding-bottom: 1.5rem !important; }\n  .pl-md-4,\n  .px-md-4 {\n    padding-left: 1.5rem !important; }\n  .p-md-5 {\n    padding: 3rem !important; }\n  .pt-md-5,\n  .py-md-5 {\n    padding-top: 3rem !important; }\n  .pr-md-5,\n  .px-md-5 {\n    padding-right: 3rem !important; }\n  .pb-md-5,\n  .py-md-5 {\n    padding-bottom: 3rem !important; }\n  .pl-md-5,\n  .px-md-5 {\n    padding-left: 3rem !important; }\n  .m-md-auto {\n    margin: auto !important; }\n  .mt-md-auto,\n  .my-md-auto {\n    margin-top: auto !important; }\n  .mr-md-auto,\n  .mx-md-auto {\n    margin-right: auto !important; }\n  .mb-md-auto,\n  .my-md-auto {\n    margin-bottom: auto !important; }\n  .ml-md-auto,\n  .mx-md-auto {\n    margin-left: auto !important; } }\n\n@media (min-width: 992px) {\n  .m-lg-0 {\n    margin: 0 !important; }\n  .mt-lg-0,\n  .my-lg-0 {\n    margin-top: 0 !important; }\n  .mr-lg-0,\n  .mx-lg-0 {\n    margin-right: 0 !important; }\n  .mb-lg-0,\n  .my-lg-0 {\n    margin-bottom: 0 !important; }\n  .ml-lg-0,\n  .mx-lg-0 {\n    margin-left: 0 !important; }\n  .m-lg-1 {\n    margin: 0.25rem !important; }\n  .mt-lg-1,\n  .my-lg-1 {\n    margin-top: 0.25rem !important; }\n  .mr-lg-1,\n  .mx-lg-1 {\n    margin-right: 0.25rem !important; }\n  .mb-lg-1,\n  .my-lg-1 {\n    margin-bottom: 0.25rem !important; }\n  .ml-lg-1,\n  .mx-lg-1 {\n    margin-left: 0.25rem !important; }\n  .m-lg-2 {\n    margin: 0.5rem !important; }\n  .mt-lg-2,\n  .my-lg-2 {\n    margin-top: 0.5rem !important; }\n  .mr-lg-2,\n  .mx-lg-2 {\n    margin-right: 0.5rem !important; }\n  .mb-lg-2,\n  .my-lg-2 {\n    margin-bottom: 0.5rem !important; }\n  .ml-lg-2,\n  .mx-lg-2 {\n    margin-left: 0.5rem !important; }\n  .m-lg-3 {\n    margin: 1rem !important; }\n  .mt-lg-3,\n  .my-lg-3 {\n    margin-top: 1rem !important; }\n  .mr-lg-3,\n  .mx-lg-3 {\n    margin-right: 1rem !important; }\n  .mb-lg-3,\n  .my-lg-3 {\n    margin-bottom: 1rem !important; }\n  .ml-lg-3,\n  .mx-lg-3 {\n    margin-left: 1rem !important; }\n  .m-lg-4 {\n    margin: 1.5rem !important; }\n  .mt-lg-4,\n  .my-lg-4 {\n    margin-top: 1.5rem !important; }\n  .mr-lg-4,\n  .mx-lg-4 {\n    margin-right: 1.5rem !important; }\n  .mb-lg-4,\n  .my-lg-4 {\n    margin-bottom: 1.5rem !important; }\n  .ml-lg-4,\n  .mx-lg-4 {\n    margin-left: 1.5rem !important; }\n  .m-lg-5 {\n    margin: 3rem !important; }\n  .mt-lg-5,\n  .my-lg-5 {\n    margin-top: 3rem !important; }\n  .mr-lg-5,\n  .mx-lg-5 {\n    margin-right: 3rem !important; }\n  .mb-lg-5,\n  .my-lg-5 {\n    margin-bottom: 3rem !important; }\n  .ml-lg-5,\n  .mx-lg-5 {\n    margin-left: 3rem !important; }\n  .p-lg-0 {\n    padding: 0 !important; }\n  .pt-lg-0,\n  .py-lg-0 {\n    padding-top: 0 !important; }\n  .pr-lg-0,\n  .px-lg-0 {\n    padding-right: 0 !important; }\n  .pb-lg-0,\n  .py-lg-0 {\n    padding-bottom: 0 !important; }\n  .pl-lg-0,\n  .px-lg-0 {\n    padding-left: 0 !important; }\n  .p-lg-1 {\n    padding: 0.25rem !important; }\n  .pt-lg-1,\n  .py-lg-1 {\n    padding-top: 0.25rem !important; }\n  .pr-lg-1,\n  .px-lg-1 {\n    padding-right: 0.25rem !important; }\n  .pb-lg-1,\n  .py-lg-1 {\n    padding-bottom: 0.25rem !important; }\n  .pl-lg-1,\n  .px-lg-1 {\n    padding-left: 0.25rem !important; }\n  .p-lg-2 {\n    padding: 0.5rem !important; }\n  .pt-lg-2,\n  .py-lg-2 {\n    padding-top: 0.5rem !important; }\n  .pr-lg-2,\n  .px-lg-2 {\n    padding-right: 0.5rem !important; }\n  .pb-lg-2,\n  .py-lg-2 {\n    padding-bottom: 0.5rem !important; }\n  .pl-lg-2,\n  .px-lg-2 {\n    padding-left: 0.5rem !important; }\n  .p-lg-3 {\n    padding: 1rem !important; }\n  .pt-lg-3,\n  .py-lg-3 {\n    padding-top: 1rem !important; }\n  .pr-lg-3,\n  .px-lg-3 {\n    padding-right: 1rem !important; }\n  .pb-lg-3,\n  .py-lg-3 {\n    padding-bottom: 1rem !important; }\n  .pl-lg-3,\n  .px-lg-3 {\n    padding-left: 1rem !important; }\n  .p-lg-4 {\n    padding: 1.5rem !important; }\n  .pt-lg-4,\n  .py-lg-4 {\n    padding-top: 1.5rem !important; }\n  .pr-lg-4,\n  .px-lg-4 {\n    padding-right: 1.5rem !important; }\n  .pb-lg-4,\n  .py-lg-4 {\n    padding-bottom: 1.5rem !important; }\n  .pl-lg-4,\n  .px-lg-4 {\n    padding-left: 1.5rem !important; }\n  .p-lg-5 {\n    padding: 3rem !important; }\n  .pt-lg-5,\n  .py-lg-5 {\n    padding-top: 3rem !important; }\n  .pr-lg-5,\n  .px-lg-5 {\n    padding-right: 3rem !important; }\n  .pb-lg-5,\n  .py-lg-5 {\n    padding-bottom: 3rem !important; }\n  .pl-lg-5,\n  .px-lg-5 {\n    padding-left: 3rem !important; }\n  .m-lg-auto {\n    margin: auto !important; }\n  .mt-lg-auto,\n  .my-lg-auto {\n    margin-top: auto !important; }\n  .mr-lg-auto,\n  .mx-lg-auto {\n    margin-right: auto !important; }\n  .mb-lg-auto,\n  .my-lg-auto {\n    margin-bottom: auto !important; }\n  .ml-lg-auto,\n  .mx-lg-auto {\n    margin-left: auto !important; } }\n\n@media (min-width: 1200px) {\n  .m-xl-0 {\n    margin: 0 !important; }\n  .mt-xl-0,\n  .my-xl-0 {\n    margin-top: 0 !important; }\n  .mr-xl-0,\n  .mx-xl-0 {\n    margin-right: 0 !important; }\n  .mb-xl-0,\n  .my-xl-0 {\n    margin-bottom: 0 !important; }\n  .ml-xl-0,\n  .mx-xl-0 {\n    margin-left: 0 !important; }\n  .m-xl-1 {\n    margin: 0.25rem !important; }\n  .mt-xl-1,\n  .my-xl-1 {\n    margin-top: 0.25rem !important; }\n  .mr-xl-1,\n  .mx-xl-1 {\n    margin-right: 0.25rem !important; }\n  .mb-xl-1,\n  .my-xl-1 {\n    margin-bottom: 0.25rem !important; }\n  .ml-xl-1,\n  .mx-xl-1 {\n    margin-left: 0.25rem !important; }\n  .m-xl-2 {\n    margin: 0.5rem !important; }\n  .mt-xl-2,\n  .my-xl-2 {\n    margin-top: 0.5rem !important; }\n  .mr-xl-2,\n  .mx-xl-2 {\n    margin-right: 0.5rem !important; }\n  .mb-xl-2,\n  .my-xl-2 {\n    margin-bottom: 0.5rem !important; }\n  .ml-xl-2,\n  .mx-xl-2 {\n    margin-left: 0.5rem !important; }\n  .m-xl-3 {\n    margin: 1rem !important; }\n  .mt-xl-3,\n  .my-xl-3 {\n    margin-top: 1rem !important; }\n  .mr-xl-3,\n  .mx-xl-3 {\n    margin-right: 1rem !important; }\n  .mb-xl-3,\n  .my-xl-3 {\n    margin-bottom: 1rem !important; }\n  .ml-xl-3,\n  .mx-xl-3 {\n    margin-left: 1rem !important; }\n  .m-xl-4 {\n    margin: 1.5rem !important; }\n  .mt-xl-4,\n  .my-xl-4 {\n    margin-top: 1.5rem !important; }\n  .mr-xl-4,\n  .mx-xl-4 {\n    margin-right: 1.5rem !important; }\n  .mb-xl-4,\n  .my-xl-4 {\n    margin-bottom: 1.5rem !important; }\n  .ml-xl-4,\n  .mx-xl-4 {\n    margin-left: 1.5rem !important; }\n  .m-xl-5 {\n    margin: 3rem !important; }\n  .mt-xl-5,\n  .my-xl-5 {\n    margin-top: 3rem !important; }\n  .mr-xl-5,\n  .mx-xl-5 {\n    margin-right: 3rem !important; }\n  .mb-xl-5,\n  .my-xl-5 {\n    margin-bottom: 3rem !important; }\n  .ml-xl-5,\n  .mx-xl-5 {\n    margin-left: 3rem !important; }\n  .p-xl-0 {\n    padding: 0 !important; }\n  .pt-xl-0,\n  .py-xl-0 {\n    padding-top: 0 !important; }\n  .pr-xl-0,\n  .px-xl-0 {\n    padding-right: 0 !important; }\n  .pb-xl-0,\n  .py-xl-0 {\n    padding-bottom: 0 !important; }\n  .pl-xl-0,\n  .px-xl-0 {\n    padding-left: 0 !important; }\n  .p-xl-1 {\n    padding: 0.25rem !important; }\n  .pt-xl-1,\n  .py-xl-1 {\n    padding-top: 0.25rem !important; }\n  .pr-xl-1,\n  .px-xl-1 {\n    padding-right: 0.25rem !important; }\n  .pb-xl-1,\n  .py-xl-1 {\n    padding-bottom: 0.25rem !important; }\n  .pl-xl-1,\n  .px-xl-1 {\n    padding-left: 0.25rem !important; }\n  .p-xl-2 {\n    padding: 0.5rem !important; }\n  .pt-xl-2,\n  .py-xl-2 {\n    padding-top: 0.5rem !important; }\n  .pr-xl-2,\n  .px-xl-2 {\n    padding-right: 0.5rem !important; }\n  .pb-xl-2,\n  .py-xl-2 {\n    padding-bottom: 0.5rem !important; }\n  .pl-xl-2,\n  .px-xl-2 {\n    padding-left: 0.5rem !important; }\n  .p-xl-3 {\n    padding: 1rem !important; }\n  .pt-xl-3,\n  .py-xl-3 {\n    padding-top: 1rem !important; }\n  .pr-xl-3,\n  .px-xl-3 {\n    padding-right: 1rem !important; }\n  .pb-xl-3,\n  .py-xl-3 {\n    padding-bottom: 1rem !important; }\n  .pl-xl-3,\n  .px-xl-3 {\n    padding-left: 1rem !important; }\n  .p-xl-4 {\n    padding: 1.5rem !important; }\n  .pt-xl-4,\n  .py-xl-4 {\n    padding-top: 1.5rem !important; }\n  .pr-xl-4,\n  .px-xl-4 {\n    padding-right: 1.5rem !important; }\n  .pb-xl-4,\n  .py-xl-4 {\n    padding-bottom: 1.5rem !important; }\n  .pl-xl-4,\n  .px-xl-4 {\n    padding-left: 1.5rem !important; }\n  .p-xl-5 {\n    padding: 3rem !important; }\n  .pt-xl-5,\n  .py-xl-5 {\n    padding-top: 3rem !important; }\n  .pr-xl-5,\n  .px-xl-5 {\n    padding-right: 3rem !important; }\n  .pb-xl-5,\n  .py-xl-5 {\n    padding-bottom: 3rem !important; }\n  .pl-xl-5,\n  .px-xl-5 {\n    padding-left: 3rem !important; }\n  .m-xl-auto {\n    margin: auto !important; }\n  .mt-xl-auto,\n  .my-xl-auto {\n    margin-top: auto !important; }\n  .mr-xl-auto,\n  .mx-xl-auto {\n    margin-right: auto !important; }\n  .mb-xl-auto,\n  .my-xl-auto {\n    margin-bottom: auto !important; }\n  .ml-xl-auto,\n  .mx-xl-auto {\n    margin-left: auto !important; } }\n\n.text-monospace {\n  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }\n\n.text-justify {\n  text-align: justify !important; }\n\n.text-nowrap {\n  white-space: nowrap !important; }\n\n.text-truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap; }\n\n.text-left {\n  text-align: left !important; }\n\n.text-right {\n  text-align: right !important; }\n\n.text-center {\n  text-align: center !important; }\n\n@media (min-width: 576px) {\n  .text-sm-left {\n    text-align: left !important; }\n  .text-sm-right {\n    text-align: right !important; }\n  .text-sm-center {\n    text-align: center !important; } }\n\n@media (min-width: 768px) {\n  .text-md-left {\n    text-align: left !important; }\n  .text-md-right {\n    text-align: right !important; }\n  .text-md-center {\n    text-align: center !important; } }\n\n@media (min-width: 992px) {\n  .text-lg-left {\n    text-align: left !important; }\n  .text-lg-right {\n    text-align: right !important; }\n  .text-lg-center {\n    text-align: center !important; } }\n\n@media (min-width: 1200px) {\n  .text-xl-left {\n    text-align: left !important; }\n  .text-xl-right {\n    text-align: right !important; }\n  .text-xl-center {\n    text-align: center !important; } }\n\n.text-lowercase {\n  text-transform: lowercase !important; }\n\n.text-uppercase {\n  text-transform: uppercase !important; }\n\n.text-capitalize {\n  text-transform: capitalize !important; }\n\n.font-weight-light {\n  font-weight: 300 !important; }\n\n.font-weight-normal {\n  font-weight: 400 !important; }\n\n.font-weight-bold {\n  font-weight: 700 !important; }\n\n.font-italic {\n  font-style: italic !important; }\n\n.text-white {\n  color: #fff !important; }\n\n.text-primary {\n  color: #007bff !important; }\n\na.text-primary:hover, a.text-primary:focus {\n  color: #0062cc !important; }\n\n.text-secondary {\n  color: #6c757d !important; }\n\na.text-secondary:hover, a.text-secondary:focus {\n  color: #545b62 !important; }\n\n.text-success {\n  color: #28a745 !important; }\n\na.text-success:hover, a.text-success:focus {\n  color: #1e7e34 !important; }\n\n.text-info {\n  color: #17a2b8 !important; }\n\na.text-info:hover, a.text-info:focus {\n  color: #117a8b !important; }\n\n.text-warning {\n  color: #ffc107 !important; }\n\na.text-warning:hover, a.text-warning:focus {\n  color: #d39e00 !important; }\n\n.text-danger {\n  color: #dc3545 !important; }\n\na.text-danger:hover, a.text-danger:focus {\n  color: #bd2130 !important; }\n\n.text-light {\n  color: #f8f9fa !important; }\n\na.text-light:hover, a.text-light:focus {\n  color: #dae0e5 !important; }\n\n.text-dark {\n  color: #343a40 !important; }\n\na.text-dark:hover, a.text-dark:focus {\n  color: #1d2124 !important; }\n\n.text-body {\n  color: #212529 !important; }\n\n.text-muted {\n  color: #6c757d !important; }\n\n.text-black-50 {\n  color: rgba(0, 0, 0, 0.5) !important; }\n\n.text-white-50 {\n  color: rgba(255, 255, 255, 0.5) !important; }\n\n.text-hide {\n  font: 0/0 a;\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0; }\n\n.visible {\n  visibility: visible !important; }\n\n.invisible {\n  visibility: hidden !important; }\n\n@media print {\n  *,\n  *::before,\n  *::after {\n    text-shadow: none !important;\n    box-shadow: none !important; }\n  a:not(.btn) {\n    text-decoration: underline; }\n  abbr[title]::after {\n    content: " (" attr(title) ")"; }\n  pre {\n    white-space: pre-wrap !important; }\n  pre,\n  blockquote {\n    border: 1px solid #adb5bd;\n    page-break-inside: avoid; }\n  thead {\n    display: table-header-group; }\n  tr,\n  img {\n    page-break-inside: avoid; }\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3; }\n  h2,\n  h3 {\n    page-break-after: avoid; }\n  @page {\n    size: a3; }\n  body {\n    min-width: 992px !important; }\n  .container {\n    min-width: 992px !important; }\n  .navbar {\n    display: none; }\n  .badge {\n    border: 1px solid #000; }\n  .table {\n    border-collapse: collapse !important; }\n    .table td,\n    .table th {\n      background-color: #fff !important; }\n  .table-bordered th,\n  .table-bordered td {\n    border: 1px solid #dee2e6 !important; }\n  .table-dark {\n    color: inherit; }\n    .table-dark th,\n    .table-dark td,\n    .table-dark thead th,\n    .table-dark tbody + tbody {\n      border-color: #dee2e6; }\n  .table .thead-dark th {\n    color: inherit;\n    border-color: #dee2e6; } }\n',""])},function(n,t){n.exports=function(n){var t=[];return t.toString=function(){return this.map(function(t){var e=function(n,t){var e=n[1]||"",o=n[3];if(!o)return e;if(t&&"function"==typeof btoa){var r=function(n){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"}(o),i=o.sources.map(function(n){return"/*# sourceURL="+o.sourceRoot+n+" */"});return[e].concat(i).concat([r]).join("\n")}return[e].join("\n")}(t,n);return t[2]?"@media "+t[2]+"{"+e+"}":e}).join("")},t.i=function(n,e){"string"==typeof n&&(n=[[null,n,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<n.length;r++){var a=n[r];"number"==typeof a[0]&&o[a[0]]||(e&&!a[2]?a[2]=e:e&&(a[2]="("+a[2]+") and ("+e+")"),t.push(a))}},t}},function(n,t,e){var o={},r=function(n){var t;return function(){return void 0===t&&(t=n.apply(this,arguments)),t}}(function(){return window&&document&&document.all&&!window.atob}),i=function(n){var t={};return function(n){if("function"==typeof n)return n();if(void 0===t[n]){var e=function(n){return document.querySelector(n)}.call(this,n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}}(),a=null,l=0,s=[],d=e(8);function c(n,t){for(var e=0;e<n.length;e++){var r=n[e],i=o[r.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](r.parts[a]);for(;a<r.parts.length;a++)i.parts.push(b(r.parts[a],t))}else{var l=[];for(a=0;a<r.parts.length;a++)l.push(b(r.parts[a],t));o[r.id]={id:r.id,refs:1,parts:l}}}}function p(n,t){for(var e=[],o={},r=0;r<n.length;r++){var i=n[r],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};o[a]?o[a].parts.push(l):e.push(o[a]={id:a,parts:[l]})}return e}function u(n,t){var e=i(n.insertInto);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=s[s.length-1];if("top"===n.insertAt)o?o.nextSibling?e.insertBefore(t,o.nextSibling):e.appendChild(t):e.insertBefore(t,e.firstChild),s.push(t);else if("bottom"===n.insertAt)e.appendChild(t);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=i(n.insertInto+" "+n.insertAt.before);e.insertBefore(t,r)}}function m(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var t=s.indexOf(n);t>=0&&s.splice(t,1)}function f(n){var t=document.createElement("style");return void 0===n.attrs.type&&(n.attrs.type="text/css"),g(t,n.attrs),u(n,t),t}function g(n,t){Object.keys(t).forEach(function(e){n.setAttribute(e,t[e])})}function b(n,t){var e,o,r,i;if(t.transform&&n.css){if(!(i=t.transform(n.css)))return function(){};n.css=i}if(t.singleton){var s=l++;e=a||(a=f(t)),o=x.bind(null,e,s,!1),r=x.bind(null,e,s,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(e=function(n){var t=document.createElement("link");return void 0===n.attrs.type&&(n.attrs.type="text/css"),n.attrs.rel="stylesheet",g(t,n.attrs),u(n,t),t}(t),o=function(n,t,e){var o=e.css,r=e.sourceMap,i=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||i)&&(o=d(o));r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),l=n.href;n.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,e,t),r=function(){m(e),e.href&&URL.revokeObjectURL(e.href)}):(e=f(t),o=function(n,t){var e=t.css,o=t.media;o&&n.setAttribute("media",o);if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}.bind(null,e),r=function(){m(e)});return o(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap)return;o(n=t)}else r()}}n.exports=function(n,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=r()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var e=p(n,t);return c(e,t),function(n){for(var r=[],i=0;i<e.length;i++){var a=e[i];(l=o[a.id]).refs--,r.push(l)}n&&c(p(n,t),t);for(i=0;i<r.length;i++){var l;if(0===(l=r[i]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete o[l.id]}}}};var h=function(){var n=[];return function(t,e){return n[t]=e,n.filter(Boolean).join("\n")}}();function x(n,t,e,o){var r=e?"":o.css;if(n.styleSheet)n.styleSheet.cssText=h(t,r);else{var i=document.createTextNode(r),a=n.childNodes;a[t]&&n.removeChild(a[t]),a.length?n.insertBefore(i,a[t]):n.appendChild(i)}}},function(n,t){n.exports=function(n){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var e=t.protocol+"//"+t.host,o=e+t.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,t){var r,i=t.trim().replace(/^"(.*)"$/,function(n,t){return t}).replace(/^'(.*)'$/,function(n,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?n:(r=0===i.indexOf("//")?i:0===i.indexOf("/")?e+i:o+i.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")})}},function(n,t,e){"use strict";e.r(t);var o=e(0),r=e.n(o);e(2);var i=new class{constructor(){r.a.observable(this)}};const a="EVENT_GET_EXP",l="EVENT_GOT_EXP",s="EVENT_ROUTE",d="EVENT_GET_SUMMARY",c="EVENT_GOT_SUMMARY";var p=e(1),u=e.n(p);new class{constructor(){i.on(a,this.getexp.bind(this)),i.on(s,this.onroute.bind(this)),i.on(d,this.getsummary.bind(this))}getexp(){i.trigger(l,[{id:1,duration:"11/2018-Present",organization:"Wipro Ltd.",address:"",role:"Frontend Developer",content:"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information"},{id:2,duration:"10/2015-10/2018",organization:"Accenture Solutions Pvt. Ltd.",address:"",role:"Fullstack Developer",content:"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information"},{id:3,duration:"07/2012-10/2015",organization:"Axiom Consulting Pvt Ltd",address:"",role:"Software Engineer",content:"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information"},{id:4,duration:"07/2011-07/2012",organization:"DELOPT Pvt Ltd",address:"",role:"Trainee Engineer",content:"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information"},{id:5,duration:"01/2012-01/2014",organization:"N/A",address:"",role:"Volunteer Work",content:"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information"}])}getsummary(){i.trigger(c,{name:"Sriharsha",profile:"https://www.gravatar.com/avatar/3e7acced78cac99cde7d0fa5802a47c2?s=328&d=identicon&r=PG&f=1",role:"Computer Programmer (2011-present)",github:"https://github.com/sriharsha91",stackoverflow:"https://stackoverflow.com/users/5978922/sriharsha-bhat",summary:"Technology/Language agnostic computer programmer with 7+ year of experience in building various kind of computer applications from embedded C application to enterprise level web application. My main expertise are fullstack web applications, resuable frontend component development, interactive data visualizations, debugging/issue fixing/feature enhancement to existing code base, hosting/managing/scaling web/mobile backend on cloud services, arduino/AVR/IoT programming, browser plugin development",tags:["C","Javascript","Python","Ruby","Kotlin","Elisp","Elixir","Ruby On Rails","bottle","HTML","CSS","React","Angular","riot","d3","ES6","Web applications","Frontend","Backend","Devops","Embedded","Arduino","IoT","Cloud"]})}onroute(n){u()("html, body").animate({scrollTop:u()(n).offset().top},1e3,function(){window.location.hash=n})}},e(3);e(0).tag2("navbar",'<nav class="navbar fixed-top navbar-expand-lg bg-light"> <div class="collapse navbar-collapse align-items-center justify-content-center"> <div class="navbar-nav"> <a class="nav-item nav-link" onclick="{click}" href="#home">Home</a> <a class="nav-item nav-link" onclick="{click}" href="#about">About</a> <a class="nav-item nav-link" onclick="{click}" href="#projects">Projects </a> </div> </div> </nav>',"navbar .nav-item { cursor: pointer } navbar nav { height: 6%; }","",function(n){this.click=function(n){n.preventDefault(),i.trigger(s,n.target.hash)}.bind(this)}),e(0).tag2("about",'<ul> <li each="{item, index in data}"> <p> {item.duration} </p> <p> {item.organization} <span> {item.role} </span> <span> {item.content} </span> </p> </li> </ul>',"about { display: flex; align-items: center; justify-content: center; height: 100%; width: 100%; } about ul { list-style: none; width: 50%; padding: 0; } about ul li { display: flex; } about ul li p { display: block; padding: 1.5rem; line-height: 1.4; margin: 0; } about ul li p:nth-child(1){ position: relative; padding-right: 1.5rem; font-size: 1rem; line-height: 2.5; color: #aaa; } about ul li p:nth-child(1):after { content: ''; position: absolute; top: 26%; right: -1rem; display: block; width: 1.5rem; height: 1.5rem; background: #fff; border: 0.4rem solid #999; border-radius: 50%; } about ul li p:nth-child(2) { flex: 1; font-size: 1.5rem; border-left: 0.5rem solid #999; } about ul li p:last-of-type span{ display: block; font-size: 1rem; color: #aaa; font-style: italic; }","",function(n){this.on("mount",()=>{i.on(l,this.loadexp.bind(this)),i.trigger(a)}),this.on("unmount",()=>{i.off(l,this.loadexp.bind(this))}),this.loadexp=function(n){this.data=n,this.update()}.bind(this)}),e(0).tag2("home",'<div class="jumbotron jumbotron-fluid bg-transparent"> <div class="container"> <img class="mb-3" riot-src="{summary.profile}"> <h4 class="text-center"> {summary.name} </h4> <h5 class="text-center"> {summary.role} </h5> <div class="text-center"> <a target="_blank" href="{summary.github}"><i class="fa fa-github"></i> <span>sriharsha91</span> </a> <a target="_blank" href="{summary.stackoverflow}"><i class="fa fa-stack-overflow"></i> <span>sriharsha91</span></a> </div> <p class="text-center"> {summary.summary} </p> <div class="text-center pt-4"> <virtual each="{item, index in summary.tags}"> <span class="badge badge-light"> {item} </span> </virtual> </div> </div> </div>',"home { display: flex; align-items: center; justify-content: center; height: 100%; width: 100%; } home .badge { font-size: 1rem } home img { display: block; margin-left: auto; margin-right: auto; height: 10rem; }","",function(n){this.on("mount",()=>{i.on(c,this.onsummary.bind(this)),i.trigger(d)}),this.on("unmount",()=>{i.off(c,this.onsummary.bind(this))}),this.onsummary=function(n){this.summary=n,this.update()}.bind(this)});e(4);r.a.mount("app")}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,